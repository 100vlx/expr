!!(obj?.head(obj, div) == obj.obj)
!!false
!!ok
!!true
!("a" != nil)
!("a" != s)
!("a" < "b")
!("a" < s)
!("a" <= "a")
!("a" == nil)
!("a" == s)
!("a" > s)
!("a" endsWith "a")
!("a" endsWith s)
!("a" in obj)
!("a" matches s)
!("a" startsWith "a")
!("a" startsWith "c")
!("a" startsWith s)
!("b" != "b")
!("b" != s)
!("b" < "c")
!("b" < s)
!("b" <= "c")
!("b" <= s)
!("b" > "b")
!("b" > "c")
!("b" > s)
!("b" >= "c")
!("b" >= s)
!("b" contains "a")
!("b" contains "c")
!("b" contains s)
!("b" endsWith "a")
!("b" endsWith "b")
!("b" in obj)
!("b" startsWith "c")
!("c" != "c")
!("c" != nil)
!("c" < "b")
!("c" < s)
!("c" <= s)
!("c" == "c")
!("c" == nil)
!("c" == s)
!("c" > s)
!("c" >= "b")
!("c" >= s)
!("c" endsWith "b")
!("c" endsWith "c")
!("c" endsWith s)
!("c" in obj)
!("c" matches "c")
!("c" matches s)
!("c" startsWith "a")
!("c" startsWith s)
!(0 != 0)
!(0 != 1)
!(0 != a)
!(0 != f)
!(0 != nil)
!(0 < 0)
!(0 < 0.5)
!(0 < 2)
!(0 < a)
!(0 < b)
!(0 < f)
!(0 <= 0)
!(0 <= 0.5)
!(0 <= 1)
!(0 <= a)
!(0 <= b)
!(0 <= f)
!(0 == 0)
!(0 == 0.5)
!(0 == 1)
!(0 == 2)
!(0 == a)
!(0 == b)
!(0 == f)
!(0 == nil)
!(0 > 0)
!(0 > 2)
!(0 > b)
!(0 > f)
!(0 >= 0)
!(0 >= 0.5)
!(0 >= 1)
!(0 >= 2)
!(0 >= a)
!(0 >= b)
!(0 >= f)
!(0 in arr)
!(0.5 != 0)
!(0.5 != 0.5)
!(0.5 != 2)
!(0.5 != a)
!(0.5 != b)
!(0.5 != f)
!(0.5 != nil)
!(0.5 < 0)
!(0.5 < 2)
!(0.5 < a)
!(0.5 < b)
!(0.5 < f)
!(0.5 <= 0)
!(0.5 <= a)
!(0.5 <= b)
!(0.5 <= f)
!(0.5 == 2)
!(0.5 == a)
!(0.5 == b)
!(0.5 == f)
!(0.5 == nil)
!(0.5 > 0)
!(0.5 > 1)
!(0.5 > 2)
!(0.5 > a)
!(0.5 > b)
!(0.5 > f)
!(0.5 >= 0)
!(0.5 >= 0.5)
!(0.5 >= 1)
!(0.5 >= a)
!(0.5 >= b)
!(0.5 >= f)
!(1 < 0)
!(1 < 1)
!(1 < a)
!(1 < b)
!(1 <= 0)
!(1 <= a)
!(1 <= b)
!(1 <= f)
!(1 == 0)
!(1 == a)
!(1 == f)
!(1 == nil)
!(1 > a)
!(1 > b)
!(1 > f)
!(1 >= 0)
!(1 >= 0.5)
!(1 >= b)
!(1 in arr)
!(2 != 0.5)
!(2 != 2)
!(2 != a)
!(2 != b)
!(2 != f)
!(2 / a < f)
!(2 < 0)
!(2 < 1)
!(2 < 2)
!(2 < a)
!(2 < f)
!(2 <= 2)
!(2 <= b)
!(2 <= f)
!(2 == 0)
!(2 == 0.5)
!(2 == 1)
!(2 == 2)
!(2 == a)
!(2 == b)
!(2 == f)
!(2 > 0)
!(2 > a)
!(2 > f)
!(2 >= a)
!(2 >= b)
!(2 >= f)
!(2 in arr)
!(a != 0.5)
!(a != 1)
!(a != 2)
!(a != a)
!(a != b)
!(a != f)
!(a != nil)
!(a + 0.5 >= a)
!(a < 0)
!(a < 0.5)
!(a < 2)
!(a < a)
!(a < b)
!(a < div(0, a))
!(a < f)
!(a <= 0)
!(a <= 0.5)
!(a <= 2)
!(a <= a)
!(a <= b)
!(a <= f)
!(a == 0)
!(a == 0.5)
!(a == 1)
!(a == 2)
!(a == a)
!(a == b)
!(a == f)
!(a == nil)
!(a > 0)
!(a > 0.5)
!(a > 1)
!(a > 2 && div == add)
!(a > 2)
!(a > a)
!(a > b)
!(a > f)
!(a >= 0)
!(a >= 0.5)
!(a >= 1)
!(a >= 2)
!(a >= a)
!(a >= b)
!(a >= f)
!(a in arr)
!(add != add)
!(add != div)
!(add != nil)
!(add == add)
!(add == div)
!(add == nil)
!(arr != nil)
!(arr == arr)
!(arr == nil)
!(b != 0)
!(b != 0.5)
!(b != a)
!(b != b)
!(b != f)
!(b != nil)
!(b < 0)
!(b < 0.5 * 0.5)
!(b < 0.5)
!(b < 1)
!(b < a)
!(b < b)
!(b < f)
!(b <= 0)
!(b <= 1)
!(b <= a)
!(b <= b)
!(b <= f)
!(b == 0)
!(b == 0.5)
!(b == a)
!(b == b)
!(b == f)
!(b == nil)
!(b == obj.a)
!(b > 0)
!(b > 0.5)
!(b > 1)
!(b > 2)
!(b > a)
!(b > b)
!(b > f)
!(b >= 0)
!(b >= 0.5)
!(b >= 1)
!(b >= 2)
!(b >= a)
!(b >= b)
!(b >= f)
!(b in arr)
!(div != add)
!(div != div)
!(div != nil)
!(div == add)
!(div == div)
!(f != 0)
!(f != 0.5)
!(f != 1)
!(f != 2)
!(f != a)
!(f != b)
!(f != f)
!(f != nil)
!(f < 0)
!(f < 0.5)
!(f < 1)
!(f < a)
!(f < b)
!(f < f)
!(f < obj.b)
!(f <= 0)
!(f <= 0.5)
!(f <= 2)
!(f <= a)
!(f <= b)
!(f <= f)
!(f <= obj.b)
!(f == 0)
!(f == 0.5)
!(f == 1)
!(f == 2)
!(f == a)
!(f == b)
!(f == f)
!(f == nil)
!(f > 0)
!(f > 0.5)
!(f > 1)
!(f > a)
!(f > b)
!(f > div(b, a))
!(f > f)
!(f >= 0)
!(f >= 0.5)
!(f >= 1)
!(f >= 2)
!(f >= a)
!(f >= b)
!(f >= f)
!(false != nil)
!(false != ok)
!(false != true)
!(false && false)
!(false && ok)
!(false && true)
!(false == nil)
!(false and ok)
!(false or ok)
!(false || ok)
!(nil != "a")
!(nil != "c")
!(nil != 0)
!(nil != 0.5)
!(nil != 2)
!(nil != a)
!(nil != add)
!(nil != arr)
!(nil != b)
!(nil != div)
!(nil != f)
!(nil != false)
!(nil != nil)
!(nil != obj)
!(nil != ok)
!(nil != s)
!(nil != true)
!(nil == "b")
!(nil == 0)
!(nil == 0.5)
!(nil == 1)
!(nil == a)
!(nil == add)
!(nil == arr)
!(nil == b)
!(nil == div)
!(nil == false)
!(nil == nil)
!(nil == obj)
!(nil == ok)
!(nil == s)
!(nil in arr)
!(nil in obj)
!(obj != nil)
!(obj != obj)
!(obj == nil)
!(obj == obj)
!(obj.b == a ** a)
!(ok != false)
!(ok != nil)
!(ok != ok)
!(ok != true)
!(ok && false)
!(ok && ok)
!(ok && true)
!(ok == false)
!(ok == nil)
!(ok == ok)
!(ok == true)
!(ok and false)
!(ok and ok)
!(ok and true)
!(ok or ok)
!(ok or true)
!(ok || false)
!(ok || ok)
!(ok || true)
!(s != "b")
!(s != "c")
!(s != nil)
!(s != s)
!(s < "a")
!(s < "b")
!(s < "c")
!(s < s)
!(s <= "c")
!(s <= s)
!(s == "a")
!(s == "b")
!(s == "c")
!(s == nil)
!(s == s)
!(s > "b")
!(s > s)
!(s >= "a")
!(s >= s)
!(s contains "c")
!(s contains s)
!(s endsWith "a")
!(s endsWith "c")
!(s endsWith s)
!(s in obj)
!(s matches "a")
!(s matches "b")
!(s matches s || ok)
!(s matches s)
!(s startsWith "a")
!(s startsWith "b")
!(s startsWith s)
!(string(s) startsWith "b" != false)
!(true != ok)
!(true != true)
!(true && false)
!(true && ok)
!(true == ok)
!(true == true)
!(true and true)
!(true or ok)
!(true || false)
!(true || ok)
!(true || true)
!all(arr, 2 != a)
!all(arr, false)
!all(arr, ok)
!all(arr, true)
!any(arr, false)
!any(arr, ok)
!any(arr, true)
!false && obj != obj.obj
!false && obj.b
!false == obj.head(ok)
!false ? "a" : s
!false ? "b" : add
!false ? "b" : f
!false ? "c" : f
!false ? 0 : "b"
!false ? 0 : false
!false ? 0 : s
!false ? 2 : false
!false ? a : add
!false ? a : false
!false ? a : s
!false ? add : ok
!false ? add : s
!false ? b : s
!false ? div : s
!false ? f : f
!false ? f : obj.head(obj)
!false ? false : b
!false ? nil : "a"
!false ? nil : f
!false ? nil : true
!false ? obj : nil
!false ? obj : obj
!false ? ok : obj
!false ? ok : ok
!false ? s : add
!false ? s : nil
!false ? s : obj?.head(a.head("a"))
!false ? true : arr
!false ? true : div
!false or obj.a
!false or obj?.fn(obj, div)
!false or ok
!fromJSON(string(false))
!hasSuffix("a", s)
!none(arr, false)
!none(arr, ok)
!none(arr, true)
!not (a < 0)
!not (f != 1)
!not (f == 0)
!not (s != s)
!not (s contains s)
!not false
!not ok
!not true
!obj.head(2 == s)
!obj.head(add != nil)
!obj.head(arr != s)
!obj.head(false == add)
!obj.head(false)
!obj.head(ok)
!obj.head(ok, 1, obj)
!obj.head(ok, add)
!obj.head(ok, map("a", 2))
!obj.head(ok, nil)
!obj.head(ok, s)
!obj.head(ok, s, obj, div, s)
!obj.head(true, 0, arr)
!obj.head(true, a)
!obj.head(true, b, nil, f)
!obj.head(true, s)
!obj?.head(any(s, true))
!obj?.head(false)
!obj?.head(false, "b")
!obj?.head(false, div, 2, obj)
!obj?.head(false, true)
!obj?.head(ok)
!obj?.head(ok, arr)
!obj?.head(ok, div, ok)
!obj?.head(ok, false)
!obj?.head(ok, nil, "c")
!obj?.head(ok, ok)
!obj?.head(ok, s)
!obj?.head(ok, true, b)
!obj?.head(true)
!obj?.head(true, 0)
!ok
!ok != (ok or false)
!ok != ok
!ok && a == 1
!ok && obj.b
!ok && ok
!ok == ok
!ok ? "a" : 0.5
!ok ? "a" : div
!ok ? "b" : 0
!ok ? "b" : obj.b
!ok ? "b" : ok
!ok ? "c" : 0.5
!ok ? 0 : add
!ok ? 0.5 : 0
!ok ? 0.5 : 0.5
!ok ? 0.5 : div
!ok ? 1 : nil
!ok ? 2 : "b"
!ok ? a : arr
!ok ? a : b
!ok ? a : div
!ok ? a : s
!ok ? a : true
!ok ? add : 1
!ok ? add : a
!ok ? add : add
!ok ? add : f
!ok ? add : false
!ok ? add : obj
!ok ? add : ok
!ok ? add : s
!ok ? arr : b
!ok ? arr == arr : div
!ok ? b : "a"
!ok ? b : "b"
!ok ? b : 1
!ok ? b : a
!ok ? b : f
!ok ? div : a
!ok ? div : b
!ok ? div : obj
!ok ? div : s
!ok ? f : a
!ok ? f : div
!ok ? f : s
!ok ? false : 0
!ok ? false : f
!ok ? nil : div
!ok ? obj : 1
!ok ? obj : ok
!ok ? ok : a
!ok ? ok : arr
!ok ? ok : false
!ok ? ok : nil
!ok ? ok : ok
!ok ? s : 0.5
!ok ? s : obj
!ok ? true : s
!ok and a <= b
!ok and arr == nil
!ok and obj.a
!ok and obj.a?.obj
!ok and obj?.a
!ok and obj[nil]
!ok and ok
!ok or nil != a
!ok or obj?.a
!ok or obj?.b
!ok or ok
!ok or ok || false
!ok || nil == s
!ok || obj.a
!ok || obj.fn(2)
!ok || ok
!one(arr, false)
!one(arr, ok)
!true != obj.a
!true && obj?.obj
!true && ok == nil
!true == obj.obj
!true == obj?.obj
!true == ok
!true ? "a" : a
!true ? "a" : ok
!true ? 0 : true
!true ? 0.5 : b
!true ? 1 : add
!true ? a : add
!true ? a : arr
!true ? add : ok
!true ? arr : 0.5
!true ? div : ok
!true ? div : true
!true ? f : 0
!true ? f : f
!true ? false : b
!true ? nil : "b"
!true ? nil : "c"
!true ? nil : div
!true ? nil : ok
!true ? obj : add
!true ? ok : add
!true ? ok : obj
!true ? s : "a"
!true ? s : false
!true ? true : a
!true ? true : f
!true and f != b
!true and nil != "a"
!true and obj.a
!true and ok
!true or obj?.head(1, nil, ok, div, arr)
!true || !true
"a" != nil or a <= 0
"a" != obj.a
"a" != obj.b
"a" != obj.obj
"a" != obj.obj.b
"a" != obj?.a
"a" != obj?.b
"a" != obj?.fn(b)
"a" != obj?.head(add)
"a" != obj?.head(f == ok)
"a" != obj?.head(ok and nil)
"a" != obj?.obj
"a" < "a" ? obj.fn(true, 2, div, arr) : ok
"a" < "c" && obj.head(ok)
"a" < s || ok && false
"a" <= s && ok
"a" == "a" || ok
"a" == nil != ok
"a" == nil == obj?.head(obj, "c", b, 0, true)
"a" == obj.a
"a" == obj.b
"a" == obj.obj
"a" == obj?.a
"a" == obj?.b
"a" == obj?.head(-0.5)
"a" == obj?.head(filter("a", false))
"a" == obj?.obj
"a" == s && ok
"a" == s == ok
"a" == s ? s : f
"a" > s or obj.fn(b)
"a" >= "a" && 0 == a
"a" >= "b" || obj?.head(div, 2, div)
"a" >= "b" || obj?.obj
"a" >= obj.head(string(s contains "b"))
"a" >= obj?.head(s)
"a" >= s ? s : string(s)
"a" contains "c" && any(arr, true)
"a" contains "c" == obj?.a
"a" contains s and obj?.obj
"a" contains s and ok
"a" endsWith s != ok
"a" endsWith s || obj?.head(div)
"a" in obj && obj.head(1)
"a" in obj.obj
"a" in obj?.obj
"a" matches "b" || obj?.b
"a" matches s and obj?.b
"b" != "b" == true ? b : nil
"b" != obj.a
"b" != obj.b
"b" != obj.head(f)
"b" != obj.obj
"b" != obj.obj.a
"b" != obj.obj?.a
"b" != obj?.a
"b" != obj?.b
"b" != obj?.fn(a)
"b" != obj?.obj
"b" != obj?.obj.obj
"b" != s or ok
"b" + "a" contains s + s
"b" + s == obj.a
"b" + s in obj ? div : f
"b" < "c" != ok
"b" < "c" && obj.head(div, b, b)
"b" < s and obj?.head(div, ok)
"b" <= "a" and ok
"b" <= "a" or obj?.a
"b" <= "b" and nil == ok
"b" <= obj.head(s)
"b" == obj.a
"b" == obj.b
"b" == obj.obj
"b" == obj.obj?.obj
"b" == obj?.a
"b" == obj?.b
"b" == obj?.head(div)
"b" == obj?.obj
"b" == obj[string(add)]
"b" == s != obj.b
"b" == s == obj.obj
"b" > "b" ? f : obj
"b" > "b" and !true
"b" > s && arr != arr
"b" contains "b" || obj.a
"b" endsWith "b" || add != obj.a
"b" in obj.obj
"b" in obj?.head(obj?.obj)
"b" in obj?.obj
"b" matches obj?.head(s)
"b" startsWith s ? a : s
"b" startsWith s or ok
"b" startsWith s || true && false
"c" != "a" || ok
"c" != "a" || ok ? add : add
"c" != "b" && a > a
"c" != "c" == ok
"c" != nil || false or ok
"c" != obj.a
"c" != obj.b
"c" != obj.fn(b)
"c" != obj.obj
"c" != obj.obj?.b
"c" != obj?.a
"c" != obj?.b
"c" != obj?.head(obj?.obj)
"c" != obj?.obj
"c" != obj?.obj.a
"c" != obj?.obj?.b
"c" != s != ok
"c" + s matches s
"c" < "b" != ok
"c" < s == obj.obj
"c" < s ? add : min(0.5)
"c" < s || obj?.fn(b)
"c" == obj.a
"c" == obj.b
"c" == obj.head(0 ^ b)
"c" == obj.obj
"c" == obj.obj?.b
"c" == obj?.a
"c" == obj?.b
"c" == obj?.obj
"c" == s and "c" < "b"
"c" == s || false != nil
"c" > "a" && obj.b
"c" > "c" and obj?.b
"c" > s ? obj : s
"c" >= "b" or obj.fn("c")
"c" >= s ? arr : obj.b
"c" contains "c" || 1 >= a
"c" contains s && obj?.obj.a
"c" endsWith s == obj?.obj
"c" endsWith s or s < s
"c" endsWith s || ok
"c" in obj or obj?.obj
"c" in obj || true ? b : div
"c" in obj.head(arr)
"c" in obj.obj
"c" in obj?.obj
"c" matches s && obj?.obj
"c" matches s ? div : add
"c" startsWith "c" && ok
"c" startsWith "c" ? s : ok
"c" startsWith s and nil != 1
(0 % a) ^ (a * f)
(0 * 0) ^ f
(0 * 2) ^ obj?.head(1, "b", s, a, s)
(0 * f) ^ f
(0 + 0) ^ obj?.a
(0 + 0.5) ^ (a - b)
(0 + 1) ^ a ^ f
(0 + 2) ^ (a - f)
(0 + a) % a
(0 + a) ^ a
(0 + b) ** b
(0 + f) * f
(0 + f) / b
(0 + f) / obj.b
(0 + f) ^ f
(0 - 0) * f
(0 - 0) ^ (f * b)
(0 - a) * a
(0 - a) ^ a
(0 - b) / 0.5 ** f
(0 - b) / a
(0 - b) ^ f
(0 - f) * max(0)
(0 / 0) ^ f
(0 / 2) ^ obj?.b
(0.5 * 0) ** (0 * 2)
(0.5 * a) ** a
(0.5 * b) ^ obj.a
(0.5 * f) ** f
(0.5 + a) / f
(0.5 + b) ** b
(0.5 + b) ^ obj.b
(0.5 - f) / b
(0.5 / a) ^ a
(0.5 / f) ** max(0.5)
(0.5 / f) ^ obj?.a
(1 % a) ^ obj.head(2)
(1 * a) ^ a
(1 - 0) / f
(1 - 2) ** (a * a)
(1 - b) ^ min(0)
(1 - f) / a
(1 - f) ^ b
(1 / 0) ** obj?.a
(1 / 0) ^ f
(1 / 0.5 + f) * f
(1 / b) ^ f
(1 / f) ** a
(1 / f) ** b
(2 % a) ** f
(2 % a) ^ -b
(2 % b) ** b
(2 % b) ** f
(2 % b) ** obj?.head(f, add, ok, false)
(2 * a) ^ b
(2 + 0) ** a
(2 + 0.5) / min(f)
(2 + 2) ^ len(s) * f
(2 + f) * a ** 0
(2 + f) ** b
(2 - 2) ** -0
(2 - 2) ** b
(2 - 2) / f
(2 - a) ^ a
(2 - a) ^ add(0, a)
(2 - f) / obj.a
(2 / f) ** (a - f)
(2 / f) ^ f == b
(2 / f) ^ obj.a
(a % 2) ^ b
(a % a) ** obj.head(b, b)
(a * a) ** f
(a * a) ** obj.b
(a * f) ^ a
(a * f) ^ f ** a
(a + 0) % a
(a + 0) / obj.b
(a + a) % obj?.a
(a + a) / b
(a + b) % a
(a + b) % add(a, b)
(a - 0) / a
(a - 0) / b
(a - 0) ^ int(b)
(a - 0.5) / (0.5 + 0)
(a - 0.5) / obj.head(a)
(a - 0.5) / obj?.b
(a - 0.5) ^ b
(a - 1) ^ f
(a - 2) % a
(a - a) % b
(a - b) * b
(a - b) ** a ** 0
(a - b) ^ f
(a - f) * b
(a - f) * f
(a - f) * obj.head(f)
(a - f) ^ a
(a / 1) ** f
(a / b) ^ f
(a / f) ** a
(a / f) ^ b
(a / f) ^ min(0)
(b % 2) ** b
(b % 2) ^ add(b, b)
(b % a) ^ b
(b * 0) ** a
(b * 0) ** f
(b * a) ** a
(b * b) ^ a ** 0
(b * f) ^ float(a)
(b + 0) * div(b, b)
(b + 0) / b
(b + 0.5) ** f
(b + 2) % b
(b + 2) ** f
(b + a) ** f
(b + b) * a
(b + b) ^ b
(b + b) ^ obj?.b
(b + f) / b
(b + f) ^ a
(b - 0) * b
(b - 0) / b != f
(b - 1) * obj?.b
(b - 1) / a
(b - a) ** obj.a
(b - a) / a
(b - b) * b
(b - f) * f
(b - f) ** b
(b - f) ^ (a - 1)
(b / 0) ^ f
(b / 1) ** b
(b / a) ^ (b / 1)
(b / a) ^ obj?.obj.obj?.b
(b / b) ** f
(f * 0.5) ** obj?.a
(f * a) ** obj.fn(1)
(f * b) ** f
(f * b) ^ f
(f * f) ** a ** a
(f * f) ** b
(f * f) ** f
(f * f) ^ b
(f + 0) * b ^ b
(f + 0) ** f
(f + 0.5) ^ f
(f + a) * a
(f + a) ** f
(f + a) ** obj?.a
(f + b) * f
(f + b) ** add(2, b)
(f + b) ** obj.b
(f + f) * b
(f + f) ** arr[2]
(f + f) / b
(f + f) ^ (1 / 2)
(f + f) ^ arr[a]
(f + f) ^ b
(f + f) ^ f
(f - 0) ** obj?.fn(b)
(f - 0) / a
(f - 0) ^ (f / 0.5)
(f - 0) ^ a
(f - 0.5) * f
(f - 0.5) / f
(f - 0.5) ^ a
(f - 2) * a
(f - a) * -a
(f - a) ** b ^ f
(f - a) / add(a, b)
(f - b) ** b
(f / a) ^ f
(f / a) ^ obj.b
(f / b) ** b
(false or false) != obj?.b
(false or false) and s >= "b"
(false or true) != obj.head(add)
(false || true) == obj?.b
(min(f, f) / b) ** (b % obj?.b)
(ok ? true : 0) ? div : arr
(ok ? true : 0) ? obj?.b : (true ? false : true)
(ok and ok) != ok
(ok or false) and false ? 2 : div
(ok or ok) == obj?.a
(ok or ok) == ok
(ok or ok) and obj.obj?.a
(ok or true) and ok
(ok || ok) == ok
(ok || ok) and obj.obj
(ok || ok) and ok
(true and true) != obj.a
(true or ok) != ok
(true || false) and a == 0.5
(true || ok) == obj.a
(true || true) != a + obj?.b
-((f - 1) ** len(s))
-(0 % 1)
-(0 % 2)
-(0 % a)
-(0 % b)
-(0 * 0)
-(0 * b)
-(0 * f * obj?.b)
-(0 * f)
-(0 ** 0)
-(0 ** a)
-(0 ** b)
-(0 ** f)
-(0 + 0)
-(0 + 0.5)
-(0 + 1)
-(0 + 2)
-(0 + a)
-(0 + f)
-(0 - 0)
-(0 - 0.5)
-(0 - 1)
-(0 - 2)
-(0 - a)
-(0 - b)
-(0 - f)
-(0 / 0)
-(0 / 0.5)
-(0 / 2)
-(0 / a)
-(0 / b)
-(0 / f)
-(0 ^ 0)
-(0 ^ 0.5)
-(0 ^ 2)
-(0 ^ a)
-(0 ^ b)
-(0 ^ f)
-(0.5 * 0.5)
-(0.5 * 2)
-(0.5 * a)
-(0.5 * b)
-(0.5 * f)
-(0.5 ** 0)
-(0.5 ** 0.5)
-(0.5 ** a)
-(0.5 ** b)
-(0.5 ** f)
-(0.5 + 0)
-(0.5 + 1)
-(0.5 + 2)
-(0.5 + a)
-(0.5 + b)
-(0.5 + f)
-(0.5 - 0)
-(0.5 - 0.5)
-(0.5 - 1)
-(0.5 - 2)
-(0.5 - a)
-(0.5 - b)
-(0.5 - f)
-(0.5 / 0)
-(0.5 / 2)
-(0.5 / a)
-(0.5 / b)
-(0.5 / f)
-(0.5 ^ 0.5)
-(0.5 ^ 2)
-(0.5 ^ a)
-(0.5 ^ b)
-(1 % 2)
-(1 % a)
-(1 % b)
-(1 * 0)
-(1 * 1)
-(1 * a)
-(1 ** a)
-(1 ** f)
-(1 + 1)
-(1 + a)
-(1 + b)
-(1 - 0)
-(1 - 0.5) / a
-(1 - a)
-(1 - b)
-(1 - f)
-(1 / 0)
-(1 / 0.5)
-(1 / 2)
-(1 / f)
-(1 ^ 0.5)
-(1 ^ b)
-(1 ^ f)
-(2 % a)
-(2 % b)
-(2 * 0)
-(2 * 2)
-(2 * b)
-(2 * f)
-(2 ** b)
-(2 + 0.5)
-(2 + a)
-(2 + b)
-(2 + f)
-(2 - 0.5)
-(2 - 2)
-(2 - b)
-(2 / 0)
-(2 / 0.5)
-(2 / a)
-(2 ^ 1)
-(2 ^ 2)
-(2 ^ a)
-(a % 1)
-(a % 2)
-(a % a)
-(a % b)
-(a * 0)
-(a * 1)
-(a * 2)
-(a * a)
-(a * b)
-(a * f)
-(a ** 0)
-(a ** 0.5)
-(a ** a)
-(a ** b)
-(a ** f)
-(a + 0)
-(a + 1)
-(a + 2)
-(a + a)
-(a + b)
-(a + f)
-(a - 0)
-(a - 1)
-(a - 2)
-(a - a)
-(a - b)
-(a - f)
-(a / 0)
-(a / 0.5)
-(a / 1)
-(a / 2)
-(a / a)
-(a / b)
-(a ^ 0)
-(a ^ 0.5)
-(a ^ 2)
-(a ^ a)
-(a ^ b)
-(a ^ f)
-(b % 1)
-(b % a)
-(b % b)
-(b % obj.a)
-(b * 0)
-(b * 0.5)
-(b * 1)
-(b * 2)
-(b * a)
-(b * b)
-(b * f)
-(b ** 0)
-(b ** 0.5)
-(b ** 1)
-(b ** a)
-(b ** b)
-(b ** f)
-(b + 0)
-(b + 1)
-(b + 2)
-(b + a)
-(b + b)
-(b + f)
-(b - 0.5)
-(b - 1)
-(b - 2)
-(b - 2) - b
-(b - a)
-(b - b)
-(b - f)
-(b / 0)
-(b / 0.5)
-(b / 1)
-(b / 2)
-(b / a)
-(b / b)
-(b / f)
-(b ^ 0)
-(b ^ 0.5)
-(b ^ 1)
-(b ^ 2)
-(b ^ a)
-(b ^ b)
-(b ^ f)
-(f * 0)
-(f * 0.5)
-(f * 1)
-(f * 2)
-(f * a)
-(f * b)
-(f * f)
-(f * int(a))
-(f ** 0)
-(f ** 0.5)
-(f ** 1)
-(f ** a)
-(f ** b)
-(f ** f)
-(f + 2)
-(f + a)
-(f + b)
-(f + f)
-(f + f) - b
-(f - 0)
-(f - 1)
-(f - 2)
-(f - a)
-(f - b)
-(f - f)
-(f - obj.a)
-(f / 0)
-(f / 0.5)
-(f / a)
-(f / b)
-(f / f)
-(f ^ 0)
-(f ^ 0.5)
-(f ^ 1)
-(f ^ 2)
-(f ^ a)
-(f ^ b)
-(f ^ f)
-(obj.fn(b) + b)
-(obj.head(1) - a)
-(obj.head(b, 2, f, nil) / obj.a)
--(a % b)
--(f ** a)
--0
--0.5
--1
--2
--a
--abs(b)
--b
--f
--int(0.5)
--obj.a
--obj.b
--obj.b % b
-0 != a ? ok : 0
-0 != b
-0 != f
-0 != obj.b
-0 % a
-0 * obj.fn(2)
-0 ** a
-0 ** b
-0 - a
-0 - abs(2)
-0 - div(a, a)
-0 - obj.a
-0 - obj.b
-0 .. 1 * a
-0 .. obj.b
-0 / b
-0 / obj.a
-0 / obj.head(1, a)
-0 / obj?.a
-0 < a
-0 < b
-0 < f
-0 <= a
-0 <= f
-0 == a
-0 == b / 0
-0 == nil ? b : obj
-0 > b * f
-0 > f
-0 >= -0
-0 >= a
-0 >= obj?.b
-0 ^ -0
-0 ^ a
-0 ^ b
-0 ^ f
-0 in arr
-0.5 != 0.5 ? s : b
-0.5 != a
-0.5 != nil ? false : nil
-0.5 * obj?.b
-0.5 + b
-0.5 - add(0, a)
-0.5 - f
-0.5 / a
-0.5 / obj?.fn(a)
-0.5 < f
-0.5 <= f ? f : add
-0.5 == 0 % b
-0.5 >= 0 == ok
-0.5 >= obj.b
-0.5 ^ (a / b)
-1 % a
-1 * -b
-1 ** b
-1 ** obj.b
-1 + b
-1 - b
-1 - f
-1 .. obj?.a
-1 / b
-1 > 2 != nil
-1 > a
-1 > b
-1 > obj?.b
-1 >= f ? arr : div
-1 ^ (f / a)
-1 ^ b
-1 ^ obj.head(a)
-2 != b
-2 != f
-2 * f
-2 ** f
-2 ** min(0, f)
-2 - 0.5 ^ 0
-2 .. -b
-2 .. a
-2 < abs(1)
-2 < f ** a
-2 < obj.b
-2 == obj?.b
-2 ^ a
-2 ^ b
-2 ^ f
-a
-a != f
-a != obj.fn(a)
-a != obj.obj?.a
-a % int(a)
-a * b
-a * obj.a
-a ** a
-a ** f
-a ** float(2)
-a ** max(a)
-a + b
-a + obj.b
-a - f
-a .. a
-a .. obj.a
-a / f
-a / max(0.5)
-a < f
-a < obj?.a
-a <= a ** b
-a == 0 + b
-a == a
-a > add(a, a)
-a > b
-a > get(arr, 1)
-a > obj.b
-a >= a - 0
-a >= obj?.b
-a ^ a
-a ^ f
-abs(0)
-abs(0.5)
-abs(1)
-abs(2 / f)
-abs(2)
-abs(a)
-abs(b)
-abs(f)
-add(0, 0)
-add(0, 2)
-add(0, a)
-add(0, b)
-add(1, 0)
-add(1, 1)
-add(1, 2)
-add(1, a)
-add(1, b)
-add(2, 0)
-add(a, 0)
-add(a, 2)
-add(a, a)
-add(a, b)
-add(b, 0)
-add(b, 1)
-add(b, 2)
-add(b, a)
-add(b, b)
-add(b, ok ? a : "b")
-arr[0]
-arr[1]
-arr[2]
-arr[a]
-arr[b]
-b
-b != a
-b != b
-b != f
-b != obj.a
-b % b
-b % b % obj.b
-b % obj.b
-b % obj.fn(a)
-b * a
-b * b
-b ** a
-b + a
-b + obj?.b
-b - a
-b - b
-b - f
-b - obj.a
-b .. b
-b / a ^ 0.5
-b / b
-b / obj?.a
-b < 2 / 0
-b < b
-b < f
-b <= f
-b <= obj?.a
-b <= obj?.b
-b == int(0)
-b == len("b")
-b == max(0)
-b > a
-b > a * 0.5
-b > b
-b > b ? b : 1
-b > div(2, b)
-b > obj.b
-b >= a
-b >= b
-b >= f
-b >= f ? b : true
-b >= obj.head(a)
-b ^ (b - 0.5)
-b ^ a
-count(arr, false)
-count(arr, ok)
-count(arr, true)
-div(0, 2)
-div(0, a)
-div(0, b)
-div(1, 1)
-div(1, 2)
-div(1, b)
-div(2, 1)
-div(2, 1) / a
-div(2, a)
-div(2, b)
-div(a, 1)
-div(a, 2)
-div(a, a)
-div(a, b)
-div(a, obj.a)
-div(b, 1)
-div(b, a)
-div(b, b)
-f
-f != a
-f != f
-f != f != true
-f != len(s)
-f != obj.b
-f != obj.fn(b)
-f * a
-f * b ^ a
-f ** -a
-f ** b
-f + a
-f + b
-f + f
-f + int(b)
-f + obj.a
-f - a * 1
-f - arr[b]
-f - b
-f - f
-f / add(a, b)
-f / b
-f / f
-f / f ^ b
-f < a
-f < f ? ok : b
-f < f ^ b
-f < obj.a
-f <= a
-f <= f
-f == add(0, b)
-f == f
-f == obj.obj
-f == obj?.obj
-f > a
-f > f / a
-f > len(s)
-f > obj.a
-f >= 0 / b
-f >= a
-f >= a * a
-f >= b
-f >= obj.a
-f ^ a
-f ^ a ** f
-f ^ f
-first(arr)
-first(arr) < f
-first(arr) ^ a
-float(0)
-float(0.5)
-float(2)
-float(a)
-float(b)
-float(f)
-get(arr, 0)
-get(arr, 1)
-get(arr, 2)
-get(arr, a)
-get(arr, b)
-indexOf(s, "c")
-indexOf(s, s)
-int(0)
-int(0.5)
-int(1)
-int(2)
-int(a)
-int(b)
-int(f)
-int(obj?.a)
-last(arr)
-len("b")
-len(arr)
-len(map(arr, obj))
-len(obj)
-len(s)
-max(0)
-max(0.5)
-max(0.5, f)
-max(1)
-max(1, 2)
-max(1, a)
-max(2)
-max(a)
-max(a, f)
-max(b)
-max(b, 0, f)
-max(f)
-max(f, b)
-min(0)
-min(0, b)
-min(0.5, b)
-min(1)
-min(2)
-min(a)
-min(a, b)
-min(b)
-min(b, 1)
-min(f)
-min(f, 0)
-obj.a
-obj.a > f
-obj.a ^ b
-obj.b
-obj.fn(0)
-obj.fn(1)
-obj.fn(2)
-obj.fn(a - b)
-obj.fn(a)
-obj.fn(b)
-obj.fn(count("c", true))
-obj.head(0)
-obj.head(0, arr)
-obj.head(0, obj)
-obj.head(0, s)
-obj.head(0.5)
-obj.head(0.5, add)
-obj.head(0.5, b, add)
-obj.head(0.5, div, ok)
-obj.head(0.5, f)
-obj.head(0.5, true)
-obj.head(1)
-obj.head(1, "a", nil)
-obj.head(1, f)
-obj.head(1, ok, arr)
-obj.head(2)
-obj.head(2, 1, b)
-obj.head(2, arr)
-obj.head(2, ok, 2)
-obj.head(a)
-obj.head(a, div, "a", b)
-obj.head(a, f, add, "a")
-obj.head(a, nil)
-obj.head(a, true, obj)
-obj.head(b)
-obj.head(b, "b", s, ok)
-obj.head(b, add)
-obj.head(b, b, ok, obj)
-obj.head(b, f)
-obj.head(b, nil, add, ok)
-obj.head(b, nil, f)
-obj.head(b, nil, true)
-obj.head(f)
-obj.head(f, 0, add)
-obj.head(f, b)
-obj.head(f, ok)
-obj.head(first("a"))
-obj.head(obj, 0.5)?.b
-obj.obj.a
-obj.obj.b
-obj.obj.obj?.a
-obj.obj.obj?.b
-obj.obj?.a
-obj.obj?.b
-obj.obj?.obj?.obj
-obj?.a
-obj?.a != a
-obj?.a > b
-obj?.b
-obj?.fn(0)
-obj?.fn(1)
-obj?.fn(2)
-obj?.fn(a)
-obj?.fn(b)
-obj?.head(0)
-obj?.head(0, 0.5, s)
-obj?.head(0, 2)
-obj?.head(0, add)
-obj?.head(0, b)
-obj?.head(0, nil)
-obj?.head(0, nil, obj, obj, 2)
-obj?.head(0, obj, ok, nil)
-obj?.head(0, s)
-obj?.head(0.5)
-obj?.head(0.5, a)
-obj?.head(0.5, add)
-obj?.head(0.5, f, arr)
-obj?.head(0.5, obj)
-obj?.head(1)
-obj?.head(2)
-obj?.head(a)
-obj?.head(a, "c", "a")
-obj?.head(a, 0, f, b, a)
-obj?.head(a, 1, a)
-obj?.head(a, a)
-obj?.head(a, obj, obj)
-obj?.head(a, ok, b)
-obj?.head(a, s)
-obj?.head(b)
-obj?.head(b, 0)
-obj?.head(b, 0, obj)
-obj?.head(b, 0.5, arr)
-obj?.head(b, 1)
-obj?.head(b, false, add)
-obj?.head(b, nil)
-obj?.head(b, ok)
-obj?.head(f)
-obj?.head(f, add, ok)
-obj?.head(f, obj)
-obj?.head(f, obj, 0)
-obj?.head(f, ok)
-obj?.head(f, true, nil)
-obj?.head(min(nil, 2, a), a)
-obj?.obj.a
-obj?.obj.b
-obj?.obj?.a
-obj?.obj?.b
-obj?.obj?.obj.b
-obj?.obj?.obj?.obj
0 != 0.5 == obj?.head(a)
0 != 0.5 ? s <= s : obj?.head(false)
0 != 2 && s != "c"
0 != a || a != f
0 != arr[b]
0 != arr[obj.a]
0 != b and f != 0
0 != b and obj.head(b, "b", div)
0 != b || obj.b
0 != b || obj.obj
0 != f or 0.5 == 1
0 != nil and obj?.b
0 != obj.a
0 != obj.a % a
0 != obj.b
0 != obj.head(arr)
0 != obj.head(obj)
0 != obj.obj
0 != obj.obj?.a
0 != obj.obj?.obj
0 != obj.obj?.obj?.b
0 != obj?.a
0 != obj?.b
0 != obj?.b ^ b
0 != obj?.head(b)
0 != obj?.head(ok, a)
0 != obj?.obj
0 != obj?.obj.a
0 % 1 - obj.b
0 % 1 < b ^ 0
0 % 1 == f
0 % 1 >= obj.a
0 % a - b
0 % a < a
0 % a <= a * f
0 % arr[b]
0 % b != f
0 % b % div(b, b)
0 % b * a
0 % b * f
0 % b + add(a, a)
0 % b + b
0 % b + obj?.a
0 % b / b / 0.5
0 % b == obj.head(s, 0)
0 % b >= a
0 % obj.a
0 % obj.b
0 % obj?.a
0 % obj?.b
0 % obj?.fn(b)
0 % obj?.head(b)
0 % obj?.obj.b
0 * 0 / b
0 * 0 < f
0 * 0 <= a
0 * 0 <= obj.a
0 * 0 == a
0 * 0 >= a
0 * 0.5 + a
0 * 0.5 / b
0 * 0.5 < b
0 * 0.5 <= int(a)
0 * 0.5 >= max(0)
0 * 1 < 0 - a
0 * 1 == a
0 * 1 > f
0 * a + obj?.b
0 * a / f
0 * a == f ** 0
0 * a == obj[s]
0 * a > f
0 * a in arr
0 * arr[0 - 0]
0 * arr[b]
0 * b != f
0 * b * f
0 * b + f
0 * b + obj?.a
0 * b < obj.b
0 * b == b
0 * f != a
0 * f != a % 1
0 * f != f
0 * f * b
0 * f + b
0 * f - b
0 * f < obj?.b
0 * f < obj?.head(f, obj)
0 * f <= b + 0
0 * f <= obj.a
0 * f >= b ^ 2
0 * obj.a
0 * obj.b
0 * obj.head(b + f)
0 * obj?.a
0 * obj?.b
0 * obj?.fn(abs(obj.b))
0 ** 0 - f
0 ** 0 <= f != ok
0 ** 0 ^ a
0 ** 0.5 + a
0 ** 0.5 - b
0 ** 0.5 <= a
0 ** 0.5 <= f
0 ** 0.5 <= obj.fn(a)
0 ** 0.5 ^ (b - 0)
0 ** 1 * add(0, a)
0 ** 1 > b
0 ** 2 * f
0 ** 2 * obj?.b
0 ** 2 <= a ? true : div
0 ** 2 > b
0 ** a * -2
0 ** a == b
0 ** a ^ (0 % 2)
0 ** b != f
0 ** b - b ^ 2
0 ** b > f ? s : add
0 ** f * obj?.b
0 ** f + b
0 ** f > f
0 ** f >= f
0 ** obj.a
0 ** obj.b
0 ** obj?.a
0 ** obj?.b
0 ** obj?.head(b)
0 + 0 == obj?.a
0 + 0.5 == obj?.head(nil, true, b, arr)
0 + 2 < f
0 + a != f
0 + a + b
0 + a .. a
0 + a .. get(arr, 0)
0 + a > b
0 + b + a
0 + b < a
0 + b == f * f
0 + f - b
0 + f < obj.a
0 + f < obj.b
0 + f > b
0 + f >= a
0 + obj.a
0 + obj.a != div
0 + obj.b
0 + obj.b == s
0 + obj.obj?.b
0 + obj?.a
0 + obj?.b
0 - 0 .. obj?.a
0 - 0 in arr
0 - 0.5 != obj.b
0 - 0.5 >= obj.a
0 - 1 + a
0 - 1 + b
0 - 1 > obj.head(f, a)
0 - a - a
0 - a .. a
0 - a < a
0 - a <= a
0 - a > a
0 - a >= a
0 - b .. obj?.b
0 - b < 0 / 2
0 - b < a
0 - b < obj.a
0 - b <= a
0 - b >= b
0 - b in arr
0 - f != 0.5 == false
0 - f + div(b, a)
0 - f < a
0 - f <= b
0 - obj.a
0 - obj.b
0 - obj.obj.b
0 - obj?.a
0 - obj?.b
0 .. b != arr
0 .. obj.a
0 .. obj.b
0 .. obj.fn(a)
0 .. obj.obj.a
0 .. obj?.a
0 .. obj?.b
0 .. obj?.obj.a
0 / 0 - f
0 / 0 > f ? arr : b
0 / 0.5 - a
0 / 1 / abs(0)
0 / 1 > b
0 / 2 <= b
0 / a != f / f
0 / arr[a]
0 / arr[b]
0 / b != f + 2
0 / b * obj.b
0 / b / a
0 / b == obj?.a
0 / b >= f
0 / f / f
0 / f == b
0 / obj.a
0 / obj.b
0 / obj.head(min(a), arr in arr)
0 / obj?.a
0 / obj?.b
0 / obj?.fn(true and 2)
0 / obj?.obj?.a
0 < 0 && obj?.obj
0 < 0 and obj?.fn(s, arr).b
0 < 0.5 == ok
0 < 1 || !ok
0 < a && "c" in obj
0 < arr[a]
0 < b != obj?.b
0 < b && 2 <= b
0 < f && ok
0 < f && true ? nil : 1
0 < f or a in arr
0 < obj.a
0 < obj.b
0 < obj.obj?.a
0 < obj?.a
0 < obj?.b
0 <= 0 and obj.a
0 <= 0 or obj?.b
0 <= 0.5 != obj?.obj
0 <= 0.5 and one(arr, true)
0 <= 1 and 0 >= f
0 <= a == none(arr, false)
0 <= a || ok ? f : obj
0 <= b ? a <= a : f
0 <= obj.a
0 <= obj.b
0 <= obj?.a
0 <= obj?.b
0 <= obj?.obj.b
0 <= obj?.obj?.b
0 == 0 and div == nil
0 == 2 or ok
0 == a != ok
0 == b or ok
0 == b || ok
0 == f == !true
0 == f and obj?.a
0 == nil or one(arr, true)
0 == nil || obj.b
0 == obj.a
0 == obj.b
0 == obj.obj
0 == obj.obj.a
0 == obj?.a
0 == obj?.b
0 == obj?.head(!(obj != div))
0 == obj?.head(arr)
0 == obj?.head(obj)
0 == obj?.obj
0 == obj?.obj.b
0 == obj[toJSON(nil)]
0 > 0 != nil == ok
0 > 0.5 ? add : ok
0 > 1 ? s : s
0 > 2 && ok
0 > a || 0 != 2
0 > b != obj.a
0 > b && "b" == s
0 > b == ok
0 > b or 0 == nil
0 > f && 0 != b
0 > f && obj.head(s)
0 > obj.a
0 > obj.b
0 > obj.fn(obj?.b)
0 > obj?.a
0 > obj?.b
0 > obj?.fn(a)
0 > obj?.head(b)
0 > obj?.obj.a
0 >= 0.5 and ok ? arr : s
0 >= 2 && obj?.a
0 >= b != ok ? b : nil
0 >= b && obj?.fn(true)
0 >= b == obj?.head(b, s)
0 >= b and b in obj?.obj
0 >= f && obj.head(obj)
0 >= f or ok
0 >= obj.a
0 >= obj.b
0 >= obj.head(obj?.fn(b))
0 >= obj?.a
0 >= obj?.b
0 >= obj?.obj.b
0 >= obj?.obj?.a
0 ^ 0 / f
0 ^ 0 == f
0 ^ 0.5 ** obj?.a
0 ^ 0.5 - b
0 ^ 0.5 <= f
0 ^ 1 * a
0 ^ 2 < a / b
0 ^ 2 < f
0 ^ 2 ^ f
0 ^ a != a / a
0 ^ a + b
0 ^ a - obj.a
0 ^ a - obj?.b
0 ^ a < a
0 ^ a <= b
0 ^ b != b
0 ^ b - -b
0 ^ b / b
0 ^ b >= b
0 ^ b ^ f
0 ^ f < obj.b
0 ^ f <= obj?.a
0 ^ f > f
0 ^ obj.a
0 ^ obj.b
0 ^ obj.obj.b
0 ^ obj.obj?.a
0 ^ obj?.a
0 ^ obj?.b
0 in arr or s != nil
0 in arr || ok
0.5 != 0 == ok
0.5 != 0 and ok
0.5 != 0 || obj?.a
0.5 != 0.5 == true ? a : arr
0.5 != 0.5 || nil != s
0.5 != 1 && s <= "b"
0.5 != a || obj?.obj
0.5 != b and false ? nil : add
0.5 != b or ok
0.5 != f and ok
0.5 != nil && s >= s
0.5 != obj.a
0.5 != obj.b
0.5 != obj.obj
0.5 != obj.obj.obj
0.5 != obj?.a
0.5 != obj?.b
0.5 != obj?.head(arr, obj)
0.5 != obj?.obj
0.5 != obj?.obj.b
0.5 * 0 >= obj.head(a)
0.5 * 0.5 * f
0.5 * 0.5 / add(b, 0)
0.5 * 0.5 < f ? obj : obj
0.5 * 1 < f
0.5 * a < f
0.5 * a == f
0.5 * a >= 0.5 ? "b" : b
0.5 * arr[a]
0.5 * b <= f
0.5 * f < div(b, b)
0.5 * f > div(a, b)
0.5 * f > f
0.5 * obj.a
0.5 * obj.b
0.5 * obj.fn(b)
0.5 * obj.obj?.a
0.5 * obj?.a
0.5 * obj?.b
0.5 * obj?.head(obj.a)
0.5 * obj?.obj?.b
0.5 ** 0 / a
0.5 ** 0 <= b
0.5 ** 0 ^ a
0.5 ** 0.5 > f
0.5 ** 0.5 >= f
0.5 ** 1 != b
0.5 ** 1 > b
0.5 ** a + b
0.5 ** a > b
0.5 ** a > b ** 0
0.5 ** a >= b
0.5 ** a ^ obj?.b
0.5 ** arr[b]
0.5 ** arr[obj.a]
0.5 ** b < a + b
0.5 ** b > a
0.5 ** b ^ obj?.a
0.5 ** f * f
0.5 ** f ** (a - 0)
0.5 ** f <= -a
0.5 ** f <= a
0.5 ** f >= b
0.5 ** obj.a
0.5 ** obj.b
0.5 ** obj.obj?.a
0.5 ** obj?.a
0.5 ** obj?.b
0.5 ** obj?.obj?.b
0.5 + 0 >= b ? f : s
0.5 + 2 + a
0.5 + 2 + b ^ a
0.5 + a - -0
0.5 + a - f
0.5 + f != obj?.b
0.5 + f == b / f
0.5 + obj.a
0.5 + obj.b
0.5 + obj?.a
0.5 + obj?.b
0.5 - 0.5 > 0.5 - b
0.5 - 1 + b
0.5 - a != f + b
0.5 - f != obj.head(s)
0.5 - f - div(b, a)
0.5 - f < f * a
0.5 - f == obj.a
0.5 - obj.a
0.5 - obj.b
0.5 - obj.head(f)
0.5 - obj.head(min(0, b))
0.5 - obj.obj.a
0.5 - obj?.a
0.5 - obj?.a * b > obj?.a
0.5 - obj?.b
0.5 - obj?.obj.a
0.5 - obj?.obj.b
0.5 - obj?.obj?.b
0.5 / 0 * b
0.5 / 0.5 * div(0, b)
0.5 / 0.5 - b
0.5 / 1 < b
0.5 / 1 == obj.a
0.5 / a * a
0.5 / a <= b ? f : div
0.5 / a > obj.head(b, s)
0.5 / arr[a % 1]
0.5 / b != f
0.5 / b / f
0.5 / b == get(arr, b)
0.5 / b > a
0.5 / b >= a
0.5 / obj.a
0.5 / obj.b
0.5 / obj.obj.a
0.5 / obj?.a
0.5 / obj?.b
0.5 / obj?.obj.a
0.5 / obj?.obj.b
0.5 < 0 && true ? ok : obj
0.5 < 0 or obj?.b
0.5 < 0 or obj?.obj
0.5 < 0 || obj?.obj
0.5 < 0 || ok
0.5 < 0.5 && !false
0.5 < 0.5 ? b - a : s
0.5 < 0.5 in obj.head(arr, ok)
0.5 < f != ok
0.5 < obj.a
0.5 < obj.b
0.5 < obj.fn(a)
0.5 < obj?.a
0.5 < obj?.b
0.5 <= 0 || arr != arr
0.5 <= a != ok
0.5 <= arr[b]
0.5 <= b || obj.fn(true).a.obj
0.5 <= f && ok
0.5 <= f == obj.b
0.5 <= obj.a
0.5 <= obj.b
0.5 <= obj?.a
0.5 <= obj?.b
0.5 <= obj?.b * b
0.5 == 1 and obj.head(obj, f, true)
0.5 == 2 || 0.5 < 0
0.5 == a && obj?.b
0.5 == b && ok
0.5 == f != obj.a
0.5 == f ? 0.5 ** 0 : div
0.5 == f ? ok : obj
0.5 == f or ok
0.5 == nil != obj.obj
0.5 == nil == obj.fn(b)
0.5 == nil == obj.obj
0.5 == obj.a
0.5 == obj.a + b
0.5 == obj.b
0.5 == obj.fn(a)
0.5 == obj.fn(b)
0.5 == obj.head(s == add, arr)
0.5 == obj.obj
0.5 == obj?.a
0.5 == obj?.b
0.5 == obj?.fn(a)
0.5 == obj?.obj
0.5 > 0 == obj?.b
0.5 > 0 ? b : b
0.5 > 0.5 ? a ** 1 : add
0.5 > 0.5 and obj?.a
0.5 > 1 == true ? add : nil
0.5 > a != not false
0.5 > a == ok
0.5 > b ? a : obj
0.5 > f ? (false ? arr : ok) : obj.head(0.5, s, arr)
0.5 > f and div == add
0.5 > obj.a
0.5 > obj.b
0.5 > obj.head(a ** a)
0.5 > obj.head(f)
0.5 > obj?.a
0.5 > obj?.b
0.5 > obj?.head(obj.head(obj?.b))
0.5 > obj?.obj?.b
0.5 >= 0.5 && obj.head(add, 0, arr, 0.5, s)
0.5 >= a and ok
0.5 >= b == true ? nil : div
0.5 >= b ? div : string(0.5)
0.5 >= obj.a
0.5 >= obj.b
0.5 >= obj.obj?.a
0.5 >= obj.obj?.b
0.5 >= obj?.a
0.5 >= obj?.b
0.5 ^ 0 - 0 * 1
0.5 ^ 0 - a
0.5 ^ 0 <= a * a
0.5 ^ 0 > f
0.5 ^ 0.5 + a
0.5 ^ 0.5 ^ f
0.5 ^ 1 >= a
0.5 ^ 2 == f
0.5 ^ a + obj?.b
0.5 ^ a ^ (b * 0)
0.5 ^ arr[a]
0.5 ^ b > a
0.5 ^ b > f
0.5 ^ b >= obj.a
0.5 ^ f * b
0.5 ^ f > add(2, b)
0.5 ^ f > f
0.5 ^ f >= f
0.5 ^ obj.a
0.5 ^ obj.b
0.5 ^ obj?.a
0.5 ^ obj?.b
0.5 ^ obj?.obj?.b
1 != 0 != obj.a
1 != 0 or obj?.head(false, div, div)
1 != 0.5 || b < a
1 != b != ok
1 != f == ok
1 != obj.a
1 != obj.b
1 != obj.fn(b)
1 != obj.obj
1 != obj?.a
1 != obj?.b
1 != obj?.obj
1 != obj?.obj?.b
1 % 1 .. 2 - a
1 % 1 > f
1 % a * add(1, b)
1 % a - b
1 % a / f
1 % a > b + f
1 % b / b
1 % b == b
1 % b >= b
1 % obj.a
1 % obj.b
1 % obj?.a
1 % obj?.b
1 % obj?.obj.b
1 * 0 .. obj?.head(b)
1 * 2 == f
1 * b != 0 ^ a
1 * b < a
1 * f < a / b
1 * f > b
1 * obj.a
1 * obj.b
1 * obj.obj.b
1 * obj?.a
1 * obj?.b
1 ** 0 != obj.obj
1 ** 0 ** float(2)
1 ** 0 ^ a
1 ** 0 ^ b
1 ** 0.5 / obj?.a
1 ** 2 ** count(arr, false)
1 ** 2 < b
1 ** a >= b
1 ** b != b
1 ** b + f
1 ** b <= -b
1 ** b >= 1 ** f
1 ** obj.a
1 ** obj.b
1 ** obj.fn(b)
1 ** obj?.a
1 ** obj?.b
1 + 0 == len(arr)
1 + 0 == obj?.fn(b)
1 + a > 0 != false
1 + a > f
1 + b - a
1 + f != a
1 + f >= 0 == false
1 + f >= add(b, 0)
1 + obj.a
1 + obj.b
1 + obj?.a
1 + obj?.b
1 - 0 .. abs(1)
1 - 1 != a
1 - 1 < a
1 - 2 <= f
1 - a != b ? arr : f
1 - a > f
1 - b != f
1 - b > f
1 - b >= add(b, 2)
1 - b in arr ? s : b
1 - obj.a
1 - obj.b
1 - obj.fn(2 - b)
1 - obj?.a
1 - obj?.b
1 - obj?.obj.a
1 .. 0 == obj.a
1 .. obj.a
1 .. obj.b
1 .. obj.obj.b
1 .. obj?.a
1 .. obj?.b
1 / 0 < f
1 / 0 in obj?.head(arr)
1 / 2 * f
1 / a < f
1 / a <= abs(a)
1 / f * b
1 / f == b
1 / obj.a
1 / obj.b
1 / obj.obj.a
1 / obj?.a
1 / obj?.b
1 < a && obj?.head(ok).b
1 < a ? a : a
1 < a ? ok : b
1 < a || nil != obj
1 < b == obj.obj
1 < obj.a
1 < obj.b
1 < obj.head(obj?.b)
1 < obj?.a
1 < obj?.b
1 < obj?.fn(b)
1 <= 0 ? ok : add
1 <= 1 or obj.head(a)
1 <= 2 != true == ok
1 <= a == obj?.b
1 <= a or obj.a
1 <= f != obj?.a
1 <= f == all(arr, ok)
1 <= f == obj?.head(nil)
1 <= obj.a
1 <= obj.b
1 <= obj?.a
1 <= obj?.b
1 <= obj?.head(a)
1 <= obj?.head(b)
1 <= obj?.obj.obj.a
1 == a or obj.head(any(ok and ok, #), div.fn(b, arr, 0, a).a)
1 == b || obj?.a
1 == nil != true ? ok : f
1 == obj.a
1 == obj.b
1 == obj.head(first(true, "b", add))
1 == obj.obj
1 == obj?.a
1 == obj?.b
1 == obj?.obj
1 > 0.5 and obj?.obj
1 > 0.5 || 0 == f
1 > f and ok
1 > obj.a
1 > obj.b
1 > obj?.a
1 > obj?.b
1 > obj?.obj?.b
1 >= 0 || one(arr, ok)
1 >= 2 ? arr : a
1 >= f == not false
1 >= f || obj?.obj
1 >= obj.a
1 >= obj.b
1 >= obj.fn(b)
1 >= obj?.a
1 >= obj?.b
1 >= obj?.fn(b)
1 ^ 0 != a
1 ^ 1 != f
1 ^ 1 != obj?.obj
1 ^ b ^ f
1 ^ f - a
1 ^ obj.a
1 ^ obj.b
1 ^ obj.head(b)
1 ^ obj.obj.b
1 ^ obj?.a
1 ^ obj?.b
2 != 0 != obj?.b
2 != 0 != ok
2 != b != ok
2 != b && b != f
2 != b or obj?.b
2 != nil != ok
2 != nil == ok ? nil : div
2 != obj.a
2 != obj.b
2 != obj.head(add)
2 != obj.obj
2 != obj.obj?.a
2 != obj?.a
2 != obj?.b
2 != obj?.fn(b)
2 != obj?.obj
2 % 2 == a
2 % a % a
2 % a .. a
2 % a .. obj.b
2 % a > 0.5 ? b : obj
2 % b + arr[a]
2 % b > b
2 % obj.a
2 % obj.b
2 % obj?.a
2 % obj?.b
2 * 0 * b
2 * 0 <= f
2 * 0.5 - a - b
2 * 0.5 < b
2 * 0.5 >= f
2 * a >= b
2 * arr[b]
2 * f != b
2 * obj.a
2 * obj.b
2 * obj?.a
2 * obj?.b
2 ** 0 != 0 - f
2 ** 0 / a
2 ** 0 > a
2 ** 0 > f
2 ** 0.5 ** f
2 ** 0.5 > a
2 ** 2 * obj.b
2 ** a * f
2 ** a >= f
2 ** b / a
2 ** b ^ a
2 ** obj.a
2 ** obj.b
2 ** obj?.a
2 ** obj?.b
2 ** obj?.obj.a
2 + 0 > b
2 + 0.5 <= f - f
2 + 2 + obj.b
2 + arr[b]
2 + b >= 0 ? arr : true
2 + f != obj?.b
2 + f + add(a, b)
2 + obj.a
2 + obj.a > f
2 + obj.b
2 + obj?.a
2 + obj?.b
2 + obj?.obj?.a
2 - 0 > a ? div : 0
2 - a == f - f
2 - a in arr
2 - b + len("c")
2 - f < obj?.a
2 - f == a
2 - obj.a
2 - obj.b
2 - obj?.a
2 - obj?.b
2 - obj?.obj?.a
2 .. obj.a
2 .. obj.b
2 .. obj.obj?.a
2 .. obj?.a
2 .. obj?.b
2 .. obj?.obj.a
2 / 0.5 - a
2 / 0.5 >= obj.a
2 / 1 > a
2 / 2 * a
2 / a >= obj.head(0.5)
2 / b * obj.b
2 / b > a ? arr : f
2 / f - obj?.b
2 / obj.a
2 / obj.b
2 / obj?.a
2 / obj?.b
2 / obj?.fn(a)
2 < a and obj.obj
2 < arr[b]
2 < b ? fromBase64(s) : ok
2 < f and obj?.head(f, true, false)
2 < f || none(arr, ok)
2 < obj.a
2 < obj.b
2 < obj?.a
2 < obj?.b
2 < obj?.obj.a
2 <= a == obj.b
2 <= a ? ok : s
2 <= a and one(arr, ok)
2 <= obj.a
2 <= obj.b
2 <= obj?.a
2 <= obj?.b
2 <= obj?.fn(a)
2 <= obj?.fn(b)
2 == 0 || b > f
2 == arr[b - a]
2 == f && a in arr
2 == f and nil != f
2 == nil == obj?.a
2 == obj.a
2 == obj.b
2 == obj.obj
2 == obj.obj.a
2 == obj?.a
2 == obj?.b
2 == obj?.fn(a)
2 == obj?.obj
2 == obj?.obj?.a
2 == obj?.obj?.b
2 > 1 and obj.b
2 > a || obj.b
2 > obj.a
2 > obj.b
2 > obj?.a
2 > obj?.b
2 > obj?.obj.a
2 >= 1 or f <= a
2 >= a == nil ? ok : a
2 >= b and ok
2 >= f or obj.fn("b", false)
2 >= obj.a
2 >= obj.b
2 >= obj.fn(count(s, true))
2 >= obj?.a
2 >= obj?.b
2 >= obj?.fn(obj?.head(0, 0.5))
2 ^ 0 / -a
2 ^ 0 < b
2 ^ 0 < b ? 0.5 : a
2 ^ 0 <= float(0)
2 ^ 0 >= -0
2 ^ 0.5 >= add(b, b)
2 ^ 1 != 0 ? add : false
2 ^ 1 * b
2 ^ 1 > b
2 ^ 2 > b
2 ^ a <= a
2 ^ b - a
2 ^ b - b
2 ^ b <= max(b)
2 ^ b == b
2 ^ f == f
2 ^ f >= a
2 ^ obj.a
2 ^ obj.b
2 ^ obj.obj.a
2 ^ obj?.a
2 ^ obj?.b
2 ^ obj?.fn(obj.head(0))
[!ok]
["a"] != arr
[-0.5]
[-0]
[-a]
[0 ** 2]
[0.5 + 1]
[0.5 > 0]
[0.5 > 2]
[2 == a, a]
[2] == obj.head(f, 2, "a", f)
[a % a, a, add]
[a % a]
[a ** 0.5]
[a ^ b]
[a, "b" != s]
[a]
[abs(f)]
[add(div(a, b), last(arr))]
[add, add]
[add]
[arr, 2 == 0]
[arr, add]
[arr, div]
[arr[b]]
[arr]
[b - f]
[b / a]
[b <= 0]
[b <= 2]
[b, arr]
[b, obj]
[b]
[div, b]
[div, f]
[div]
[f * f]
[f + 0]
[f / a]
[f >= 0]
[f, a]
[f, f ** 0]
[f]
[false ? add : f]
[len(obj)]
[lower("a")]
[map(arr, div), ok, a]
[min(0.5)]
[min(f)]
[obj, div]
[obj, obj]
[obj.b]
[obj.fn(a)]
[obj.head(b, arr)]
[obj.head(b, div)]
[obj.head(f)]
[obj.head(obj)]
[obj.obj.obj]
[obj.obj]
[obj?.a]
[obj?.b]
[obj?.fn(a)]
[obj?.fn(b)]
[obj?.head("b")]
[obj?.head("c")]
[obj?.head(a, ok, nil, add, nil)]
[obj?.head(div), f]
[obj?.head(div, 0)]
[obj?.head(s)]
[obj?.obj]
[obj]
[ok, 0.5 / f]
[ok, add]
[ok, arr]
[ok, obj?.obj.b]
[ok, obj]
[ok, s]
[ok]
[s != "a"]
[s != nil]
[s != s]
[s + "a"]
[s endsWith "c"]
[s matches "a"]
[s, b]
[s]
[string(f)]
[true] != arr
a
a != -a
a != 0 % 1
a != 0 * b
a != 0 + b
a != 0 ? b : nil
a != 0 ? div : obj
a != 0 ? f : ok
a != 0 ? s : arr
a != 0 ^ 1
a != 0 ^ b
a != 0.5 * f
a != 0.5 / b
a != 0.5 ? false : ok
a != 0.5 ? s : nil
a != 1 != false
a != 1 * b
a != 1 ? 0 : obj
a != 2 ** 0
a != a
a != a + 0.5
a != a - 0
a != a - a
a != a / 0
a != a == nil
a != a == ok
a != a ? "c" : 0.5
a != a ? 0 : div
a != a and ok != nil
a != add(0, a)
a != add(0, b)
a != add(b, a)
a != arr[1]
a != arr[b]
a != arr[obj?.a]
a != b
a != b != true
a != b && b > f
a != b && ok
a != b ** 0.5
a != b ** a
a != b ** f
a != b / a
a != b == nil
a != b == obj?.b
a != b ? 0 : add
a != b and obj.head(arr)
a != b and obj.obj
a != b and obj?.a
a != div(b, a)
a != f
a != f ** f
a != f == ok
a != f ? 1 : obj
a != f ^ a
a != f || ok
a != first(arr)
a != float(a)
a != min(0.5)
a != min(a, 1, b)
a != min(b)
a != nil != obj.a
a != nil != ok ? ok : a
a != nil ? 0 : a
a != nil or obj.head(obj)
a != obj.a
a != obj.b
a != obj.head(add, ok)
a != obj.head(arr, 2, add)
a != obj.head(div)
a != obj.head(ok)
a != obj.head(true)
a != obj.obj
a != obj.obj?.b
a != obj?.a
a != obj?.b
a != obj?.fn(a)
a != obj?.head(0.5)
a != obj?.head(a * a)
a != obj?.head(obj, a)
a != obj?.obj
a != obj?.obj.a
a != obj?.obj.obj
a != obj?.obj?.b
a != obj?.obj?.obj
a % (b - a)
a % -a
a % -b
a % 1 != -b
a % 1 != b
a % 1 / 0
a % 1 / f
a % 1 < a
a % 1 >= f
a % 2 != a + a
a % 2 != b
a % 2 * f
a % a
a % a % a
a % a * add(2, 0)
a % a * b
a % a - obj?.b
a % a / b
a % a < b
a % a <= f
a % a > 0 ? add : obj?.obj.a
a % a > a
a % add(a, b)
a % add(b, a)
a % arr[b]
a % arr[obj.head(f)]
a % b
a % b != b
a % b % a
a % b * f
a % b * obj.b
a % b - a
a % b .. obj?.head(f)
a % b / a
a % b == -f
a % b == f
a % b > b
a % b > f
a % b >= a
a % count(arr, ok)
a % div(1, a)
a % div(b, 1)
a % int(max(a))
a % len("b")
a % len(obj)
a % min(a)
a % obj.a
a % obj.b
a % obj.b < a
a % obj.head(a)
a % obj.head(a, add(b, a))
a % obj.head(b)
a % obj.obj.a
a % obj.obj?.a
a % obj.obj?.b
a % obj?.a
a % obj?.b
a % obj?.head(a)
a % obj?.obj?.a
a % obj?.obj?.b
a * (0.5 + b)
a * (1 - 1)
a * (1 - f)
a * (2 - 0)
a * (2 - b)
a * (a + 1)
a * (b - f)
a * -a
a * -f
a * 0 % a
a * 0 * f
a * 0 ** b
a * 0 / a
a * 0 > obj.head(b)
a * 0 > obj?.head(b, add)
a * 0.5 / b
a * 0.5 < f
a * 2 % b
a * 2 % div(a, a)
a * 2 == a != false
a * a
a * a != obj.b
a * a % b
a * a ** 0
a * a - obj.a
a * a .. a
a * a .. b
a * a / 2
a * a / f
a * a < f
a * a >= f
a * a >= f ? nil : a
a * abs(a)
a * abs(f)
a * add(1, a)
a * add(a, 0)
a * add(b, 0)
a * add(b, a)
a * b
a * b % a
a * b * obj.b
a * b ** f
a * b + a
a * b - a
a * b - b
a * b - f - 0
a * b - obj.a
a * b <= b
a * b >= f
a * div(0, 1)
a * div(0, b)
a * div(a, 1)
a * div(a, a)
a * f
a * f != b * b
a * f * f
a * f ** 0.5
a * f - a
a * f / a
a * f / b
a * f < a
a * f <= f
a * f <= f ^ 0.5
a * f == max(a)
a * f >= f
a * f ^ 0.5
a * f ^ 1
a * float(1)
a * len("a")
a * min(a)
a * min(b)
a * obj.a
a * obj.b
a * obj.head(0.5, a)
a * obj.head(a)
a * obj.head(obj).b
a * obj?.a
a * obj?.b
a * obj?.fn(0)
a * obj?.fn(b)
a * obj?.fn(get(arr, b))
a * obj?.head(b)
a * obj?.head(obj).a
a * obj?.obj.a
a * obj?.obj?.a
a ** (0 * f)
a ** (0.5 - 2)
a ** (0.5 - b)
a ** (0.5 / a)
a ** (2 * 0.5)
a ** (2 * b)
a ** (2 - f)
a ** (a / b)
a ** (b * a)
a ** (b - 0.5)
a ** (b / b)
a ** (f * a)
a ** (f * b)
a ** (f - 0)
a ** (f / 2)
a ** -0
a ** -0.5
a ** -a
a ** -b
a ** 0 != a
a ** 0 ** 0
a ** 0 - b
a ** 0 ^ add(b, a)
a ** 0.5 ** 0.5
a ** 0.5 / a
a ** 0.5 <= b
a ** 0.5 > b
a ** 0.5 ^ a
a ** 1 / a
a ** 1 > f
a ** 1 ^ f
a ** 2 != 2 - f
a ** 2 ** (f + 2)
a ** 2 <= b
a ** a
a ** a ** (f / b)
a ** a ** f
a ** a - f
a ** a / b
a ** a / obj.head(f)
a ** a <= a
a ** a <= obj.head(0)
a ** a == a
a ** a == b * 0.5
a ** a > a
a ** a ^ 2 ** f
a ** abs(-f)
a ** abs(2)
a ** add(1, 2)
a ** add(b, a)
a ** arr[-0]
a ** arr[a]
a ** arr[b]
a ** b
a ** b != b
a ** b != f
a ** b != min(1)
a ** b ** a
a ** b - a
a ** b > f
a ** b ^ f
a ** div(2, b)
a ** div(a, 2)
a ** f
a ** f != obj?.head(obj).b
a ** f ** 0
a ** f ** f
a ** f ** obj?.a
a ** f <= a
a ** f ^ a
a ** f ^ f
a ** float(f)
a ** int(f)
a ** len(obj)
a ** max(0)
a ** max(a, f)
a ** min(b)
a ** obj.a
a ** obj.b
a ** obj.fn(a)
a ** obj.fn(b)
a ** obj.head(f)
a ** obj.obj.a
a ** obj?.a
a ** obj?.b
a ** obj?.b ^ b
a ** obj?.head(1, ok)
a ** obj?.head(a)
a ** obj?.head(a, 0.5, add, "c")
a ** obj?.head(f, ok)
a ** obj?.obj?.a
a + -0
a + -2 * f
a + -f
a + 0 + a
a + 0 + f
a + 0 - f
a + 0 <= b
a + 0 <= f
a + 0 == obj?.a
a + 0 ^ b
a + 0.5 != b
a + 0.5 * 2
a + 0.5 > f
a + 0.5 ^ f
a + a
a + a % a
a + a % b
a + a * 1
a + a * f
a + a + a
a + a + f
a + a - a
a + a - b
a + a / 0
a + a / b
a + a < a + a
a + a >= f
a + a ^ b
a + add(0, 2)
a + add(b, b)
a + b
a + b % a
a + b - 0
a + b - f
a + b .. a
a + count(arr, a != a)
a + div(0, 2)
a + div(a, b)
a + div(b, b)
a + f
a + f * 0.5
a + f + b * 0
a + f + f
a + f - a - 2
a + f - b
a + f <= b
a + f == f
a + f == obj?.obj
a + f > float(b)
a + f >= obj.b
a + f ^ b
a + f ^ f
a + get(arr, 1)
a + int(f)
a + last(arr)
a + len(s)
a + min(f, 2)
a + obj.a
a + obj.b
a + obj.fn(2)
a + obj.fn(a)
a + obj.fn(b)
a + obj.fn(obj.head(b))
a + obj.head(1, ok)
a + obj.head(a)
a + obj.head(a, ok, arr, nil)
a + obj.obj.a
a + obj.obj.b
a + obj?.a
a + obj?.b
a + obj?.head(f)
a + obj?.head(f, "c" != f)
a + obj?.head(obj?.a)
a + obj?.obj.a
a - -2
a - -a
a - -b
a - 0 != a
a - 0 != f
a - 0 != obj?.obj?.a
a - 0 ** f
a - 0 - b
a - 0 / 0
a - 0 < obj.b
a - 0 <= min(1)
a - 0 == obj.b
a - 0 > a
a - 0 ^ f
a - 0 in arr
a - 0.5 != f
a - 0.5 * 0.5
a - 0.5 > b
a - 0.5 >= a
a - 1 .. obj.b
a - 1 == obj?.head(div, div)
a - 1 > b
a - 2 * f
a - 2 - 0.5
a - 2 .. b
a - a
a - a != nil != false
a - a * 0
a - a * f
a - a ** b
a - a - f
a - a .. -2
a - a .. a
a - a < b / 0
a - a <= a
a - a <= f ** 0.5
a - a == a
a - a == obj?.a
a - a > 0 ? f : obj
a - a in arr
a - add(a, 0)
a - add(b, 0)
a - b
a - b * f
a - b + b - b
a - b + float(0)
a - b - a
a - b / 0
a - b / 0.5
a - div(a, 1)
a - f
a - f != b
a - f ** 1
a - f + b
a - float(f)
a - get(arr, a)
a - len("c")
a - max(f)
a - obj.a
a - obj.b
a - obj.fn(a)
a - obj.head(0.5, b, b)
a - obj.head(2, obj)
a - obj.head(f)
a - obj.head(f, "b")
a - obj.obj?.b
a - obj?.a
a - obj?.b
a - obj?.head(a)
a - obj?.head(b, arr)
a - obj?.obj.b
a .. -2
a .. 0 - 1
a .. a
a .. a + 2
a .. a + b
a .. a + obj.obj.a
a .. a - 1
a .. add(b, b)
a .. arr[a]
a .. arr[b]
a .. b
a .. b + obj?.b
a .. b - a
a .. b - b
a .. b == arr
a .. div(1, 2)
a .. div(a, b)
a .. len(arr)
a .. len(s)
a .. min(0, 2)
a .. obj.a
a .. obj.b
a .. obj.head(a)
a .. obj.head(b, "a")
a .. obj.obj?.a
a .. obj?.a
a .. obj?.b
a .. obj?.head(1, obj, ok, false)
a .. obj?.head(2, s, nil)
a .. obj?.head(a, true, nil)
a .. obj?.obj.a
a .. obj?.obj.b
a .. obj?.obj.obj?.b
a / (0 - 0)
a / (1 + 0.5)
a / (a - a)
a / (f + 0)
a / (f + f)
a / -0
a / -a
a / -b
a / -obj.obj.b
a / 0 != obj?.obj
a / 0 * 1
a / 0 ** a
a / 0 + obj.a
a / 0 / obj.b
a / 0 < obj.a
a / 0 <= a
a / 0 == f
a / 0 >= a
a / 0 >= b
a / 0.5 < f
a / 0.5 == obj?.a
a / 1 - b
a / 1 / a
a / 1 < obj?.b
a / a
a / a != f
a / a - a ^ 2
a / a < b
a / a <= add(1, 0)
a / a == f
a / a > float(f)
a / add(0, b)
a / add(a, b)
a / add(b, 0)
a / add(b, b)
a / arr[a]
a / b
a / b * obj?.head(f, arr, 0.5)
a / b ** b
a / b / (b + 0)
a / b / 2
a / b < a
a / b == a
a / b > f
a / b >= 1 * obj?.a
a / b ^ b
a / count(arr, false)
a / div(0, a)
a / div(a, a)
a / div(b, b)
a / f
a / f * f
a / f ** 0.5
a / f + a
a / f - f
a / f / b
a / f / f
a / f < obj?.b
a / f <= 0 % b
a / int(0)
a / max(0, 1, a)
a / max(2, b)
a / min(f)
a / obj.a
a / obj.b
a / obj.fn(a)
a / obj.fn(b)
a / obj.head(0, a)
a / obj.head(a, arr, 0.5)
a / obj.head(f)
a / obj.head(f, a)
a / obj?.a
a / obj?.b
a / obj?.fn(obj?.a)
a / obj?.head(0, obj, b, f, "b")
a / obj?.head(2, add)
a / obj?.head(a)
a / obj?.head(b, div)
a / obj?.head(f)
a / obj?.obj?.a
a < -0
a < -a
a < -obj.a
a < 0 && obj.head(obj)
a < 0 * 0.5
a < 0 ** b
a < 0 ** f
a < 0 / a
a < 0.5 != ok
a < 0.5 + f
a < 0.5 ? 0 : arr
a < 0.5 ? a != nil : f
a < 1 && obj.fn(ok, "a", obj)
a < 1 * 2
a < 1 ? obj : true
a < 1 ^ b
a < 2 && obj?.a
a < 2 ** 2
a < a
a < a % b
a < a * f
a < a - f
a < a / a
a < a == false
a < a ? 0 : ok
a < a ? 0.5 : arr
a < a ? a : add
a < a ? div : add
a < a ? f : add
a < a ? nil : 2
a < a ? s : a
a < abs(a)
a < abs(b)
a < add(2, b)
a < add(a, a)
a < arr[a]
a < b
a < b != ok
a < b + 0.5
a < b + b
a < b + f
a < b - f
a < b == obj?.head(ok)
a < b ? "c" : ok
a < b or obj.obj
a < div(b, 1)
a < f
a < f && obj.b?.b
a < f * b
a < f * f
a < f - 0
a < f ? "b" : false
a < f ? a : ok
a < f ? add : b
a < f ? s : arr
a < f || ok
a < get(arr, b)
a < last(arr)
a < min(a)
a < min(f)
a < obj.a
a < obj.b
a < obj.fn(a)
a < obj.head(0)
a < obj.head(0, a, a)
a < obj.head(a, obj)
a < obj.head(b)
a < obj.obj.b
a < obj.obj?.a
a < obj?.a
a < obj?.b
a < obj?.obj.b
a <= -0
a <= -0.5
a <= -1
a <= -b
a <= -f
a <= 0 != nil
a <= 0 && obj?.a
a <= 0 && obj?.fn(add)
a <= 0 * b
a <= 0 + 0.5
a <= 0 - 1
a <= 0 ? obj : s startsWith "c"
a <= 0 ^ 0.5
a <= 0 || !ok
a <= 0 || ok
a <= 0.5 && obj?.head(true)
a <= 0.5 == obj.b
a <= 0.5 ? f != b : b
a <= 0.5 ? false : ok
a <= 0.5 ? obj : a
a <= 1 + 0
a <= 2 != ok
a <= 2 ** a
a <= a
a <= a != true
a <= a ** 0
a <= a / 2
a <= a ? arr : "c"
a <= a || ok
a <= add(b, 1)
a <= arr[b]
a <= b
a <= b != nil ? 1 : s
a <= b % a
a <= b ** a
a <= b + 2
a <= b - a
a <= b ? f : a
a <= b ? f : nil
a <= b ? f : obj.a
a <= b ? false : b
a <= b and obj.a
a <= f
a <= f ** a
a <= f ? 2 : f
a <= f ? obj?.head(b) : obj?.b
a <= f ? true : ok
a <= f and ok
a <= float(a)
a <= get(arr, b)
a <= len(obj)
a <= max(a)
a <= obj.a
a <= obj.b
a <= obj.head(a, "a", b, b, a)
a <= obj.head(b * 0.5)
a <= obj.head(b)
a <= obj.head(f)
a <= obj.obj.b
a <= obj?.a
a <= obj?.b
a <= obj?.fn(b)
a <= obj?.obj.a
a == -obj?.b
a == 0 != nil
a == 0 % a
a == 0 && obj?.b
a == 0 + 1
a == 0 ? obj?.b : arr
a == 0 ? s : b
a == 0.5 != obj?.a
a == 0.5 + b
a == 0.5 ? b : b
a == 0.5 and obj.fn("b", nil)
a == 1 + b
a == 1 - f
a == 1 ? div : obj
a == 1 ? s : f
a == 1 ^ b
a == 2 * f
a == 2 or obj.a
a == a
a == a && obj.obj
a == a * b
a == a + a
a == a ? 1 : a
a == a ? 2 : f
a == a ? f : obj
a == a ? s : 0
a == add(2, a)
a == arr[b]
a == b
a == b != nil
a == b % b
a == b * 1
a == b ? b : obj.b
a == b ? s : add
a == b ^ 0.5
a == b and "a" endsWith s
a == b or obj.b
a == b or ok
a == f
a == f != nil
a == f != nil ? s : obj
a == f != ok
a == f && obj == obj
a == f * a
a == f == obj?.a
a == f ? f : "b"
a == f ? ok : div
a == f and obj?.obj
a == f or obj.b
a == f || obj.head(b)
a == first(obj?.a)
a == int(b)
a == last(arr)
a == len("b")
a == len(obj)
a == nil != true
a == nil == ok
a == nil ? 0 : b
a == nil ? a : "b"
a == nil ? s : div
a == nil and obj.head(false)
a == obj.a
a == obj.b
a == obj.head("c")
a == obj.head(a, s)
a == obj.head(add)
a == obj.head(arr)
a == obj.head(f)
a == obj.head(obj, s, 0).obj
a == obj.head(ok, nil, add, "c")
a == obj.head(s, "a", ok, b)
a == obj.obj
a == obj.obj.b
a == obj?.a
a == obj?.b
a == obj?.b / a
a == obj?.b or ok
a == obj?.c
a == obj?.head(0.5)
a == obj?.head(add)
a == obj?.head(arr)
a == obj?.head(b or true)
a == obj?.head(b)
a == obj?.head(b, obj, "c")
a == obj?.head(s)
a == obj?.head(s, map(s, obj), a)
a == obj?.obj
a == obj?.obj?.b
a == obj?.obj?.obj
a > -a
a > -b
a > -f
a > 0 != obj?.b
a > 0 != ok
a > 0 && ok
a > 0 * 0.5
a > 0 + 1
a > 0 ^ 0.5
a > 0 or nil == add
a > 1 != ok
a > 1 * 0
a > 1 - 0
a > 1 || obj?.obj
a > 2 * 0
a > 2 ? add : div
a > 2 and obj.obj
a > a
a > a != ok
a > a != true
a > a * a
a > a ** f
a > a - b
a > a / f
a > a ? add : 1
a > a ? add : ok
a > add(a, b)
a > add(b, a)
a > arr[a]
a > b
a > b != ok
a > b && !true
a > b * b
a > b + b
a > b ? "b" : 0 >= f
a > b ^ 0
a > div(1, b)
a > f
a > f != ok
a > f ** b
a > f ** f
a > f / 0
a > f ? f : add
a > f ? s : div
a > f ^ a
a > f || obj.head(0, add)
a > get(arr, b)
a > int(f)
a > len(obj)
a > len(s)
a > max(a)
a > min(b, f)
a > obj.a
a > obj.a % a
a > obj.a ? obj.head(f, obj) : add
a > obj.b
a > obj.fn(b)
a > obj.head(0.5)
a > obj.head(a)
a > obj.head(b)
a > obj.obj.a
a > obj?.a
a > obj?.b
a > obj?.fn(0)
a > obj?.fn(b)
a > obj?.head(f)
a > obj?.obj.a
a > obj?.obj.b
a > obj?.obj?.a
a > obj?.obj?.b
a >= -0
a >= -a
a >= -f
a >= 0 != !ok
a >= 0 != obj.head(a, nil)
a >= 0 && ok
a >= 0 ** 0
a >= 0 ** 1
a >= 0 ** a
a >= 0 + b
a >= 0 ? s : b
a >= 0 ^ 0
a >= 0 ^ a
a >= 0 or ok
a >= 0.5 && obj?.a
a >= 0.5 ? div : f ** 1
a >= 0.5 || !ok
a >= 1 && f >= b
a >= 1 + 1
a >= 1 ? add : obj.obj
a >= 1 ^ a
a >= 1 ^ f
a >= 1 || any(arr, true)
a >= 2 ? s : -f
a >= a
a >= a != nil
a >= a != ok
a >= a != true
a >= a * a
a >= a ** 2
a >= a ** a
a >= a ** b
a >= a - b
a >= a ? arr : a
a >= a ^ 0
a >= a ^ 1 * b
a >= a and obj?.b
a >= a || obj.head("a", f).head(f.head(div ^ ok), add contains b.b)
a >= add(a, 0)
a >= add(a, a)
a >= add(b, b)
a >= arr[b]
a >= b
a >= b % 1
a >= b && f < f
a >= b - 0.5
a >= b ? 1 : false
a >= b ^ a
a >= b and obj.obj
a >= b or ok
a >= b || b >= 0.5
a >= f
a >= f * 2
a >= f ** 2
a >= f ? arr : add
a >= f ? b : ok
a >= f and ok
a >= f || obj.b.fn(add(f, any(obj, arr))?.b)
a >= float(b)
a >= get(arr, 0)
a >= int(0)
a >= int(f)
a >= len("c")
a >= min(f)
a >= obj.a
a >= obj.b
a >= obj.b || 0.5 <= obj.a
a >= obj.fn(1)
a >= obj.fn(a * a)
a >= obj.fn(div(a, b))
a >= obj.head(1, nil, "a")
a >= obj.head(a, nil)
a >= obj.head(f)
a >= obj.obj?.b
a >= obj?.a
a >= obj?.a / b
a >= obj?.b
a >= obj?.fn(0)
a >= obj?.head(a)
a >= obj?.obj.a
a >= obj?.obj?.a
a >= obj?.obj?.b
a ^ (0 / b)
a ^ (2 + 0.5)
a ^ (a % 2)
a ^ (a % b)
a ^ (a * a)
a ^ (a - a)
a ^ (a - f)
a ^ (b - 2)
a ^ (b / 0)
a ^ (f - f)
a ^ (f / 2)
a ^ -0
a ^ -0.5
a ^ -a
a ^ -b
a ^ -f
a ^ 0 * b
a ^ 0 + f
a ^ 0 - a
a ^ 0 >= a
a ^ 0.5 ** b
a ^ 0.5 + -1
a ^ 0.5 < f
a ^ 0.5 >= a
a ^ 1 ** f
a ^ 1 > obj?.b
a ^ 1 ^ obj.a
a ^ 2 * f
a ^ 2 + b
a ^ 2 == obj?.obj?.a
a ^ 2 ^ a
a ^ a
a ^ a ** a
a ^ a ** f
a ^ a + a * f
a ^ a / (b + f)
a ^ a / a
a ^ a / b
a ^ a < obj.a
a ^ a == 2 == nil
a ^ a > f
a ^ a ^ arr[a]
a ^ a ^ obj?.head(0)
a ^ abs(a)
a ^ add(1, 1)
a ^ add(a, b)
a ^ add(b, 2)
a ^ arr[0]
a ^ arr[a]
a ^ arr[b]
a ^ b
a ^ b != obj.obj?.a
a ^ b ** f
a ^ b ** obj?.b
a ^ b + 2 ^ f
a ^ b + a
a ^ b - b - a
a ^ b < 0 == ok
a ^ b > a
a ^ b ^ a
a ^ div(a, 2)
a ^ f
a ^ f != a
a ^ f ** 0.5
a ^ f ** f
a ^ f + a
a ^ f + b
a ^ f - a
a ^ f / b
a ^ f > 0 ? div : arr
a ^ f ^ obj?.a
a ^ first(arr)
a ^ get(arr, 0)
a ^ min(f)
a ^ obj.a
a ^ obj.b
a ^ obj.fn(b)
a ^ obj.fn(obj.a)
a ^ obj.head(a)
a ^ obj.head(f)
a ^ obj.obj.b
a ^ obj.obj?.b
a ^ obj?.a
a ^ obj?.b
a ^ obj?.head(b)
a ^ obj?.obj?.b
a in a .. 0
a in a .. 2
a in arr
a in arr && obj.a
a in arr == true
a in arr ? 0.5 : 0.5
a in arr ? 1 : obj
a in arr ? f : nil
a in arr ? f : ok
a in arr || 0.5 == f
a in b .. 0
a in filter(arr, false)
a in filter(arr, ok)
a in map(arr, #)
a in obj?.head(nil)?.obj
a in obj[nil]
abs(-0.5)
abs(-1)
abs(-2)
abs(-a)
abs(-b)
abs(-f)
abs(0 % 2)
abs(0 % a)
abs(0 % b)
abs(0 * 0.5)
abs(0 * b)
abs(0 + 0)
abs(0 + a)
abs(0 + b)
abs(0 + f)
abs(0 - a)
abs(0 / a)
abs(0 / b)
abs(0 / f)
abs(0 ^ 0.5)
abs(0 ^ b)
abs(0) ** lastIndexOf("b", "b")
abs(0) ** obj?.b
abs(0) / b
abs(0) < b * 0
abs(0) <= f
abs(0) == obj.a
abs(0) ^ obj?.a
abs(0.5 * f)
abs(0.5 ** 0.5)
abs(0.5 ** b)
abs(0.5 + 0.5)
abs(0.5 + f)
abs(0.5 - 1)
abs(0.5 - b)
abs(0.5 - f)
abs(0.5 ^ b)
abs(0.5) != obj.a
abs(0.5) == a
abs(0.5) == f != ok
abs(1 % 1)
abs(1 ** b)
abs(1 - a)
abs(1 / 0)
abs(1 / a)
abs(1 / f)
abs(1 ^ a)
abs(1) * 0 * a
abs(1) - min(a, 0)
abs(1) / f
abs(1) == f
abs(1) > obj?.b
abs(2 - 0)
abs(2 - 1)
abs(2 - a)
abs(2 ^ f)
abs(a * 0)
abs(a * a)
abs(a ** 0.5)
abs(a ** a)
abs(a ** f)
abs(a + 0)
abs(a + b)
abs(a - a)
abs(a / 1)
abs(a / b)
abs(a / f)
abs(a ^ 0.5)
abs(a ^ 1)
abs(a ^ f)
abs(a)
abs(a) * obj?.a
abs(a) + b
abs(a) + f
abs(a) - a == a
abs(a) <= b
abs(a) <= b % 1
abs(a) > f
abs(a) >= add(0, b)
abs(abs(0.5))
abs(abs(a))
abs(abs(f))
abs(abs(obj.head(b)))
abs(add(0, 0))
abs(add(0, a))
abs(add(0, b))
abs(add(1, b))
abs(add(2, b))
abs(add(a, 0))
abs(add(a, a))
abs(add(a, b))
abs(add(b, 1))
abs(add(b, a))
abs(add(b, b))
abs(arr[a])
abs(arr[a]) ** b
abs(b % a)
abs(b % b)
abs(b * 1)
abs(b * b)
abs(b ** 0)
abs(b ** 0.5)
abs(b ** 2)
abs(b ** b)
abs(b ** f)
abs(b + b)
abs(b + f)
abs(b - a)
abs(b - f)
abs(b / 0.5)
abs(b / a)
abs(b / f)
abs(b ^ 0)
abs(b ^ 2)
abs(b ^ a)
abs(b ^ f)
abs(b ^ obj.b)
abs(b)
abs(b) % a
abs(b) * a
abs(b) * b
abs(b) - f
abs(b) .. a
abs(b) < a
abs(b) < b
abs(b) <= f
abs(b) <= obj?.b
abs(b) >= b ? "c" : 0
abs(div(0, 1))
abs(div(0, a))
abs(div(a, a))
abs(div(a, b))
abs(div(b, a))
abs(div(b, b))
abs(f * 1)
abs(f ** 0)
abs(f ** 2)
abs(f ** a)
abs(f ** b)
abs(f ** f)
abs(f + 0)
abs(f + 2)
abs(f + a)
abs(f + b)
abs(f - a)
abs(f - f)
abs(f / b)
abs(f / f)
abs(f ^ 0)
abs(f ^ 1)
abs(f ^ f)
abs(f ^ obj.a)
abs(f ^ obj?.b)
abs(f)
abs(f) != f
abs(f) * obj.b
abs(f) ** f
abs(f) + b
abs(f) < obj?.a
abs(f) == a
abs(false ? "b" : 2)
abs(false ? s : 0)
abs(float(0))
abs(float(0.5))
abs(float(add(b, b)))
abs(float(b))
abs(float(f ^ a))
abs(get(arr, 2))
abs(get(arr, b))
abs(int(0))
abs(int(1))
abs(int(b))
abs(int(f))
abs(len("b"))
abs(len(arr))
abs(max(a))
abs(max(f))
abs(max(f, f))
abs(min(0, f))
abs(min(a))
abs(min(b))
abs(min(b, f))
abs(min(f))
abs(obj.a)
abs(obj.a) != b
abs(obj.b)
abs(obj.fn(0))
abs(obj.fn(a))
abs(obj.fn(b))
abs(obj.head(0.5, b))
abs(obj.head(1))
abs(obj.head(2))
abs(obj.head(2, nil, obj))
abs(obj.head(a))
abs(obj.head(a, a))
abs(obj.head(b))
abs(obj.head(b, 0.5))
abs(obj.head(f))
abs(obj.obj.b)
abs(obj?.a)
abs(obj?.b ** (a / b))
abs(obj?.b)
abs(obj?.fn(0))
abs(obj?.fn(1))
abs(obj?.fn(a))
abs(obj?.fn(b))
abs(obj?.head(0))
abs(obj?.head(2))
abs(obj?.head(a))
abs(obj?.head(a, 2))
abs(obj?.head(a, b, add))
abs(obj?.head(a, ok, b))
abs(obj?.head(b))
abs(obj?.head(b, a))
abs(obj?.head(b, arr, div, f))
abs(obj?.head(f, add, 0.5))
abs(obj?.obj.a)
abs(obj?.obj.b)
abs(obj?.obj?.a)
abs(ok ? 0.5 : 0.5)
abs(ok ? 0.5 : nil)
abs(ok ? a : b)
abs(ok ? b : arr)
abs(true ? b : b)
abs(true ? f : ok)
abs(true ? f : s)
add
add != add
add != add != ok
add != add && obj?.b
add != add ? add : !ok
add != add ? add(a, a) : add
add != add ? arr : "b"
add != add ? b : a
add != add ? obj : obj
add != add ? s : nil
add != div
add != div && obj.b
add != div == ok
add != div ? 0 : a
add != div ? f : obj
add != div ? nil : false
add != div ? ok : ok
add != div || obj?.head(0)
add != nil ? 1 : 2
add != nil ? div : s
add != nil and obj?.obj
add != nil || obj.a
add != obj.a
add != obj.a + a
add != obj.b
add != obj.head("a")
add != obj.head(-a)
add != obj.head(0 == obj)
add != obj.head(0, s, ok)
add != obj.head(add, "c")
add != obj.head(arr)
add != obj.head(arr, "a", f)
add != obj.head(b)
add != obj.head(f)
add != obj.head(f, 0, a, 2, f)
add != obj.head(ok, a, 0)
add != obj.head(s)
add != obj.obj
add != obj.obj.a
add != obj.obj.obj
add != obj.obj?.a
add != obj.obj?.b
add != obj.obj?.obj
add != obj?.a
add != obj?.b
add != obj?.head(0.5)
add != obj?.head(a, div, add)
add != obj?.head(add, 0.5)
add != obj?.head(div, ok)
add != obj?.head(f, nil, obj, true, nil)
add != obj?.head(s, add, div)
add != obj?.obj
add != obj?.obj.obj?.a
add != obj?.obj?.a
add != obj[nil]
add == add
add == add != ok
add == add == true
add == add ? 1 : f
add == add ? ok : a
add == add ? ok : f
add == add or obj.obj
add == add or ok
add == div
add == div != nil
add == div && obj.fn(nil, 0)
add == div ? f : a
add == div || s >= "b"
add == get(obj, s)
add == nil == nil
add == nil or obj.obj
add == nil or ok
add == obj.a
add == obj.b
add == obj.head("c", s)
add == obj.head(2, a)
add == obj.head(add, add, obj)
add == obj.head(f, "b", false, f)
add == obj.head(f, arr)
add == obj.head(obj)
add == obj.obj
add == obj.obj.b
add == obj.obj?.a
add == obj.obj?.b
add == obj?.a
add == obj?.b
add == obj?.c?.b
add == obj?.fn(b)
add == obj?.head("c")
add == obj?.head(add)
add == obj?.head(add, f, nil)
add == obj?.head(b, nil)
add == obj?.head(div)
add == obj?.head(obj)
add == obj?.head(s)
add == obj?.obj
add == obj?.obj.a
add == obj?.obj.obj
add == obj?.obj?.a
add in [b]
add in obj.head(nil)
add in obj?.head(arr)
add in obj?.head(arr, ok)
add in obj[toJSON(nil)]
add(-0, a)
add(-0, b)
add(-0, obj?.b)
add(-0, ok ? b : div)
add(-1, a)
add(-2, a)
add(-2, b)
add(-a, a)
add(-a, obj.a)
add(-b, b)
add(0 * b, obj?.a)
add(0 - a, a - a)
add(0, 0) <= f
add(0, 0) == obj.head(f)
add(0, 0) > last(arr)
add(0, 1) + f
add(0, 1) .. obj.b
add(0, 2) % (0 - b)
add(0, 2) > b
add(0, 2) > f
add(0, 2) ^ obj.b
add(0, a) != f
add(0, a) % (0 + a)
add(0, a) + a
add(0, a) + f
add(0, a) + obj.head(f)
add(0, a) <= f
add(0, a) > 0.5 ? obj : div
add(0, b) ** (f * f)
add(0, b) ** 0.5 ^ f
add(0, b) ** b
add(0, b) - max(f)
add(0, b) - obj.b
add(0, b) .. a
add(0, b) .. b
add(0, b) <= a + 0
add(1 % b, b)
add(1 + 0, b)
add(1, 0) == f
add(1, 0) ^ a
add(1, 1) > f
add(1, 2) ^ f
add(1, a) * obj.b
add(1, a) in arr
add(1, b) % a
add(1, b) + obj.head(a)
add(1, b) == f
add(2 - a, obj.fn(a))
add(2 - b, min(0))
add(2, 0) < a
add(2, 0) <= div(b, 2)
add(2, 2) + f
add(2, 2) / obj.fn(b)
add(2, 2) > b
add(2, a) - a
add(2, a) .. a
add(2, a) ^ a
add(2, b) != a
add(2, b) / b
add(2, b) > b
add(2, b) >= a
add(2, b) ^ obj.b
add(a % 2, a)
add(a % a, obj.b)
add(a % b, b)
add(a * 0, a)
add(a * 0, b * b)
add(a * a, a)
add(a * a, get(arr, b))
add(a * b, obj?.head(b))
add(a - 0, obj.b)
add(a - 1, a)
add(a - 2, a)
add(a - b, b)
add(a, -0)
add(a, -1)
add(a, -a)
add(a, -b)
add(a, 0) ** f
add(a, 0) - f ** 0.5
add(a, 0) .. -b
add(a, 0) .. obj?.a
add(a, 0) < 2 ? f : 1
add(a, 0) < b
add(a, 0) > a
add(a, 0) >= float(2)
add(a, 0) ^ f
add(a, 1) != 0.5 ? ok : add
add(a, 1) ** a
add(a, 1) - f
add(a, 1) < b
add(a, 1) > obj.a
add(a, 1) >= a
add(a, 1) in 1 .. a
add(a, 2) ** f
add(a, 2) / f
add(a, a * 2)
add(a, a - a)
add(a, a)
add(a, a) != 0.5 ? s : b
add(a, a) != f
add(a, a) != obj?.obj
add(a, a) % obj?.a
add(a, a) % obj?.fn(b)
add(a, a) - f
add(a, a) .. obj.a
add(a, a) / a
add(a, a) / b
add(a, a) / f
add(a, a) < b
add(a, a) < f
add(a, a) == a
add(a, a) > 1 - a
add(a, a) >= -b
add(a, a) >= 0.5 * 0
add(a, a) >= a
add(a, a) ^ f
add(a, abs(b))
add(a, add(a, 2))
add(a, add(a, b))
add(a, add(b, a))
add(a, add(b, b))
add(a, arr[a])
add(a, arr[b])
add(a, b * a)
add(a, b)
add(a, b) ** obj.b
add(a, b) ** obj.head(1, div)
add(a, b) + f / a
add(a, b) - b
add(a, b) - obj.a
add(a, b) / int(b)
add(a, b) == a
add(a, b) == b
add(a, b) == obj.obj
add(a, b) ^ b
add(a, b) ^ obj.b
add(a, count(arr, ok))
add(a, div(1, 1))
add(a, get(arr, a))
add(a, int(a))
add(a, int(f))
add(a, len(obj))
add(a, max(1))
add(a, obj.a)
add(a, obj.b)
add(a, obj?.a)
add(a, obj?.b)
add(a, obj?.fn(a))
add(a, obj?.head(0))
add(a, obj?.head(0, div, nil))
add(a, obj?.obj.b)
add(abs(0), b)
add(abs(a), obj?.a)
add(add(0, a), b)
add(add(2, a), b)
add(add(a, 0), -2)
add(add(a, 2), b)
add(add(a, b), b)
add(add(b, 0), a)
add(add(b, 0), b)
add(add(b, 2), a)
add(add(b, 2), b)
add(add(b, b), a)
add(arr[b], b)
add(b % 1, b + b)
add(b % a, a)
add(b * b, -a)
add(b + 0, a)
add(b + 0, len("b"))
add(b + 1, obj?.b)
add(b + 2, get(arr, 1))
add(b - 0, b)
add(b - 0, get(arr, 1))
add(b - 1, a)
add(b - a, obj.a)
add(b, -1)
add(b, -2)
add(b, -a)
add(b, -b)
add(b, 0 * a)
add(b, 0 + b)
add(b, 0) != b ? arr : obj
add(b, 0) != f
add(b, 0) * obj.b
add(b, 0) ** a
add(b, 0) ** obj.a
add(b, 0) + a
add(b, 0) + f
add(b, 0) == b + 0
add(b, 0) > a - f
add(b, 0) >= b
add(b, 0) >= obj?.b
add(b, 0) ^ (0 + 0.5)
add(b, 1) ** -2
add(b, 1) + a
add(b, 1) <= a
add(b, 1) == obj?.head(add, f)
add(b, 1) ^ f
add(b, 2 % a)
add(b, 2) == obj.obj.a
add(b, a * b)
add(b, a)
add(b, a) != a ? s : obj
add(b, a) != f
add(b, a) * obj.a
add(b, a) + a
add(b, a) - b
add(b, a) .. obj?.head(0, nil, f)
add(b, a) > a % b
add(b, a) > b == true
add(b, a) >= b
add(b, a) ^ b
add(b, a) ^ obj?.a
add(b, add(0, b))
add(b, add(1, b))
add(b, add(2, b))
add(b, add(b, 2))
add(b, arr[0])
add(b, b % a)
add(b, b * a)
add(b, b + a)
add(b, b)
add(b, b) % div(a, 1)
add(b, b) + b
add(b, b) - -b
add(b, b) - a
add(b, b) - f
add(b, b) < a + 0
add(b, b) >= a + 0.5
add(b, b) ^ obj?.b
add(b, div(0, a))
add(b, div(1, b))
add(b, div(a, a))
add(b, div(b, a))
add(b, div(b, b))
add(b, first(arr))
add(b, get(arr, b))
add(b, int(a))
add(b, len(arr))
add(b, max(b))
add(b, min(a))
add(b, obj.a)
add(b, obj.a) % a
add(b, obj.b)
add(b, obj.head(a))
add(b, obj.obj.a)
add(b, obj.obj?.b)
add(b, obj?.a)
add(b, obj?.b)
add(b, obj?.head(a))
add(b, obj?.obj.b)
add(b, ok ? 1 : a)
add(div(0, a), b)
add(div(a, a), add(0, 0))
add(div(a, b), b)
add(div(b, 2), a)
add(div(b, a), -a)
add(div(b, a), obj?.head(a, div))
add(div(b, b), b)
add(div(b, b), obj?.a)
add(false ? add : 0, 0 + a)
add(get(arr, 0), last(arr))
add(get(arr, a), a)
add(get(arr, a), b)
add(get(arr, b), b)
add(indexOf("a", "b"), b)
add(indexOf(s, s), a)
add(int(0), 0 - a)
add(int(0), b)
add(int(2), div(b, b))
add(int(a), b)
add(int(b), a)
add(int(f), 1 * b)
add(last(arr), a)
add(len(obj), b)
add(len(s), a)
add(max(0), a)
add(max(2), int(a))
add(min(0), len(arr))
add(min(2), a)
add(min(a), b)
add(min(a), len(arr))
add(min(a), obj.a)
add(obj.a, a)
add(obj.a, b)
add(obj.a, obj.a)
add(obj.a, obj.b)
add(obj.b, a * a)
add(obj.b, a)
add(obj.b, arr[0])
add(obj.b, b)
add(obj.b, obj.a)
add(obj.b, obj.b)
add(obj.b, obj.fn(b))
add(obj.b, obj?.a)
add(obj.b, obj?.b)
add(obj.b, obj?.head(0))
add(obj.b, obj?.head(b))
add(obj.fn(0), b)
add(obj.fn(a), obj.a)
add(obj.fn(b), a)
add(obj.head(0), 2 * a)
add(obj.head(0), obj?.head(b))
add(obj.head(1, add), obj.a)
add(obj.head(2, 0, "a"), b)
add(obj.head(a), b)
add(obj.head(b), a)
add(obj.head(b), b)
add(obj.head(b, obj), b)
add(obj.obj?.b, a)
add(obj?.a, -a)
add(obj?.a, a + 0)
add(obj?.a, a - b)
add(obj?.a, a)
add(obj?.a, b % 1)
add(obj?.a, b)
add(obj?.a, div(a, b))
add(obj?.a, div(b, a))
add(obj?.a, obj.a)
add(obj?.a, obj.b)
add(obj?.a, obj?.head(a, f, obj))
add(obj?.b, -0)
add(obj?.b, -1)
add(obj?.b, 0 * a)
add(obj?.b, 0 * b)
add(obj?.b, 2 + a)
add(obj?.b, a)
add(obj?.b, add(0, a))
add(obj?.b, b)
add(obj?.b, min(0))
add(obj?.b, obj.a)
add(obj?.b, obj.b)
add(obj?.b, obj?.a)
add(obj?.b, obj?.b)
add(obj?.b, obj?.head(0))
add(obj?.fn(0), int(a))
add(obj?.fn(0), obj.a)
add(obj?.fn(b), obj.a)
add(obj?.head(0, 0, false), arr[a])
add(obj?.head(a), b)
add(obj?.head(b), b)
add(obj?.head(b, s), a)
add(obj?.obj.a, b)
add(ok ? 2 : f, obj.b)
add(ok ? a : f, obj.b)
add(ok ? a : s, b)
all(0 .. 0, nil != 0)
all(0 .. 2, "c" startsWith s)
all(0 .. 2, ok)
all(0 .. a, ok)
all(0 .. b, ok)
all(a .. 0, "a" matches s)
all(a .. 0, a > b)
all(a .. b, !ok)
all(arr, "a" <= s)
all(arr, "a" contains "b")
all(arr, "a" in obj)
all(arr, "b" matches "a")
all(arr, "c" in obj)
all(arr, "c" matches s)
all(arr, # != f)
all(arr, 0 == nil)
all(arr, 0 > b)
all(arr, 0.5 != b)
all(arr, 0.5 <= a)
all(arr, 0.5 >= a)
all(arr, 2 != 1)
all(arr, 2 < 0)
all(arr, 2 < a)
all(arr, 2 <= a)
all(arr, 2 > f)
all(arr, a != a)
all(arr, a < 0)
all(arr, a < 1)
all(arr, a < b)
all(arr, a < obj.b)
all(arr, a <= f)
all(arr, a == a)
all(arr, a == f)
all(arr, a > f)
all(arr, a >= b)
all(arr, add != add)
all(arr, add == nil)
all(arr, all(arr, ok))
all(arr, all(arr, true))
all(arr, any(arr, ok))
all(arr, b < 0)
all(arr, b <= b)
all(arr, b == a)
all(arr, f != a)
all(arr, f < #)
all(arr, f == b)
all(arr, f == f)
all(arr, f >= b)
all(arr, f >= f)
all(arr, false == ok)
all(arr, false ? div : false)
all(arr, false and ok)
all(arr, false) and f <= b
all(arr, nil != 2)
all(arr, nil != nil)
all(arr, nil == "b")
all(arr, nil == add)
all(arr, nil == arr)
all(arr, none(arr, ok))
all(arr, not true)
all(arr, obj.head(false))
all(arr, obj?.head(true))
all(arr, ok != nil)
all(arr, ok && ok)
all(arr, ok == obj.b)
all(arr, ok || false)
all(arr, ok)
all(arr, ok) != obj?.b
all(arr, ok) != obj?.obj
all(arr, ok) or obj.b
all(arr, ok) or obj?.head(a)
all(arr, one(arr, ok))
all(arr, s != s)
all(arr, s <= "b")
all(arr, s > "a")
all(arr, s contains s)
all(arr, s matches s)
all(arr, true or false)
all(arr, true or true)
all(arr, true) && a == nil
all(b .. a, a > f)
all(filter(arr, false), ok || ok)
all(filter(arr, true), "a" >= "a")
all(map(arr, "b"), ok)
all(map(arr, 0), ok)
all(map(arr, 0.5), 1 < 2)
all(map(arr, 0.5), ok)
all(map(arr, 2), b != b)
all(map(arr, add), 2 < f)
all(map(arr, arr), 2 == b)
all(map(arr, b), b >= b)
all(map(arr, b), not true)
all(map(arr, b), ok)
all(map(arr, f), a > f)
all(map(arr, false), #)
all(map(arr, obj), 0 <= f)
all(map(arr, ok), #)
all(map(arr, s), ok)
all(obj.head("c"), ok)
all(obj.head(arr, 0.5, div), true or false)
all(obj.head(obj, a), ok)
all(obj.head(obj, f, b), ok)
all(obj.head(obj, s), 0 >= f)
all(obj.head(s), b < 0)
all(obj.obj, "a" == s)
all(obj.obj, a >= a)
all(obj.obj, add == add)
all(obj.obj, all(arr, ok))
all(obj.obj, div == nil)
all(obj.obj, f <= a)
all(obj.obj, obj.head(ok, div))
all(obj.obj, ok || ok)
all(obj.obj, ok)
all(obj?.head("b", ok, add, 0), ok)
all(obj?.head("c", b), 0 < a)
all(obj?.head(arr), 0.5 > f)
all(obj?.head(arr), b < f)
all(obj?.head(arr), obj.head(ok))
all(obj?.head(arr, 0.5, add, nil), f != 0.5)
all(obj?.head(obj), a <= 0)
all(obj?.head(obj, nil), ok)
all(obj?.head(s), 1 == f)
all(obj?.obj, 0 > 0)
all(obj?.obj, b == 0.5)
all(obj?.obj, b >= 1)
all(obj?.obj, b >= a)
all(obj?.obj, div != nil)
all(obj?.obj, nil in arr)
all(obj?.obj, obj.head(ok))
all(obj?.obj, obj?.head(ok, ok))
all(obj?.obj, ok && false)
all(obj?.obj, ok)
all(obj?.obj, s endsWith "c")
all(obj?.obj, s matches s)
all(ok ? arr : s, ok or true)
all(ok ? obj : f, b > f)
any(0 .. a, ok)
any([false, "c"], ok)
any([ok, false], #)
any(a .. b, ok ? ok : obj)
any(a .. b, ok)
any(arr, !false)
any(arr, !true)
any(arr, "a" == obj.b)
any(arr, "b" < s)
any(arr, "c" != obj?.obj)
any(arr, "c" startsWith "c")
any(arr, # != a)
any(arr, # != b)
any(arr, 0 != 0.5)
any(arr, 0.5 != b)
any(arr, 0.5 >= f)
any(arr, 1 != 0)
any(arr, 2 < 0.5)
any(arr, a != b)
any(arr, a < b)
any(arr, a == 0.5)
any(arr, a == f)
any(arr, a > 0.5)
any(arr, a > b)
any(arr, a in arr)
any(arr, add != div)
any(arr, any(arr, true))
any(arr, b != f)
any(arr, b < f)
any(arr, b <= f)
any(arr, b == 0)
any(arr, b > 0)
any(arr, b > f)
any(arr, div == div)
any(arr, f < a)
any(arr, f < b)
any(arr, f <= 0.5)
any(arr, f > 0.5)
any(arr, f >= a)
any(arr, false and false)
any(arr, false and ok)
any(arr, false || false)
any(arr, false) != ok
any(arr, false) && ok
any(arr, false) ? div(nil, a) : obj
any(arr, false) || false ? div : 0
any(arr, nil != add)
any(arr, nil != f)
any(arr, nil != s)
any(arr, nil == "b")
any(arr, nil == "c")
any(arr, nil == 1)
any(arr, nil == a)
any(arr, nil == add)
any(arr, nil == b)
any(arr, nil == s)
any(arr, not ok)
any(arr, obj.head(false))
any(arr, obj.head(false, div, 0, add))
any(arr, obj.head(false, true))
any(arr, obj.head(ok, add))
any(arr, ok != nil)
any(arr, ok ? ok : b)
any(arr, ok)
any(arr, ok) && obj.a
any(arr, ok) && obj.obj
any(arr, ok) && ok
any(arr, ok) == ok
any(arr, ok) ? s : keys(obj)
any(arr, ok) and obj.a
any(arr, ok) or obj.b
any(arr, ok) or ok
any(arr, one(arr, false))
any(arr, s <= s)
any(arr, s contains "c")
any(arr, s endsWith "b")
any(arr, string(2) != s)
any(arr, true) != ok
any(arr, true) && obj?.head(false)
any(arr, true) and b != f
any(arr, true) or obj?.a
any(arr, true) || obj.obj
any(arr[0:b], div != div)
any(b .. 2, a == b)
any(b .. a, obj?.a)
any(false ? add : obj, nil == f)
any(false ? div : "a", ok)
any(false ? false : s, !true)
any(filter(arr, ok), a != a)
any(filter(arr, ok), ok ? ok : 0)
any(filter(arr, ok), ok)
any(filter(arr, true), "b" in obj)
any(keys(obj), ok)
any(map(arr, 0), a < a)
any(map(arr, 0), b <= 0)
any(map(arr, 0), nil != "b")
any(map(arr, 0.5), a <= a)
any(map(arr, a), false && ok)
any(map(arr, add), ok)
any(map(arr, arr), 2 == nil)
any(map(arr, div), 0 > f)
any(map(arr, div), ok)
any(map(arr, f), b == 0)
any(map(arr, f), nil != a)
any(map(arr, f), ok)
any(map(arr, ok), #)
any(map(obj.head(s), a), ok)
any(obj.head("b"), ok)
any(obj.head("c", obj), 1 != nil)
any(obj.head(arr), 0 < b)
any(obj.head(obj), a < b)
any(obj.head(s), 0 >= 0)
any(obj.obj, 0.5 > b)
any(obj.obj, 2 == 0.5)
any(obj.obj, a < f)
any(obj.obj, obj != obj)
any(obj.obj, ok && false)
any(obj.obj, ok and ok)
any(obj.obj, ok)
any(obj.obj, s <= s)
any(obj.obj, s > "a")
any(obj?.head(arr), ok)
any(obj?.head(upper(a, 0, "c")), ok)
any(obj?.obj, 0 >= 0.5)
any(obj?.obj, a <= 0.5)
any(obj?.obj, arr == arr)
any(obj?.obj, b == b)
any(obj?.obj, f == 1)
any(obj?.obj, f == nil)
any(obj?.obj, f > a)
any(obj?.obj, not false)
any(obj?.obj, not ok)
any(obj?.obj, ok != nil)
any(obj?.obj, ok)
any(obj?.obj, s >= "c")
any(obj?.obj?.obj, ok)
any(ok ? "b" : ok, 2 != b)
any(ok ? arr : ok, ok)
any(ok ? obj : 0, b < b)
any(ok ? obj : ok, 0 < 0.5)
arr
arr != arr
arr != arr && ok ? arr : f
arr != arr == obj.head(a)
arr != b .. 0
arr != filter(arr, true)
arr != map(arr, 0)
arr != map(arr, arr)
arr != map(arr, obj)
arr != nil ? ok : f
arr != nil ? ok : ok
arr != nil and f != b
arr != nil or a == 0
arr != nil || true && false
arr != obj.a
arr != obj.b
arr != obj.head(0.5)
arr != obj.head(add, add)
arr != obj.head(all("c", ok))
arr != obj.head(arr, add)
arr != obj.head(arr, s)
arr != obj.head(b)
arr != obj.head(b, 0)
arr != obj.head(b, b, b, true)
arr != obj.head(nil)
arr != obj.head(s)
arr != obj.head(true, b, "a")
arr != obj.obj
arr != obj.obj.a
arr != obj?.a
arr != obj?.b
arr != obj?.head("a" >= s)
arr != obj?.head(0)
arr != obj?.head(0.5)
arr != obj?.head(div)
arr != obj?.head(false)
arr != obj?.head(nil)
arr != obj?.head(obj, add)
arr != obj?.head(obj, s, arr, add).a
arr != obj?.head(s)
arr != obj?.obj
arr != obj?.obj.b
arr != obj?.obj?.a
arr == a .. a
arr == arr
arr == arr != ok
arr == arr == ok
arr == arr ? "b" : add
arr == arr ? a : 0
arr == arr ? add : obj
arr == arr ? nil : "a"
arr == arr ? obj : nil
arr == arr ? obj?.head(div, "b") : s
arr == arr ? ok : a
arr == arr ? s : a
arr == arr and obj?.fn(a)
arr == arr and obj?.head(a, 0.5, arr, arr)
arr == arr or obj.b != b
arr == map(arr, true)
arr == nil ? a : ok
arr == nil ? ok : div
arr == nil or add == div
arr == nil or obj.fn(b)
arr == nil || obj.b
arr == obj.a
arr == obj.b
arr == obj.head(0, div)
arr == obj.head(arr, f, ok)
arr == obj.head(f, obj)
arr == obj.head(s, 0)
arr == obj.obj
arr == obj.obj ? arr : obj
arr == obj.obj.b
arr == obj.obj.obj
arr == obj?.a
arr == obj?.b
arr == obj?.head(a)
arr == obj?.head(a, nil)
arr == obj?.head(arr)
arr == obj?.head(arr, "c")
arr == obj?.head(b, ok)
arr == obj?.head(div)
arr == obj?.head(false)
arr == obj?.head(nil, f, "b")
arr == obj?.head(obj, arr)
arr == obj?.head(s, 0.5)
arr == obj?.head(s, a)
arr == obj?.obj
arr == obj?.obj.b
arr == obj?.obj.obj
arr == obj?.obj.obj?.a
arr in keys(obj)
arr in obj.head(arr)
arr in obj?.head(get(0, b))
arr[-a]
arr[0 * 2]
arr[0 * a]
arr[0 + 0]
arr[0 + 2:a]
arr[0] % b
arr[0] - a
arr[0] / obj?.head(f, 0)
arr[0] <= min(1)
arr[0] >= f
arr[1 % b]
arr[1 * a]
arr[1] < a
arr[1] == b
arr[2 % b]
arr[2 * 0:b]
arr[2] * obj.a
arr[a + a]
arr[a - b]
arr[a]
arr[a] != f
arr[a] != f + 1
arr[a] * a
arr[a] ** a
arr[a] + f
arr[a] - 1 / 1
arr[a] .. b
arr[a] <= a
arr[a] > -a
arr[a] >= f
arr[a] ^ f
arr[add(a, 0)]
arr[add(b, 0):b]
arr[add(b, 0)]
arr[b % b]
arr[b - 0]
arr[b - a]
arr[b:a * b]
arr[b:obj.b]
arr[b]
arr[b] % a
arr[b] * (b + a)
arr[b] ** a
arr[b] - add(b, 1)
arr[b] - arr[a]
arr[b] - b
arr[b] - f
arr[b] - obj?.b
arr[b] == obj.b
arr[b] > -0
arr[b] > a
arr[b] > b
arr[b] > get(arr, 0)
arr[b] > last(arr)
arr[div(a, 1)]
arr[div(a, 2)]
arr[div(a, b)]
arr[len("a")]
arr[max(0)]
arr[max(b)]
arr[obj.a]
arr[obj.b:obj?.fn(2)]
arr[obj.b]
arr[obj.fn(a)]
arr[obj.head(a)]
arr[obj.head(a, obj)]
arr[obj.head(f)]
arr[obj?.a]
arr[obj?.b]
arr[obj?.fn(0)]
arr[obj?.head(b)]
arr[obj?.head(f)]
arr[true ? b : obj]
b
b != -a
b != -f
b != 0 % b
b != 0 && obj?.head("c", 0.5)
b != 0 * a
b != 0 ? false : 1
b != 0 ? obj : arr
b != 0 ? ok : nil
b != 0 ? true : arr
b != 0 or s <= "b"
b != 0.5 * a
b != 0.5 == ok != ok
b != 0.5 ? ok : ok
b != 0.5 ^ obj?.b
b != 1 - b
b != 1 - f
b != 1 / a
b != 1 == ok
b != 2 || f > a
b != a
b != a % a
b != a * a
b != a - a
b != a / 0.5
b != a ? "b" : arr
b != a ? "c" : obj
b != a ? a : "a"
b != a ? f : div
b != a ? obj : add
b != add(2, 0)
b != add(2, a)
b != add(a, a)
b != b
b != b != false
b != b - a
b != b - b
b != b == nil
b != b == ok
b != b ? ok : div
b != b ? s : obj.a
b != div(2, b)
b != f
b != f != ok
b != f / a
b != f == true
b != f ? 0.5 : arr
b != f ? arr : ok
b != f ? obj : add
b != f or obj.b
b != float(a)
b != get(arr, 2)
b != get(obj, s)
b != nil ? nil : s
b != nil ? obj : f
b != nil || ok
b != obj.a
b != obj.b
b != obj.c
b != obj.head("b", obj)
b != obj.head(add)
b != obj.head(arr)
b != obj.head(arr, f < b)
b != obj.head(b, obj, false)
b != obj.head(div, f)
b != obj.head(nil, s)
b != obj.head(obj)?.a
b != obj.head(ok or not b)
b != obj.head(ok)
b != obj.obj
b != obj.obj.obj
b != obj?.a
b != obj?.a ** b
b != obj?.b
b != obj?.head(div)
b != obj?.head(false, ok)
b != obj?.head(map(obj, add))
b != obj?.head(not (0 == 0))
b != obj?.head(obj)
b != obj?.obj
b != obj?.obj.obj
b != obj?.obj?.a
b % (0 + b)
b % (0 - a)
b % (b - a)
b % -1
b % -a
b % -obj.b
b % -obj?.b
b % 1 - f - b
b % 1 / 0.5
b % 2 >= obj?.head(f)
b % 2 in arr
b % a
b % a % a
b % a % b
b % a * a
b % a * f
b % a + 0.5 + b
b % a - a
b % a - f
b % a .. b
b % a / a
b % a <= a
b % a == b
b % a > b
b % a in arr
b % add(0, b)
b % add(1, 2)
b % add(a, a)
b % arr[a]
b % arr[obj?.b]
b % b
b % b != a
b % b % obj.a
b % b * b
b % b + -0.5
b % b - b
b % b - f
b % b < a
b % b < f
b % b <= f ? s : s
b % b == b
b % get(arr, b)
b % max(0, a)
b % obj.a
b % obj.b
b % obj.fn(1)
b % obj.head(a, div)
b % obj.obj.a
b % obj?.a
b % obj?.b
b % obj?.fn(b)
b % obj?.head(a)
b % obj?.head(a, obj)
b % obj?.head(b)
b % obj?.head(b, ok, div)
b % obj?.head(obj, false).b
b % obj?.obj?.a
b % obj?.obj?.b
b * (0 + f)
b * (2 + 0.5)
b * (a + f)
b * (a - 1)
b * -0
b * -0.5
b * -a
b * -b
b * -f
b * 0 != a
b * 0 * 0
b * 0 ** 1
b * 0 - get(arr, a)
b * 0 .. a
b * 0 / a
b * 0 / f
b * 0 < b
b * 0 >= b
b * 0 >= f
b * 0.5 / (b - b)
b * 0.5 / b
b * 0.5 <= f
b * 0.5 == b
b * 1 * a
b * 1 * min(b)
b * 2 == f
b * 2 > obj.b
b * a
b * a * a
b * a ** f
b * a + a
b * a - a
b * a .. b
b * a / 0.5
b * a <= f
b * a == 0.5 - f
b * a == obj?.a
b * a > 2 ** f
b * a > f
b * a ^ 0
b * abs(0)
b * abs(a)
b * abs(b)
b * add(2, b)
b * b
b * b != 0 % a
b * b != f
b * b % a
b * b * obj.a
b * b + b
b * b - obj.a
b * b / a
b * b / f
b * b / obj?.a
b * b == f
b * b == len(s)
b * b > f
b * b ^ a
b * b in arr
b * f
b * f * 0
b * f * 2
b * f * b
b * f + b
b * f + obj.a
b * f / b
b * f <= a == true
b * f <= b
b * f == b
b * f ^ 0.5
b * first(arr)
b * float(0.5)
b * float(f)
b * get(arr, 0)
b * get(arr, 1)
b * int(a)
b * max(2)
b * obj.a
b * obj.b
b * obj.fn(b)
b * obj.head(a)
b * obj.head(b)
b * obj.obj.a
b * obj.obj.b
b * obj.obj?.a
b * obj.obj?.b
b * obj?.a
b * obj?.b
b * obj?.fn(obj.b)
b * obj?.fn(obj?.b)
b * obj?.head(b, a) * obj.a
b * obj?.head(f)
b * obj?.head(f, f < 0)
b * obj?.obj.b
b ** (0 * 0.5)
b ** (0 * f)
b ** (0 - a)
b ** (0 / b)
b ** (1 % 1)
b ** (2 * a)
b ** (a % b)
b ** (a - a)
b ** (b + b)
b ** (b / f)
b ** (f * b)
b ** (f + 0)
b ** (f - 0)
b ** (f - 2)
b ** (f / f)
b ** -a
b ** -b
b ** 0 * b * a
b ** 0 - b
b ** 0 < f
b ** 0 < obj?.fn(2)
b ** 0 == a
b ** 0 ^ a ** f
b ** 0 ^ obj.b
b ** 0.5 ** a
b ** 0.5 ** f
b ** 0.5 + obj?.a
b ** 0.5 >= b
b ** 0.5 ^ (a * b)
b ** 0.5 ^ b
b ** 1 / a
b ** 1 / f
b ** 2 ** a
b ** 2 ** b
b ** 2 + 0.5 ^ f
b ** 2 - a
b ** a
b ** a != obj?.a
b ** a != obj?.b
b ** a * b
b ** a * obj.b
b ** a ** b
b ** a + obj?.head(0)
b ** a - obj?.fn(b)
b ** a / b
b ** a / obj.fn(a)
b ** a < a
b ** a == obj?.fn(b)
b ** a > b
b ** a ^ 2
b ** a ^ a
b ** arr[0]
b ** arr[a]
b ** b
b ** b * obj?.b
b ** b ** 0
b ** b ** 0.5
b ** b + a
b ** b < a % 2
b ** b ^ f
b ** div(a, a)
b ** div(b, 2)
b ** f
b ** f != f
b ** f != obj.a
b ** f * a
b ** f * f
b ** f * obj.b
b ** f ** f
b ** f < 0 * 0.5
b ** f < b
b ** f ^ a
b ** f ^ b
b ** int(0.5)
b ** int(a)
b ** int(b)
b ** max(1)
b ** max(a, a, f)
b ** min(1)
b ** obj.a
b ** obj.b
b ** obj.fn(2)
b ** obj.fn(b)
b ** obj.head(a)
b ** obj.head(b)
b ** obj.obj?.a
b ** obj.obj?.b
b ** obj?.a
b ** obj?.b
b ** obj?.fn(b)
b ** obj?.head(0.5)
b ** obj?.head(0.5, arr, "c")
b ** obj?.head(b, arr)
b ** obj?.obj.b
b ** obj?.obj?.a
b + -2
b + -b
b + -f
b + 0 % b
b + 0 + a
b + 0 + b
b + 0 - b
b + 0 - obj.head(0.5, obj, div, obj, a)
b + 0 >= a
b + 0 ^ 1
b + 0.5 != b - 0
b + 0.5 + -0
b + 0.5 + a % a
b + 0.5 / 2
b + 0.5 / b
b + 0.5 >= b ? "c" : arr
b + 1 == obj.obj
b + 2 < -b
b + 2 < b
b + 2 <= b
b + 2 == obj.b
b + 2 ^ 0
b + a
b + a != 1 * b
b + a != obj.obj
b + a % a
b + a ** 0
b + a .. a
b + a .. b
b + a < a == false
b + a <= b
b + a > a
b + add(b, a)
b + b
b + b % b
b + b - a
b + b - obj?.head(0.5)
b + b / 1
b + b / b
b + b <= a
b + b == a
b + b >= get(arr, 0)
b + b ^ 1
b + count(arr, true)
b + div(0, 1)
b + f
b + f != b ? nil : f
b + f ** a
b + f + a
b + f - b
b + f - b - b
b + f - obj.fn(a)
b + f == f
b + f == obj?.a
b + f > b
b + f > div(2, a)
b + float(0.5)
b + int(f)
b + len("c")
b + max(f)
b + min(0.5)
b + obj.a
b + obj.a > f
b + obj.b
b + obj.head(b)
b + obj.head(f, "c", 0)
b + obj.head(f, 1, 0.5)
b + obj.obj.a
b + obj.obj.b
b + obj.obj?.b
b + obj?.a
b + obj?.b
b + obj?.head(0, 0.5, nil, b, obj)
b + obj?.head(0, add)
b + obj?.head(1, a, obj, obj)
b + obj?.head(b)
b + obj?.obj.b
b + obj?.obj?.a
b + obj?.obj?.b
b - -2
b - -b
b - -f
b - 0 - 0
b - 0 == a ? obj : false
b - 0 > b
b - 0 > f
b - 0 ^ 0
b - 0.5 != f
b - 0.5 / b
b - 1 - b
b - 1 .. b
b - 1 / 0
b - 1 / 2
b - 1 / a
b - 1 / f
b - 1 < b
b - 1 <= add(b, 0)
b - 2 ** 2
b - 2 - 2
b - 2 / a
b - 2 < b
b - a
b - a % b
b - a * f
b - a ** 1
b - a + f
b - a - 0.5
b - a .. a
b - a == a
b - a == f
b - a ^ 0
b - a ^ b
b - a in arr
b - abs(0)
b - add(2, b)
b - add(a, 0)
b - arr[0]
b - arr[obj.b]
b - b
b - b + a
b - b - b
b - b - f
b - b .. a
b - b < a
b - b < a ^ 0.5
b - b ^ 0
b - b ^ f
b - div(2, 2)
b - div(a, a)
b - f
b - f ** a
b - f + 0
b - f + 1
b - f + obj?.b
b - f - 0 ** a
b - f - 0.5
b - f - f
b - f < f
b - f == a
b - f >= len(arr)
b - get(arr, a)
b - int(0.5)
b - max(0, a)
b - max(a)
b - min(2)
b - obj.a
b - obj.a + a
b - obj.a == b
b - obj.b
b - obj.fn(b)
b - obj.fn(true && a)
b - obj.head(0, obj)
b - obj.head(f, 2, f)
b - obj.obj.a
b - obj.obj?.a
b - obj?.a
b - obj?.b
b - obj?.fn(b)
b - obj?.head(1)
b - obj?.head(f)
b - obj?.obj.b
b - obj?.obj?.a
b - obj?.obj?.b
b .. -2
b .. -a
b .. -b
b .. 0 * a
b .. 0 + b
b .. 0 == obj.b
b .. 1 * 2
b .. a
b .. a % a
b .. a + b
b .. add(a, count(arr, false))
b .. add(b, 0)
b .. add(b, a)
b .. add(b, b)
b .. arr[b % 2]
b .. b
b .. b * a
b .. b + b
b .. count(arr, ok)
b .. first(obj.head("b", obj))
b .. get(arr, 0)
b .. get(arr, b)
b .. len(s)
b .. min(b)
b .. obj.a
b .. obj.b
b .. obj.head(b)
b .. obj?.a
b .. obj?.b
b .. obj?.fn(a)
b .. obj?.head(2)
b .. obj?.head(a)
b .. obj?.head(obj, s, div)?.b
b .. obj?.obj.b
b .. obj?.obj?.a
b / (0 + 0)
b / (1 + b)
b / (a + f)
b / (a - 0.5)
b / (a - 2)
b / (b - b)
b / (f + b)
b / (f - f)
b / -0
b / -0.5
b / 0 * f
b / 0 - b
b / 0 / a
b / 0 < a
b / 0 > b
b / 0 > b ? f : s
b / 0 >= f
b / 0.5 * a
b / 0.5 * f
b / 0.5 ** 2
b / 0.5 + b
b / 0.5 - b
b / 0.5 <= a
b / 0.5 <= obj?.a
b / 0.5 >= 0.5 ? obj : arr
b / 1 / b
b / 2 != a
b / 2 <= abs(1)
b / 2 ^ 2
b / a
b / a != a
b / a != obj.obj
b / a ** f
b / a + a
b / a + b
b / a / 0
b / a / a
b / a / b
b / a == obj?.b
b / a > 2 ? div : arr
b / a > b
b / add(1, a)
b / add(a, a)
b / add(b, 1)
b / add(b, b)
b / arr[a]
b / b
b / b * 0 ** b
b / b ** f
b / b < b
b / b < obj.b
b / b <= b
b / b ^ 0
b / f
b / f != a
b / f != abs(0.5)
b / f * f
b / f ** 0.5
b / f + b
b / f / f
b / f < f
b / f <= b
b / f <= f
b / f <= obj?.a
b / f == a
b / f >= a
b / get(arr, 0)
b / get(arr, b)
b / int(a)
b / min(1)
b / min(b)
b / obj.a
b / obj.b
b / obj.fn(2)
b / obj.fn(a)
b / obj.fn(b)
b / obj.head(a, arr, add, a)
b / obj.obj.a
b / obj.obj.b
b / obj.obj?.obj.a
b / obj?.a
b / obj?.b
b / obj?.head(b, arr, f)
b / obj?.obj.a
b / obj?.obj.b
b < -2
b < 0 != obj.b
b < 0 % b
b < 0 + 1
b < 0 - a
b < 0 or ok
b < 0 || ok
b < 0.5 ? a : b
b < 0.5 ? nil : div
b < 1 == ok
b < 1 ? b : 0
b < 2 && obj.fn(b)
b < 2 ** 1
b < 2 / 1
b < 2 / a
b < 2 ^ a
b < a
b < a ** 0.5
b < a + a
b < a - 1
b < a - f
b < a / b
b < a ? "a" : obj
b < a ? 0 : nil
b < a ? div : s
b < a ? obj : f
b < a ^ a and obj.head("c", 2)?.a
b < a ^ f
b < a and ok
b < add(b, 1)
b < add(b, a)
b < b
b < b && ok
b < b - 1
b < b == ok
b < b ? b : true
b < b ? f : arr
b < b ? nil : ok
b < b ? s : s
b < b ^ b
b < b and "b" in obj
b < b and nil != 0
b < b and obj.a
b < b and ok
b < b or obj?.a
b < f
b < f != ok
b < f ** b
b < f == ok
b < f ? 1 : div
b < f ? obj : b
b < f ? obj.fn(arr, nil, nil, div) : obj
b < f ? ok : s
b < float(0)
b < float(b)
b < int(0)
b < int(f)
b < obj.a
b < obj.a != obj?.obj
b < obj.b
b < obj.head(f)
b < obj.obj.a
b < obj?.a
b < obj?.b
b < obj?.b == true != obj.a
b < obj?.fn(0)
b < obj?.head(0)
b < obj?.head(0, s, a)
b < obj?.head(b)
b < obj?.head(b, nil)
b < obj?.obj?.a
b < obj?.obj?.b
b <= -0
b <= -1
b <= -a
b <= 0 != ok
b <= 0 % b
b <= 0 && obj[s]
b <= 0 * 0.5
b <= 0 - 0.5
b <= 0.5 + 0.5
b <= 0.5 ? ok : b
b <= 1 - f
b <= 1 ? b : a
b <= 1 || ok
b <= 2 ? s : obj
b <= 2 and ok
b <= a
b <= a * 1
b <= a ** 0
b <= a == nil
b <= a ? 0 : div
b <= a ? obj : arr
b <= a ^ a
b <= a || obj?.a
b <= a || ok
b <= abs(a)
b <= abs(f)
b <= add(b, 1)
b <= arr[b]
b <= b
b <= b != nil
b <= b % b
b <= b * a
b <= b + b
b <= b / f
b <= b ? add : ok
b <= b ^ b
b <= b or b < b
b <= b or obj.b
b <= b || ok
b <= count(arr, ok)
b <= div(b, b)
b <= f
b <= f != false
b <= f != ok
b <= f != ok ? arr : add
b <= f * f
b <= f ** f
b <= f + b
b <= f - obj?.b
b <= float(b)
b <= get(arr, 0)
b <= int(a)
b <= int(arr[0])
b <= len(keys(obj))
b <= max(0)
b <= max(a)
b <= max(f, f, a, f, f)
b <= min(b, 0)
b <= obj.a
b <= obj.b
b <= obj.head(1)
b <= obj.head(a, 0)
b <= obj.head(b)
b <= obj.obj.b
b <= obj?.a
b <= obj?.b
b <= obj?.fn(a)
b <= obj?.fn(arr[0.5])
b <= obj?.head(0, ok, false)
b <= obj?.obj.a
b == -0.5
b == -b
b == -f
b == 0 != true ? b : arr
b == 0 * 0
b == 0 + 0
b == 0 / a
b == 0 == obj.b
b == 0 ? arr : a
b == 0 ? s : 0.5
b == 0 and obj?.obj
b == 0 or obj?.head(s)
b == 0 || obj.obj
b == 0.5 != obj.head(a, s, ok)
b == 1 + obj.a
b == 1 ? add : false
b == 1 ^ b
b == 2 ^ a
b == a
b == a != nil
b == a / 1
b == a == nil
b == a ? a : b
b == a ? div : ok
b == a ? f : false
b == a ? f : ok
b == a or ok
b == abs(f)
b == add(0, b)
b == add(a, 2)
b == add(a, a)
b == add(a, b)
b == arr[a]
b == arr[b]
b == b
b == b != obj?.obj
b == b != ok
b == b && 0 != 0
b == b * 2
b == b - a
b == b - b
b == b / 0.5
b == b / b
b == b == not false
b == b or f < 0
b == div(b, a)
b == f
b == f && ok
b == f * 0
b == f - b
b == f == ok
b == f ? add : div
b == f or ok
b == f || obj.b
b == float(b)
b == get(arr, 0)
b == get(arr, 1)
b == get(obj.head(nil, 0.5, div), a)
b == int(0)
b == len("a")
b == max(f)
b == min(0)
b == nil != obj.a
b == obj.a
b == obj.b
b == obj.b != obj.obj
b == obj.fn(0)
b == obj.fn(a)
b == obj.fn(add(a, 1))
b == obj.fn(b)
b == obj.head(arr)
b == obj.head(div)
b == obj.head(f)
b == obj.head(obj?.head(ok, 0, div))
b == obj.head(ok, b, 2)
b == obj.head(one(arr, ok))
b == obj.head(true, add, div)
b == obj.obj
b == obj?.a
b == obj?.b
b == obj?.head("b")
b == obj?.head(0)
b == obj?.head(a)
b == obj?.head(div)
b == obj?.head(nil, add, ok)
b == obj?.head(obj).a
b == obj?.head(obj?.b)
b == obj?.head(s)
b == obj?.obj
b == obj?.obj.b
b == obj?.obj?.obj
b == obj[s]
b > 0 != true
b > 0 - 2
b > 0 / a
b > 0 || ok
b > 0 || ok ? 0 : a
b > 0.5 ? arr : div
b > 0.5 ^ 2
b > 0.5 || nil == "a"
b > 0.5 || obj.head(1 .. s.obj)
b > 1 * f
b > 1 ? 0 : 0
b > 1 ? false : f
b > 1 and 2 <= b
b > 2 != ok
b > 2 ? "a" : false
b > a
b > a != false
b > a != nil
b > a * a
b > a * f
b > a ** 0
b > a ** b
b > a ** f
b > a / 2
b > a / obj?.b
b > a ^ b
b > a or 0.5 > 2
b > a or a != 0
b > a || f != 0
b > a || obj?.fn(div, arr).obj
b > a || ok
b > abs(0.5)
b > arr[0]
b > arr[a]
b > b
b > b % a
b > b * 0.5
b > b * f
b > b ** a
b > b + f
b > b - 0.5
b > b - f
b > b ? ok : ok
b > b ? ok : s
b > b ^ a
b > b or obj?.head(a, 1)
b > b || ok
b > div(a, -b)
b > div(b, a)
b > f
b > f != obj?.b
b > f * a
b > f / b
b > f == obj.b
b > f ? arr : div
b > f ? b : s
b > f ? f : "c"
b > f ^ b
b > f and not ok
b > f or obj.obj
b > float(b)
b > float(f)
b > int(0)
b > len(obj)
b > obj.a
b > obj.b
b > obj.fn(a)
b > obj.head(f)
b > obj.obj.b
b > obj?.a
b > obj?.b
b > obj?.head(0)
b > obj?.head(0.5, 0)
b > obj?.obj.a
b > obj?.obj?.b
b >= -a
b >= -b
b >= -f
b >= 0 != ok
b >= 0 - b
b >= 0 ? 0.5 : true
b >= 0 ? add : arr
b >= 0 ? s : "c"
b >= 0 ^ 0.5
b >= 0 and obj.head(s, f, arr, 0)
b >= 0.5 == ok
b >= 0.5 ? f : 0
b >= 0.5 and obj.a
b >= a
b >= a - 0.5
b >= a == nil
b >= a ? obj.obj : add
b >= a ^ f
b >= a and 0.5 >= b
b >= abs(1)
b >= b
b >= b % a
b >= b % b
b >= b && nil != arr
b >= b ** 0
b >= b ** obj.b
b >= b + 0.5
b >= b and obj.b
b >= b in obj?.head(nil, 0.5)?.obj
b >= b or obj.fn(b)?.a
b >= b || f - obj?.obj
b >= div(a, b)
b >= div(b, a)
b >= div(b, b)
b >= f
b >= f != false
b >= f ** b
b >= f ? 0.5 : s
b >= f ? nil : false
b >= f ^ 0.5
b >= f ^ b
b >= f || a == f
b >= f || obj?.head(nil, s)
b >= int(0) != obj?.obj
b >= int(a)
b >= last(arr)
b >= min(b)
b >= obj.a
b >= obj.b
b >= obj.head(a)
b >= obj.head(f, arr, add)
b >= obj.obj?.a
b >= obj?.a
b >= obj?.a + a
b >= obj?.b
b >= obj?.b and ok
b >= obj?.fn(0)
b >= obj?.fn(a)
b >= obj?.fn(b)
b >= obj?.head(f)
b >= obj?.obj.a
b ^ (0 * 1)
b ^ (0.5 + 0)
b ^ (0.5 + b)
b ^ (0.5 - a)
b ^ (1 - 0.5)
b ^ (1 / 0)
b ^ (a * b)
b ^ (a - a)
b ^ (a / a)
b ^ (b * a)
b ^ (b + 0)
b ^ (b + 0.5)
b ^ (b / 0)
b ^ (b / b)
b ^ (f * 0)
b ^ (f * 0.5)
b ^ (f + b)
b ^ (f - b)
b ^ (f / 0.5)
b ^ -a
b ^ -b
b ^ 0 != count(arr, ok)
b ^ 0 != f ? arr : obj
b ^ 0 + f
b ^ 0 / f / f
b ^ 0 ^ b
b ^ 0.5 * f
b ^ 0.5 < f
b ^ 0.5 <= f
b ^ 0.5 > obj?.a
b ^ 0.5 >= b
b ^ 1 - f
b ^ 1 == obj?.obj
b ^ 1 > f - f
b ^ 1 ^ b
b ^ 2 < obj.b
b ^ 2 <= a
b ^ 2 > a
b ^ 2 ^ f
b ^ 2 ^ obj?.fn(0)
b ^ a
b ^ a ** (f / a)
b ^ a ** a
b ^ a + f
b ^ a - b + a
b ^ a - max(a)
b ^ a - min(b)
b ^ a <= arr[a]
b ^ a <= f ? add : true
b ^ a == b
b ^ a == obj.obj
b ^ a ^ f
b ^ add(0, a)
b ^ add(2, a)
b ^ add(a, b)
b ^ add(b, 2)
b ^ b
b ^ b < -0.5
b ^ b < f
b ^ b == 0 / 1
b ^ b == a
b ^ b == a + 0
b ^ b > f
b ^ count(arr, true)
b ^ div(0, b)
b ^ div(1, a)
b ^ div(b, a)
b ^ f
b ^ f >= 0 ? b : b
b ^ f ^ 0.5
b ^ f ^ a
b ^ f ^ b
b ^ get(arr, b)
b ^ int(f)
b ^ len(arr)
b ^ min(f)
b ^ obj.a
b ^ obj.b
b ^ obj.head(1)
b ^ obj.head(b)
b ^ obj.obj?.a
b ^ obj?.a
b ^ obj?.b
b ^ obj?.fn(2)
b ^ obj?.head(0.5, div, a)
b ^ obj?.head(a, a)
b ^ obj?.head(b)
b ^ obj?.obj.a
b ^ obj?.obj?.a
b ^ obj?.obj?.b
b in arr
b in arr && true ? obj : div
b in arr == not ok
b in arr == true
b in arr || nil == obj
b in arr[2:1]
b in filter(arr, ok)
b in map(arr, 0)
b in obj.head(arr)
b in obj.head(nil, b, arr, 0, 0.5)?.a
b in obj[s]
count([f], ok)
count([nil, arr, ok], ok)
count(a .. 0, obj.a)
count(a .. 0, ok || ok)
count(arr, "b" < s)
count(arr, "b" <= "a")
count(arr, "c" > s)
count(arr, # != #)
count(arr, # == f)
count(arr, # >= a)
count(arr, # >= add(b, 0))
count(arr, 0 != a)
count(arr, 0 != f)
count(arr, 0 <= 0)
count(arr, 0 <= 0.5)
count(arr, 0 == a)
count(arr, 0 > 0.5)
count(arr, 0 > a)
count(arr, 0 > f)
count(arr, 0.5 == 0.5)
count(arr, 0.5 > 0.5)
count(arr, 0.5 >= 0.5)
count(arr, 1 < f)
count(arr, 1 == b)
count(arr, 2 < a)
count(arr, 2 >= f)
count(arr, a <= b)
count(arr, a == nil)
count(arr, a >= 0.5)
count(arr, a >= a)
count(arr, add != div)
count(arr, add == add)
count(arr, all(arr, false))
count(arr, any(arr, ok))
count(arr, any(arr, true))
count(arr, arr == nil)
count(arr, b != b)
count(arr, b <= 1)
count(arr, b == 0)
count(arr, b == b)
count(arr, b > 1)
count(arr, b >= 1)
count(arr, b >= a)
count(arr, b in arr)
count(arr, f != nil)
count(arr, f < b)
count(arr, f > a)
count(arr, false or false)
count(arr, false) % b
count(arr, false) + abs(0.5)
count(arr, false) == a
count(arr, false) == f
count(arr, false) > f
count(arr, false) >= f + 0
count(arr, false) >= obj?.a
count(arr, false) ^ f
count(arr, false) in arr
count(arr, nil != 0)
count(arr, nil != arr)
count(arr, nil != div)
count(arr, nil == 0.5)
count(arr, nil == a)
count(arr, nil == s)
count(arr, not false)
count(arr, obj != obj)
count(arr, obj.head(ok))
count(arr, obj?.a == arr)
count(arr, ok != ok)
count(arr, ok or 0 > 0.5)
count(arr, ok)
count(arr, ok) != b ? "b" : a
count(arr, ok) % add(0, b)
count(arr, ok) ** a
count(arr, ok) + b
count(arr, ok) - int(a)
count(arr, ok) / a
count(arr, ok) < a
count(arr, ok) == b
count(arr, ok) > a
count(arr, ok) > b
count(arr, ok) > obj.a
count(arr, ok) in arr
count(arr, one(arr, false))
count(arr, s != s)
count(arr, s contains "c")
count(arr, s endsWith "a")
count(arr, true) * obj?.a
count(arr, true) - b
count(arr, true) <= a
count(arr, true) == b
count(arr, true) > a
count(arr, true) >= arr[b]
count(b .. a, a == 0)
count(b .. a, obj?.head(ok, obj, f, ok, arr))
count(b .. a, ok)
count(b .. b, not false)
count(b .. b, ok == false)
count(false ? f : obj, not true)
count(false ? true : obj, 2 <= 1)
count(filter(arr, false), obj?.obj)
count(keys(obj), b >= f)
count(keys(obj), ok)
count(map(arr, "b"), ok)
count(map(arr, 0.5), ok)
count(map(arr, a), ok)
count(map(arr, add), ok)
count(map(arr, arr), f == b)
count(map(arr, arr), ok)
count(map(arr, f), ok)
count(map(arr, obj), 0 != b)
count(map(arr, obj), f == f)
count(map(arr, true), #)
count(map(obj.obj, arr), ok)
count(obj.head("b", arr, add), 0.5 == 0.5)
count(obj.head(obj), nil == nil)
count(obj.head(obj, obj, s), ok)
count(obj.head(s), any(arr, false))
count(obj.head(s, s, arr, add, obj), ok)
count(obj.obj, 0 < 0)
count(obj.obj, all(arr, false))
count(obj.obj, b > 0)
count(obj.obj, f != 0)
count(obj.obj, nil == s)
count(obj.obj, obj != nil)
count(obj.obj, obj != obj)
count(obj.obj, obj?.head(ok))
count(obj.obj, ok)
count(obj?.head("a", a), ok) != f
count(obj?.head("c", a, obj), f == 0)
count(obj?.head(s), ok)
count(obj?.head(s, s), f <= a)
count(obj?.obj, "c" >= "c")
count(obj?.obj, 0 == nil)
count(obj?.obj, a != nil)
count(obj?.obj, a == 1)
count(obj?.obj, f >= f)
count(obj?.obj, none(arr, false))
count(obj?.obj, obj.head(true))
count(obj?.obj, obj?.head(false))
count(obj?.obj, ok != true)
count(obj?.obj, ok)
count(values(obj), ok)
count(values(obj), true and ok)
date(s, s)
div
div != add
div != add != true
div != add ? 0.5 : ok
div != add and 1 == f
div != add or ok
div != div
div != div ? arr : b
div != div ? false : false
div != div and 0 >= 2
div != div or obj?.a
div != nil && obj.b
div != nil == ok ? s : 0
div != nil == true
div != nil ? s : obj
div != nil ? s : ok
div != nil || obj?.obj
div != obj.a
div != obj.b
div != obj.fn(a)
div != obj.fn(b)
div != obj.head(a)
div != obj.head(div)
div != obj.head(div, "b")
div != obj.head(f, arr)
div != obj.head(obj)
div != obj.head(ok)
div != obj.obj
div != obj.obj.obj
div != obj.obj?.a
div != obj.obj?.obj
div != obj?.a
div != obj?.b
div != obj?.head(add)
div != obj?.head(arr)
div != obj?.head(b, "a")
div != obj?.head(div)
div != obj?.head(f)
div != obj?.head(s)
div != obj?.head(s, arr, 1, true)
div != obj?.obj
div != obj?.obj.obj
div != obj?.obj?.obj
div == add
div == add != obj?.obj
div == add != ok
div == add ? 0 : ok
div == add or ok
div == div
div == div != obj.b
div == div != obj?.b
div == div != ok
div == div == ok
div == div ? 1 / f : obj
div == div ? obj : div
div == get(obj, s)
div == nil ? "a" : "c"
div == nil ? 0 : b
div == nil ? a : true
div == nil ? ok : arr
div == nil or obj.obj
div == nil or obj?.a
div == nil || ok ? obj : true
div == obj.a
div == obj.b
div == obj.head(a, b)
div == obj.head(arr, nil, false, obj)
div == obj.head(f)
div == obj.head(f, a, nil)
div == obj.head(obj)
div == obj.head(ok)
div == obj.head(true, obj)
div == obj.obj
div == obj.obj?.b
div == obj?.a
div == obj?.b
div == obj?.head(arr)
div == obj?.head(b)
div == obj?.head(obj)
div == obj?.head(ok)
div == obj?.head(s)
div == obj?.obj
div == obj?.obj.a
div == obj?.obj?.b
div in map(arr, add)
div in obj?.head(nil)
div in obj[s]?.b
div(-1, b)
div(-a, a)
div(-a, get(arr, 2))
div(-a, obj.b)
div(-b, a + 2)
div(-b, a)
div(-b, b)
div(-obj.head(a, s), b)
div(0 * a, a)
div(0 * obj.b, a)
div(0 - a, a)
div(0, 1) != count(arr, false)
div(0, 1) % b
div(0, 1) + b ^ f
div(0, 1) - b
div(0, 2) ** b
div(0, 2) < b
div(0, 2) > obj.a
div(0, 2) >= abs(0.5)
div(0, a) != f
div(0, a) * b
div(0, a) .. obj.fn(b)
div(0, a) < b
div(0, a) <= b
div(0, a) ^ a
div(0, a) ^ f
div(0, a) in arr
div(0, b) != b
div(0, b) + b
div(0, b) + obj.a
div(0, b) + obj?.a
div(0, b) < a
div(0, b) > b
div(0, b) >= b
div(1 - b, a)
div(1, 2) % a
div(1, 2) * f ** b
div(1, 2) / -2
div(1, 2) >= f
div(1, a) ** b
div(1, a) - b
div(1, a) / obj?.a
div(1, a) < a ? s : ok
div(1, b) - obj.a
div(1, b) - obj?.a
div(1, b) > b
div(2 % 1, min(1))
div(2 * 0, a)
div(2 * 2, obj?.b)
div(2 + b, b)
div(2, 2) * a
div(2, a) + 1 ** 1
div(2, a) == b ? obj : 0
div(2, a) > obj?.a
div(2, b) != obj?.obj
div(2, b) % a
div(2, b) ** a
div(2, b) - b
div(2, b) / a
div(a % a, a)
div(a % a, obj.b)
div(a * 0, b)
div(a * 2, b)
div(a * b, obj.b)
div(a * b, obj?.b)
div(a - 1, b)
div(a - 2, b)
div(a - b, get(arr, 0))
div(a, -2)
div(a, -a)
div(a, 0 + a)
div(a, 1) % a
div(a, 1) ** obj.a
div(a, 1) - a
div(a, 1) < b
div(a, 1) < obj?.a
div(a, 1) <= obj.b
div(a, 1) == a
div(a, 1) >= a * b
div(a, 2) ** a
div(a, 2) + obj.b
div(a, 2) < a
div(a, 2) <= f ? s : s
div(a, 2) <= obj.b
div(a, 2) == b
div(a, 2) > obj.b
div(a, 2) ^ obj?.a
div(a, a * a)
div(a, a - 0)
div(a, a)
div(a, a) != 0 ? a : add
div(a, a) != obj?.b
div(a, a) % b
div(a, a) * obj?.b
div(a, a) ** b
div(a, a) - f
div(a, a) .. b
div(a, a) / get(arr, 0)
div(a, a) <= 2 ? b : "b"
div(a, a) == b
div(a, a) > 0 ? div : s
div(a, a) > a
div(a, a) > f
div(a, a) >= a
div(a, a) >= b
div(a, a) ^ -f
div(a, a) ^ f
div(a, abs(b))
div(a, add(0, b))
div(a, add(2, 0))
div(a, add(a, 0))
div(a, add(a, b))
div(a, add(b, 0))
div(a, b + 0)
div(a, b)
div(a, b) % a
div(a, b) % b
div(a, b) ** (a % 1)
div(a, b) ** a
div(a, b) ** f
div(a, b) + div(a, b)
div(a, b) + f ^ a
div(a, b) .. a
div(a, b) / a
div(a, b) < obj?.a
div(a, b) <= b
div(a, b) ^ get(arr, a)
div(a, div(a, 1))
div(a, div(a, a))
div(a, div(b, 1))
div(a, div(b, b))
div(a, false ? b : a)
div(a, get(arr, a))
div(a, get(arr, b))
div(a, int(1))
div(a, int(a))
div(a, last(arr))
div(a, len(s))
div(a, max(2))
div(a, min(a))
div(a, obj.a)
div(a, obj.b)
div(a, obj.fn(0))
div(a, obj.fn(b))
div(a, obj.head(1, obj))
div(a, obj.obj?.a)
div(a, obj.obj?.b)
div(a, obj?.a)
div(a, obj?.b)
div(a, obj?.head(b))
div(a, true ? 2 : div)
div(abs(a), b)
div(abs(b), a)
div(add(0, a), b)
div(add(2, a), a)
div(add(2, a), b)
div(add(a, 0), max(a)) == a
div(add(a, a), obj.b)
div(add(a, b), -2)
div(add(b, 0), a)
div(add(b, b), obj?.b)
div(arr[1], a * b)
div(arr[b], div(b, b))
div(b % a, a)
div(b % a, obj.a)
div(b % b, a)
div(b % b, b)
div(b * 0, obj.a)
div(b * a, a)
div(b * a, obj?.b)
div(b, -a)
div(b, 1) % obj.b
div(b, 1) * max(a)
div(b, 1) / a
div(b, 1) >= 0 ^ f
div(b, 2 * b)
div(b, 2) ** add(b, a)
div(b, 2) ** f
div(b, 2) ** f ** 1
div(b, 2) + float(0)
div(b, 2) > b
div(b, 2) in arr
div(b, a + 0)
div(b, a)
div(b, a) != a + 0.5
div(b, a) != obj?.a
div(b, a) % b
div(b, a) * 0 / b
div(b, a) + a
div(b, a) - f
div(b, a) < a ^ f
div(b, a) < obj.obj.obj.b
div(b, a) <= a
div(b, a) == obj?.obj
div(b, a) > a
div(b, a) >= 0 ? add : "a"
div(b, a) >= obj.b
div(b, a) ^ a
div(b, a) in arr
div(b, add(0, a))
div(b, add(b, 2))
div(b, b * a)
div(b, b * b)
div(b, b)
div(b, b) != b
div(b, b) != obj?.obj
div(b, b) * -b
div(b, b) ** a
div(b, b) ** obj?.a
div(b, b) + obj.b
div(b, b) / a
div(b, b) / obj?.a
div(b, b) < f
div(b, b) <= b
div(b, b) <= b != nil
div(b, b) == a
div(b, b) == f
div(b, b) > obj.a
div(b, b) ^ -f
div(b, b) ^ a
div(b, div(b, a))
div(b, get(arr, 0))
div(b, int(a))
div(b, last(arr))
div(b, obj.a)
div(b, obj.b)
div(b, obj.fn(a))
div(b, obj.head(a))
div(b, obj.head(a, nil))
div(b, obj.head(b))
div(b, obj?.a)
div(b, obj?.b)
div(b, obj?.head(a))
div(b, obj?.head(get(arr, 0)))
div(b, ok ? b : s)
div(count(arr, false), b)
div(count(arr, ok), a)
div(count(arr, ok), b)
div(div(2, a), a)
div(div(a, 2), a)
div(div(a, a), b)
div(div(b, b), add(b, 2))
div(false ? arr : a, a)
div(first(arr), b)
div(first(arr), obj.b)
div(get(arr, 0), b)
div(get(arr, 2), obj.a)
div(get(arr, a), a)
div(get(arr, b), b)
div(int(1 - f), b)
div(int(b), a)
div(int(b), obj.b)
div(int(obj.a), b)
div(last(arr), a)
div(last(arr), b)
div(len(obj), a)
div(len(obj), obj.a)
div(len(obj), obj.fn(a))
div(len(s), max(2, a))
div(max(1), b)
div(max(b), b)
div(max(b), obj.b)
div(min(1), b)
div(min(2), a)
div(min(a), b)
div(obj.a, -2)
div(obj.a, a)
div(obj.a, add(b, 1))
div(obj.a, b)
div(obj.a, obj.b)
div(obj.a, obj?.a)
div(obj.a, obj?.b)
div(obj.b, a + 0)
div(obj.b, a)
div(obj.b, add(b, b))
div(obj.b, b)
div(obj.b, len("c"))
div(obj.b, obj.b)
div(obj.b, obj.head(2))
div(obj.b, obj?.a)
div(obj.b, obj?.b)
div(obj.fn(2), a)
div(obj.fn(a), b)
div(obj.fn(b), 0 - a)
div(obj.fn(b), b)
div(obj.head(0, nil), b)
div(obj.head(1), b)
div(obj.head(a, arr), b + b)
div(obj?.a, 1 * a)
div(obj?.a, a)
div(obj?.a, add(a, b))
div(obj?.a, b)
div(obj?.a, div(b, a))
div(obj?.a, int(2))
div(obj?.a, obj.a)
div(obj?.a, obj.fn(2))
div(obj?.a, obj?.a)
div(obj?.a, obj?.b)
div(obj?.b, -b)
div(obj?.b, a)
div(obj?.b, add(b, 0))
div(obj?.b, b * 2)
div(obj?.b, b * a)
div(obj?.b, b)
div(obj?.b, div(b, 1))
div(obj?.b, obj.a)
div(obj?.b, obj.b)
div(obj?.b, obj.head(a, div, nil, nil, nil))
div(obj?.b, obj?.a)
div(obj?.b, obj?.b)
div(obj?.fn(0), obj.a)
div(obj?.fn(a), int(1))
div(obj?.head(0), obj?.a)
div(obj?.head(0, 0), a)
div(obj?.head(0, add), b * a)
div(obj?.head(0, b, a, f), obj.head(a))
div(obj?.head(2), b)
div(obj?.head(a), a)
div(obj?.head(a, a, f, b), b)
div(obj?.head(b, 2), get(arr, b))
div(obj?.head(b, add, "c", 0.5), len(arr))
div(obj?.head(b, b), obj?.a)
div(ok ? 1 : a, a)
div(true ? a : f, 0 + b)
div(true ? b : 0.5, b)
duration(string(0))
duration(toJSON(0))
f
f != -0.5
f != 0 % b
f != 0 ? 1 : b
f != 0 || obj?.b
f != 0.5 ? arr : a
f != 0.5 ? obj.b : arr
f != 0.5 ^ a
f != 0.5 and obj.head(div(add)).fn(add(obj && b, div(f), none(0.5, f), div(true, obj, true))?.head(s, arr))
f != 0.5 and obj?.obj
f != 1 * b
f != 1 / 1
f != 1 == ok
f != 1 ? 0.5 : a
f != 1 ? arr : "b"
f != 2 != true
f != 2 % b
f != 2 / 0
f != 2 / a
f != 2 ^ 0
f != a
f != a != not ok
f != a && ok
f != a ** 0
f != a - 0.5
f != a - 2
f != a / f
f != a == nil
f != a ? add : 0
f != a ? obj : arr
f != a ? obj.head(0.5, b, 0, obj, 0) : arr
f != a and obj?.a
f != abs(b)
f != add(2, b)
f != arr[0]
f != arr[b]
f != b
f != b != obj.head(div)
f != b % 2
f != b % a
f != b && obj.b
f != b && s != "b"
f != b ** b
f != b + 0
f != b ? b : false
f != b ^ 0
f != b ^ f
f != b and ok ? 0 : nil
f != b or b >= f
f != b or obj.b.head(get(nil, add).b)?.obj
f != f
f != f && obj.obj
f != f - 0
f != f / b
f != f ? a : s
f != f ? s : "c"
f != f ^ 0.5
f != f and f >= f
f != f || b <= a
f != f || obj?.head("b")
f != f || ok ? arr : 0
f != get(arr, 0)
f != get(arr, b)
f != indexOf("a", s)
f != int(a)
f != max(0, f)
f != nil != obj.b
f != nil != ok
f != nil == ok
f != nil ? div : s
f != nil and obj.obj
f != obj.a
f != obj.b
f != obj.fn(b)
f != obj.head("a", false)
f != obj.head(0.5)
f != obj.head(0.5, div)
f != obj.head(1)
f != obj.head(b, ok, false)
f != obj.head(div, false, f, b)
f != obj.head(ok)
f != obj.obj
f != obj.obj || ok
f != obj.obj.a
f != obj?.a
f != obj?.b
f != obj?.fn(a)
f != obj?.head(0)
f != obj?.head(a, "b", 0)
f != obj?.head(arr, div, 0, div, 0)
f != obj?.head(b)
f != obj?.head(div)
f != obj?.head(f, nil, f)
f != obj?.head(false)
f != obj?.head(get(obj, ok))
f != obj?.head(nil)
f != obj?.head(nil, add, f)
f != obj?.head(nil, s)?.b
f != obj?.head(obj?.obj)
f != obj?.head(s)
f != obj?.obj
f != obj?.obj.obj
f != obj?.obj?.a
f * (0.5 - a)
f * (a + 0)
f * (b + b)
f * (b - f)
f * -(a + b)
f * -0.5
f * -f
f * -obj?.b
f * 0 ** 0
f * 0 ** 1
f * 0 == b ? div : f
f * 0 >= obj.head(0, add, div)
f * 0.5 != a
f * 0.5 != f
f * 0.5 * 2
f * 0.5 / 1
f * 0.5 / b
f * 0.5 >= f ^ 0
f * 0.5 ^ 0.5
f * 1 * a
f * 1 == b
f * 2 - f * 0.5
f * 2 >= a + a
f * a
f * a != obj?.b
f * a + f
f * a / (0 + f)
f * a / (f + b)
f * a / b
f * a / f
f * a / obj.fn(b)
f * a < a
f * a <= -0
f * a == obj?.b
f * a > a
f * a ^ b
f * abs(b)
f * add(a, 0)
f * arr[0]
f * arr[a]
f * b
f * b != 0 + a
f * b * f
f * b / -a
f * b / 0.5
f * b / b ** b
f * b == f
f * b ^ 0
f * f
f * f != a
f * f != b
f * f != obj.a
f * f + 0 ^ 0
f * f == b
f * f ^ a
f * get(arr, a)
f * int(0)
f * int(f)
f * min(0)
f * obj.a
f * obj.a < b
f * obj.b
f * obj.fn(a)
f * obj.head(f)
f * obj.obj.b
f * obj.obj?.b
f * obj?.a
f * obj?.a ^ f
f * obj?.b
f * obj?.fn(0)
f * obj?.head(0, a)
f * obj?.obj.b
f * obj?.obj?.a
f ** (0 % a)
f ** (0 % b)
f ** (0.5 + f)
f ** (0.5 / b)
f ** (2 + a)
f ** (2 + f)
f ** (2 - f)
f ** (2 / 0)
f ** (2 / f)
f ** (a * 0)
f ** (a * 2)
f ** (a * b)
f ** (a + a)
f ** (a - a)
f ** (a - f)
f ** (a / b)
f ** (b * a)
f ** (b + 1)
f ** (b + b)
f ** (b - a)
f ** (b / 0)
f ** (f * 0)
f ** (f * f)
f ** -0.5
f ** 0 != f
f ** 0 * obj?.a
f ** 0 + obj?.head(b, add)
f ** 0 / obj?.b
f ** 0 < 0 * 0
f ** 0 < f
f ** 0 >= b
f ** 0.5 != f
f ** 0.5 - b
f ** 0.5 / obj.fn(b)
f ** 0.5 >= b
f ** 0.5 ^ a
f ** 1 != a
f ** 1 / min(f)
f ** 1 <= b
f ** 2 * a
f ** 2 ** 0
f ** 2 - b
f ** 2 ^ obj?.a
f ** a
f ** a ** 0 ** f
f ** a < a / f
f ** a <= b
f ** a <= max(f)
f ** a > obj.b
f ** a >= b
f ** a ^ b
f ** add(1, a)
f ** arr[0]
f ** arr[add(1, a)]
f ** arr[obj.a]
f ** arr[obj?.head(b)]
f ** b
f ** b != 1 ** 2
f ** b ** a
f ** b ** f
f ** b ** obj?.fn(b)
f ** b + a / f
f ** b / f
f ** b < float(f)
f ** b <= b
f ** b <= f
f ** b > b
f ** f
f ** f != b / 0
f ** f - f
f ** f > b
f ** f >= a
f ** f ^ 1
f ** get(arr, a)
f ** int(f)
f ** len(arr) <= a
f ** max(b, 1)
f ** min(a)
f ** obj.a
f ** obj.b
f ** obj.head(0)
f ** obj.head(add(0, b))
f ** obj.obj.b
f ** obj?.a
f ** obj?.b
f ** obj?.fn(a)
f ** obj?.head(2, s)
f ** obj?.head(a)
f ** obj?.head(b, add, obj)
f ** obj?.obj.a
f + -0.5
f + -f
f + 0 + a
f + 0 - b
f + 0 < a
f + 0 == a
f + 0 == add(b, b)
f + 0.5 * b
f + 0.5 - b
f + 0.5 <= a
f + 0.5 ^ 1
f + 1 ** b
f + 1 - f
f + 1 >= obj?.b
f + 2 < obj.b
f + 2 == b
f + 2 >= max(b)
f + a
f + a != last(arr)
f + a * 2
f + a + 2
f + a / 0
f + a >= obj?.a
f + a ^ a
f + a ^ f
f + add(b, 2)
f + add(b, a)
f + b
f + b != a
f + b ** 2
f + b ** b
f + b + 2
f + b + b
f + b - a
f + b - f
f + b ^ 2
f + count(arr, false)
f + div(2, 1)
f + div(b, a)
f + div(b, b)
f + f
f + f != f
f + f + 1
f + f + a
f + f + a ** 0
f + f - b
f + f / 2
f + f / a
f + f < f
f + f > b
f + float(0)
f + get(arr, a)
f + int(b)
f + len("a")
f + min(0.5)
f + obj.a
f + obj.b
f + obj.head(0.5)
f + obj.head(f)
f + obj.obj.obj.b
f + obj.obj?.a
f + obj?.a
f + obj?.b
f + obj?.b .. a
f + obj?.fn(0)
f + obj?.fn(b)
f + obj?.obj.a
f + obj?.obj?.a
f - -f
f - 0 != a
f - 0 * a
f - 0 ** a
f - 0 + a
f - 0 - 2
f - 0 >= a % a
f - 0.5 != b
f - 0.5 ** b
f - 1 - a
f - 1 == 0 ? arr : f
f - 1 > obj?.b
f - 2 + 1
f - 2 >= f
f - a
f - a % a
f - a + 0
f - a + b
f - a - a
f - a < b
f - a < obj.fn(b)
f - a < obj?.b
f - a > b ** a
f - a >= b
f - add(b, b)
f - arr[1]
f - arr[b]
f - arr[obj?.a]
f - b
f - b != b
f - b * f
f - b + f
f - b + obj.head(b)
f - b - b
f - b / a
f - b / b
f - b < 0 ? 1 : 0
f - b <= abs(a)
f - b <= b - 0.5
f - b == obj.obj
f - b > f
f - b >= a ? div : ok
f - b >= f
f - div(a, b)
f - f
f - f + a
f - f - div(a, b)
f - f / 2
f - f / b
f - f < a
f - f <= obj.a
f - f == b
f - f == div(0, a)
f - float(1)
f - float(f)
f - get(arr, b)
f - int(0)
f - int(2)
f - obj.a
f - obj.b
f - obj.head(b)
f - obj.obj.a
f - obj.obj.obj.a
f - obj.obj?.b
f - obj?.a
f - obj?.b
f - obj?.head(f)
f - obj?.head(f, a, add)
f - obj?.obj.b
f / (0 - f)
f / (0.5 + b)
f / (1 + 2)
f / (2 + 0)
f / (a + b)
f / (a + f)
f / (b + f)
f / (b - f)
f / (f - a)
f / -a
f / -b
f / -f
f / 0 * 0
f / 0 * f
f / 0 + obj?.b
f / 0 / a
f / 0.5 != b
f / 0.5 * obj?.a
f / 0.5 - a
f / 0.5 - b
f / 0.5 == obj?.b
f / 1 != obj?.obj?.a
f / 1 / b
f / 2 != nil ? 0.5 : 0
f / 2 / obj?.b
f / 2 == obj?.b
f / 2 >= f
f / a
f / a != a
f / a != b - 1
f / a != obj.b
f / a != obj?.b
f / a ** 0
f / a - f
f / a < 2 ** f
f / a <= b
f / a == a
f / a == b
f / a >= b ^ a
f / a >= obj?.b
f / add(a, 0)
f / add(a, 2)
f / add(a, b)
f / add(b, a)
f / b
f / b != add(0, 1)
f / b * 0
f / b * b
f / b ** 0.5
f / b / a
f / b <= b / a
f / b <= f
f / b == b
f / b > a
f / f
f / f != obj.obj?.b
f / f * 0
f / f ** a
f / f + add(2, b)
f / f - -a
f / f - a ^ a
f / f - f
f / f < a
f / float(0)
f / int(b)
f / len(s)
f / min(0)
f / obj.a
f / obj.b
f / obj.fn(a)
f / obj.head(b)
f / obj.obj.a
f / obj.obj?.a
f / obj?.a
f / obj?.b
f / obj?.fn(0)
f / obj?.fn(1)
f / obj?.fn(2)
f / obj?.fn(a)
f / obj?.head(a, nil)
f / obj?.head(f)
f / obj?.head(f, nil)
f / obj?.obj?.b
f < -0
f < -0.5
f < 0 * b
f < 0 - 0
f < 0 == false
f < 0 ? obj : add
f < 0 ^ b
f < 0 and obj.a
f < 0 or 0.5 != b
f < 0.5 == obj?.b
f < 0.5 == obj?.head("a", div)
f < 0.5 ? b : "b"
f < 0.5 ? nil : add
f < 0.5 ? obj : ok
f < 1 != nil
f < 1 * obj.a
f < 2 - b
f < 2 / 0.5
f < a
f < a && obj.b
f < a && ok
f < a ** b
f < a + 1
f < a / f
f < a ? add : div
f < a ? s : "c"
f < a or obj?.a
f < a or ok
f < arr[0]
f < b
f < b != ok
f < b - 0
f < b ? a : a
f < b ? a : f
f < b ^ 0
f < b ^ a
f < b and f < 0.5
f < b or nil == div
f < div(a, a)
f < div(a, b)
f < f
f < f != false
f < f && obj.a
f < f * 0
f < f * 0.5
f < f - 0
f < f - b
f < f == nil
f < f == true
f < f ? 0 : nil
f < f ? 0.5 : a
f < f ^ f
f < f and obj.obj
f < f or obj.b
f < f or obj?.b
f < float(0)
f < float(b)
f < float(f)
f < get(arr, 0)
f < get(arr, b)
f < len(obj)
f < min(0 % b)
f < min(a)
f < obj.a
f < obj.b
f < obj.fn(a)
f < obj.head(0, arr, add, b)
f < obj.head(b, b)
f < obj.head(obj.b) and ok
f < obj.obj?.a
f < obj.obj?.b ^ f
f < obj?.a
f < obj?.b
f < obj?.fn(b)
f < obj?.head(0.5, true, add)
f < obj?.head(a)
f <= -a
f <= -b
f <= -f
f <= 0 % b
f <= 0 * 0
f <= 0 ? "a" : "c"
f <= 0 ? b : a
f <= 0 ^ b
f <= 0 and obj.obj
f <= 0.5 ** b
f <= 0.5 - b
f <= 0.5 / a
f <= 0.5 ? false : div
f <= 0.5 ? obj : 0
f <= 0.5 ^ 1
f <= 0.5 and obj?.head(false)
f <= 1 ** 0
f <= 1 ** f
f <= 1 - 2
f <= 2 != false
f <= 2 ? div : nil
f <= 2 ? f : nil
f <= a
f <= a != ok
f <= a % a
f <= a && "c" <= s
f <= a + 0
f <= a / a
f <= a / b
f <= a ? 1 : 2
f <= a and b == a
f <= a or ok ? s : s
f <= a || obj.fn(add)
f <= add(2, b)
f <= add(a, b)
f <= arr[a]
f <= arr[b]
f <= arr[div(a, a)]
f <= b
f <= b != ok
f <= b != true
f <= b && ok
f <= b * a
f <= b == nil
f <= b ? arr : add
f <= b ? b : 2 != a
f <= b ^ b
f <= div(a, 1)
f <= f
f <= f - a
f <= f - obj?.b
f <= f / f
f <= f ? a : div
f <= f ? nil : true
f <= f ^ a
f <= f ^ b
f <= f and obj.obj
f <= f or false ? nil : s
f <= f or ok
f <= f || obj?.fn(s, 2)?.obj.fn(b)
f <= float(f)
f <= get(arr, b)
f <= int(a)
f <= last(arr)
f <= obj.a
f <= obj.a ** b
f <= obj.b
f <= obj.fn(0)
f <= obj.head(0, nil)
f <= obj?.a
f <= obj?.b
f <= obj?.head(a)
f <= obj?.obj.a
f <= obj?.obj?.b
f == -0
f == -b
f == 0 ? b >= 1 : div
f == 0 ? false : s
f == 0.5 == ok
f == 0.5 ? add : add
f == 1 * 0
f == 1 ** 0.5
f == 1 ** b
f == 1 / a
f == 1 / f
f == 1 ? true : "c"
f == 2 ? ok : a
f == a
f == a != ok
f == a * 0
f == a * b
f == a + a
f == a and b < 2
f == a and obj.head(obj, add)
f == a || obj?.obj
f == abs(b)
f == add(b, 0)
f == arr[b]
f == b
f == b != false
f == b ** 0
f == b + 0.5
f == b + b
f == b - 0
f == b - 2
f == b == nil
f == b and obj?.b
f == b or not ok
f == div(a, b)
f == div(b, b)
f == f
f == f != nil
f == f ? arr : b
f == f ^ 0
f == f ^ a
f == int(a)
f == int(b)
f == max(0)
f == max(a)
f == max(b)
f == nil && obj?.fn(count(s == 0, "b" matches div))
f == nil && ok ? f : obj
f == nil == true ? obj : add
f == nil ? arr : add
f == nil ? nil == div : a
f == nil and obj.fn(s)
f == nil and ok
f == nil || obj?.obj
f == obj.a
f == obj.b
f == obj.b == ok
f == obj.head(1)
f == obj.head(2 != ok)
f == obj.head(b)
f == obj.head(f)
f == obj.head(obj == div)
f == obj.head(obj)
f == obj.head(ok)
f == obj.head(s)
f == obj.obj
f == obj.obj.obj
f == obj.obj?.obj
f == obj.obj?.obj?.b
f == obj.obj?.obj?.obj
f == obj?.a
f == obj?.a % b
f == obj?.b
f == obj?.fn(0)
f == obj?.head(b < 0)
f == obj?.head(b, add)
f == obj?.head(div)
f == obj?.head(div, b, 2, b)
f == obj?.obj
f == obj?.obj.b
f == {"a": b, "b": add, "a": arr}.obj
f > -1
f > -a
f > -b
f > -f
f > 0 / f
f > 0.5 ** 1
f > 0.5 == ok
f > 0.5 or not ok
f > 0.5 or obj?.a
f > 1 != ok
f > 1 && s <= s
f > 2 != false
f > 2 - a
f > 2 == obj.b
f > a
f > a != obj.b
f > a * a
f > a + 0
f > a + f
f > a / 0.5
f > a ? arr : "c"
f > a ? div : obj
f > a ? f : obj?.obj
f > a || div == nil
f > a || true ? 1 : arr
f > abs(a)
f > add(b, 0)
f > add(b, b)
f > arr[a]
f > arr[obj?.head(0.5)]
f > b
f > b && "a" <= "b"
f > b ** 0
f > b ** b
f > b ** obj?.a
f > b + 0
f > b + 1
f > b == ok
f > b ? obj : f
f > b || obj.head(0)
f > count(arr, true)
f > div(2, a)
f > f
f > f * b
f > f ** 2
f > f - a
f > f / a
f > f ? obj : nil
f > f ^ b
f > f in obj?.head(nil, "c")
f > f or obj.head(nil)
f > f or obj?.head(obj)
f > int(0)
f > len(obj)
f > obj.a
f > obj.b
f > obj.fn(b)
f > obj.obj.b
f > obj.obj?.a
f > obj.obj?.b
f > obj?.a
f > obj?.b
f > obj?.fn(a)
f > obj?.fn(b)
f > obj?.head(a)
f > obj?.obj.a
f > obj?.obj?.obj?.b
f >= -0
f >= -1
f >= -a
f >= 0 != obj?.head(s, f)
f >= 0 ** b
f >= 0 + f
f >= 0 - 0
f >= 0 / b
f >= 0 == ok
f >= 0 ? nil : div
f >= 0.5 != false
f >= 0.5 ^ a
f >= 1 * b
f >= 1 ? a : add
f >= 1 ? add : true
f >= 1 ? obj : 1
f >= 1 ^ a
f >= 2 ^ a
f >= a
f >= a % b
f >= a * a
f >= a ? 0 : arr
f >= a and obj?.head(a)
f >= a in obj?.c
f >= a or ok
f >= add(a, a)
f >= arr[b]
f >= b
f >= b != ok
f >= b % 2
f >= b && ok
f >= b ** a
f >= b + 2
f >= b + a
f >= b / a
f >= b == false
f >= b == obj.a
f >= b ? s : div
f >= b ^ a
f >= b and obj?.b
f >= count(arr, ok)
f >= div(2, a)
f >= div(b, b)
f >= f
f >= f && false ? f : a
f >= f && ok
f >= f * 0
f >= f * 0.5
f >= f ** 0
f >= f ** a
f >= f == ok
f >= f == true
f >= f ? "b" : 0
f >= f ? b : f
f >= first(arr)
f >= float(b)
f >= get(arr, a)
f >= obj.a
f >= obj.b
f >= obj.fn(2)
f >= obj.head(0.5, nil)
f >= obj.head(a)
f >= obj.head(b, add)
f >= obj.obj.b
f >= obj.obj?.b
f >= obj?.a
f >= obj?.b
f >= obj?.b && ok
f >= obj?.head(obj, b, 1)?.a
f >= obj?.obj.b
f >= obj?.obj?.a
f ^ (0 + 1)
f ^ (0 + a)
f ^ (0 - b)
f ^ (0.5 * a)
f ^ (1 / a)
f ^ (2 - b)
f ^ (a * 0.5)
f ^ (a * b)
f ^ (a + a)
f ^ (a + b)
f ^ (a - f)
f ^ (a / a)
f ^ (b + 0)
f ^ (f * f)
f ^ (f / 0.5)
f ^ -0
f ^ -2
f ^ -a
f ^ 0 ** obj?.b
f ^ 0 <= f
f ^ 0 == a
f ^ 0 >= obj.a
f ^ 0 ^ 1
f ^ 0.5 ** a
f ^ 0.5 ** b
f ^ 0.5 ** f
f ^ 0.5 ** obj?.head(0, arr)
f ^ 0.5 < a
f ^ 0.5 ^ 0
f ^ 0.5 ^ 0.5
f ^ 0.5 ^ f
f ^ 1 * a
f ^ 1 ** 2
f ^ 1 > a
f ^ 1 > b ? nil : a
f ^ 2 + div(a, 1)
f ^ a
f ^ a != obj.a
f ^ a - a
f ^ a <= b
f ^ a == obj?.b
f ^ a > a
f ^ a > f
f ^ a > obj.b
f ^ a ^ obj?.b
f ^ abs(b)
f ^ abs(f)
f ^ b
f ^ b ** b ** obj?.b
f ^ b + f
f ^ b >= a + a
f ^ div(b, 2)
f ^ f
f ^ f != b
f ^ f * a
f ^ f ** b
f ^ f ** f
f ^ f - b
f ^ f / 0 ^ 2
f ^ f / b
f ^ f < b * b
f ^ f <= 0.5 * b
f ^ f >= f
f ^ f ^ (b % a)
f ^ f ^ abs(a)
f ^ max(b)
f ^ min(b, 2 * 2)
f ^ obj.a
f ^ obj.b
f ^ obj.fn(0)
f ^ obj.head(0.5, true)
f ^ obj.head(f)
f ^ obj.obj?.a
f ^ obj?.a
f ^ obj?.b
f ^ obj?.obj.a
f in get(obj.b, b)
f in get(obj?.head(ok), s >= "c")
f in map(arr, f)
f in obj?.c
f in obj?.head(get(f, obj))?.obj
f in obj[nil]
false != nil ? add : f
false != nil ? f : ok
false != obj.a
false != obj.b
false != obj.head(b)
false != obj.head(ok)
false != obj.obj
false != obj.obj.b
false != obj.obj?.a
false != obj.obj?.obj
false != obj?.a
false != obj?.b
false != obj?.head(add)
false != obj?.obj
false != obj?.obj.obj
false != obj?.obj?.b
false != ok or ok
false != true or obj?.fn(0, nil)
false && false && obj.b
false && obj.a
false && obj.b
false && obj.fn(0 / div)
false && obj.fn(add(f))
false && obj.fn(filter(div .. obj, add.b), arr)
false && obj.fn(obj)?.b
false && obj.fn(ok?.b.a)
false && obj.head(add?.b, add(b, f, s, add) contains add(arr, "a"))
false && obj.head(any(ok, "c"))
false && obj.head(div(0), duration(s, a, add))
false && obj.head(div(filter(nil, arr), get(ok, nil)))
false && obj.head(f?.obj, toBase64(nil, add, false))
false && obj.head(none(arr, true), "a" / obj)
false && obj.head(ok.fn(obj?.b, 0.5 endsWith obj))
false && obj.obj
false && obj?.a
false && obj?.b
false && obj?.b?.obj
false && obj?.fn(add?.fn(map(b, 1)))
false && obj?.fn(b - f <= div(0.5, "c"))
false && obj?.fn(count(0, a)?.obj, arr?.head(nil) in div(true, 0, f), lastIndexOf(filter(nil, 0)), b?.head(none(0, obj), nil <= div, a .. s, "b" ** arr))
false && obj?.fn(f * s ? nil : nil)
false && obj?.head(a)
false && obj?.head(a.obj)
false && obj?.head(add(0, s)?.obj, arr startsWith div?.b)
false && obj?.head(add(nil - b))
false && obj?.head(add)
false && obj?.head(all(0.5, ok), count(f, ok), f ? a : 0)
false && obj?.head(all(f, add) && count("c", b), add.head(arr?.obj))
false && obj?.obj
false && obj[obj.fn(obj)]
false && ok && obj.obj
false && ok && obj[nil]
false == nil == obj.a
false == nil and obj.obj
false == nil or ok
false == obj.a
false == obj.b
false == obj.head(arr)
false == obj.head(ok)
false == obj.obj
false == obj.obj?.a
false == obj?.a
false == obj?.b
false == obj?.head(ok)
false == obj?.obj
false ? "b" : 0 >= obj.b
false ? "c" : 0 / b
false ? 0 : obj.a
false ? 0 : obj.b
false ? 0 : obj.obj
false ? 0 : obj?.head(arr)
false ? 0 : obj?.obj
false ? 0.5 : a <= 0 + b
false ? 0.5 : b / f
false ? 0.5 : f * a
false ? 0.5 : obj.obj
false ? 0.5 : obj?.obj
false ? 1 : obj.a
false ? 1 : obj.b
false ? 1 : obj?.obj
false ? 2 : obj.obj
false ? 2 : obj?.a
false ? 2 : obj?.obj
false ? a : 1 > min(f, f)
false ? a : a != f
false ? a : f + b
false ? a : obj?.a
false ? a : obj?.obj
false ? a : true or obj?.b
false ? add : a / a
false ? add : f != a
false ? add : obj.a
false ? add : obj.b
false ? add : obj?.a
false ? add : obj?.b
false ? add : obj?.obj
false ? arr : 0 == a ^ 0.5
false ? arr : obj.obj
false ? arr : obj?.a
false ? arr : obj?.b
false ? b : 0 >= 0.5 - f
false ? b : obj.b
false ? b : obj.obj
false ? b : obj.obj?.obj
false ? b : obj?.a
false ? b : obj?.obj
false ? div : 1 - a
false ? div : f * (2 - 2)
false ? div : obj.a
false ? div : obj.b
false ? div : obj.obj
false ? div : obj?.b
false ? f : a ** f
false ? f : obj.a
false ? f : obj.obj
false ? f : obj?.a
false ? f : obj?.obj
false ? false : obj.a
false ? false : obj.obj
false ? false : obj?.obj
false ? nil : 0.5 ^ b
false ? nil : 2 == a ? 0.5 : "b"
false ? nil : obj.obj
false ? nil : obj?.b
false ? obj : 0.5 + b
false ? obj : 2 != f ^ f
false ? obj : a - b
false ? obj : b <= add(0, b)
false ? obj : obj?.a
false ? obj : obj?.obj
false ? ok : 0.5 > f ^ a
false ? ok : b <= a
false ? ok : b <= f
false ? ok : b == a ? true : b
false ? ok : obj?.a
false ? s : 1 != obj.b
false ? s : obj.b
false ? s : obj?.a
false ? true : obj.b
false ? true : obj?.b
false and false and obj.obj
false and obj.a
false and obj.a.obj
false and obj.a?.b
false and obj.b
false and obj.b.a
false and obj.fn((obj or b) + ok.fn(b, a))
false and obj.fn(add?.a >= add(arr))
false and obj.fn(any(obj, f startsWith obj))
false and obj.fn(arr endsWith obj.obj)
false and obj.fn(div(add?.obj), div.b != add)
false and obj.fn(div, div(obj).a, a == div >= div(0.5, f))
false and obj.fn(one(s, obj).b)
false and obj.head("c" <= b, b, ok / obj)
false and obj.head(any(arr, b))
false and obj.head(div(nil, s)?.b)
false and obj.head(div?.a)
false and obj.head(get(false, obj))
false and obj.head(s.head(arr), all(f, ok))?.b
false and obj.obj
false and obj?.a
false and obj?.a?.a
false and obj?.b
false and obj?.b?.fn(all(map(a, get(add, 1)), !s[b]), lower(f) % f)
false and obj?.b?.head(map(b, 0.5 - 1))
false and obj?.b?.head(obj[ok].obj.b)
false and obj?.b?.obj
false and obj?.fn(a + a == div(0.5, obj, ok, div))
false and obj?.fn(div or obj)
false and obj?.head((ok or 0) in b.a, 0.5 / a.obj)
false and obj?.head(1 != a)
false and obj?.head(a && b)
false and obj?.head(a)
false and obj?.head(add && a, map(true, ok))
false and obj?.head(add(1, false, 1, b))
false and obj?.head(any(b, 0))
false and obj?.head(arr <= f, ok.head(ok, "a", ok), arr, arr && ok)
false and obj?.head(b <= add)
false and obj?.head(f)
false and obj?.head(ok.b or div endsWith div, div)
false and obj?.head(s.head(b, false, s)?.a)
false and obj?.head(toBase64(add))
false and obj?.obj
false and obj?.obj || obj?.b
false and ok ? obj?.head(obj) : obj
false and ok and obj.obj
false or false or obj?.a
false or obj.a
false or obj.b
false or obj.head(b)
false or obj.obj
false or obj.obj.a
false or obj.obj.obj
false or obj.obj?.obj
false or obj?.a
false or obj?.b
false or obj?.fn(obj?.head(0, "b", b, 0))
false or obj?.head(arr)
false or obj?.head(s, arr)
false or obj?.obj
false or obj?.obj?.b
false or ok ? f : div
false or ok or obj?.obj
false or true or obj.a
false || false || true ? obj : 0
false || obj.a
false || obj.a == a
false || obj.b
false || obj.head(b)
false || obj.obj
false || obj?.a
false || obj?.b
false || obj?.fn(a)
false || obj?.fn(b)
false || obj?.obj
false || true or obj?.obj
filter(0 .. b, ok)
filter(a .. a, 2 < f)
filter(a .. b, ok)
filter(arr, !false)
filter(arr, !ok)
filter(arr, "a" <= "c")
filter(arr, "a" > "b")
filter(arr, "a" endsWith s)
filter(arr, "b" > "a")
filter(arr, "c" > s)
filter(arr, 0 == f)
filter(arr, 0.5 != b)
filter(arr, 0.5 < 0.5)
filter(arr, 0.5 == 1)
filter(arr, 1 == nil)
filter(arr, 1 in arr)
filter(arr, 2 < obj?.b)
filter(arr, 2 > 2)
filter(arr, 2 > a)
filter(arr, a != nil)
filter(arr, a < a)
filter(arr, a <= 0)
filter(arr, a > obj.b)
filter(arr, a >= f)
filter(arr, add == add)
filter(arr, add == div)
filter(arr, any(arr, ok))
filter(arr, any(arr, true))
filter(arr, arr == arr)
filter(arr, b < 0)
filter(arr, b < 0.5)
filter(arr, b < b)
filter(arr, b <= b)
filter(arr, b > f)
filter(arr, b >= a)
filter(arr, f != nil)
filter(arr, f != obj.obj)
filter(arr, f < 0)
filter(arr, f < f)
filter(arr, f == b)
filter(arr, f == nil)
filter(arr, false) == arr
filter(arr, false) == nil ? 2 : ok
filter(arr, nil != add)
filter(arr, nil != div)
filter(arr, nil == "a")
filter(arr, nil == a)
filter(arr, nil == div)
filter(arr, nil == false)
filter(arr, nil == s)
filter(arr, none(map(arr, 0), ok))
filter(arr, not ok)
filter(arr, obj.head(ok, "b"))
filter(arr, obj?.head(false))
filter(arr, obj?.head(ok))
filter(arr, ok && ok)
filter(arr, ok && true)
filter(arr, ok == true)
filter(arr, ok or ok)
filter(arr, ok || ok)
filter(arr, ok)
filter(arr, ok) != b .. 1
filter(arr, s == nil)
filter(arr, s matches s)
filter(arr, s startsWith "c")
filter(arr[2:0], ok)
filter(b .. 1, obj.obj)
filter(b .. a, nil != a)
filter(false ? a : arr, s != nil)
filter(filter(arr, ok), 0.5 != nil)
filter(filter(arr, ok), ok)
filter(filter(arr, true), a <= 0)
filter(keys(obj), ok)
filter(map(arr, 0), s != s)
filter(map(arr, 0.5), f != nil)
filter(map(arr, 1), a != 2)
filter(map(arr, add), ok)
filter(map(arr, arr), ok)
filter(map(arr, b), !ok)
filter(map(arr, b), ok)
filter(map(arr, div), add != add)
filter(map(arr, div), ok)
filter(map(arr, ok), #)
filter(map(arr, ok), ok)
filter(map(arr, s), ok)
filter(map(obj?.obj, a == a), #)
filter(obj.head(s), ok)
filter(obj.obj, "b" endsWith s)
filter(obj.obj, f < f)
filter(obj.obj, s in obj)
filter(obj?.head("b"), ok)
filter(obj?.head("c"), ok)
filter(obj?.head(s), ok)
filter(obj?.head(s, s), ok)
filter(ok ? "c" : true, ok)
filter(ok ? arr : obj, a in arr)
filter(ok ? s : arr, b in arr)
filter(ok ? s : true, nil != f)
filter(true ? arr : add, not true)
filter(true ? arr : f, b == nil)
first(0 .. 0)
first(2 .. b)
first([ok])
first(a * obj?.b)
first(a .. 0)
first(a .. 1)
first(a .. 2)
first(a .. a)
first(arr)
first(arr) != a
first(arr) != max(2, a)
first(arr) != obj.b
first(arr) % a
first(arr) * f
first(arr) ** -0.5
first(arr) - 0 / a
first(arr) - f ** a
first(arr) .. obj.fn(b)
first(arr) > f
first(arr) ^ a
first(arr[b:0])
first(b * obj?.a)
first(b .. 1)
first(b .. b)
first(false ? "a" : 0.5)
first(false ? add : 1)
first(false ? add : true)
first(false ? b : arr)
first(false ? false : "a")
first(filter(arr, false))
first(filter(arr, ok))
first(filter(arr, true))
first(get(obj, s))
first(keys(obj))
first(map(arr, "c"))
first(map(arr, 0.5))
first(map(arr, a))
first(map(arr, add))
first(map(arr, arr))
first(map(arr, b))
first(map(arr, div))
first(map(arr, f))
first(map(arr, false))
first(map(arr, obj))
first(map(arr, ok))
first(map(arr, s))
first(obj.a)
first(obj.a)?.a
first(obj.b)
first(obj.b)?.a
first(obj.fn(0))
first(obj.fn(a))
first(obj.fn(a))?.b
first(obj.fn(b))
first(obj.head("a"))
first(obj.head("b"))
first(obj.head(0.5))
first(obj.head(0.5, add))
first(obj.head(1))
first(obj.head(1, 0, true))
first(obj.head(1, add, add))
first(obj.head(2, div))
first(obj.head(a))
first(obj.head(a, arr))
first(obj.head(add, obj, div))
first(obj.head(arr, "b")) == add
first(obj.head(arr, 0, nil))
first(obj.head(b))
first(obj.head(b, "c"))
first(obj.head(b, a))
first(obj.head(b, a, 0))
first(obj.head(b, s))
first(obj.head(div))
first(obj.head(f))
first(obj.head(f, false, 0, a))
first(obj.head(nil))
first(obj.head(nil, 0))
first(obj.head(obj, a)?.a)
first(obj.head(ok))
first(obj.head(ok, add, b))
first(obj.head(s))
first(obj.head(s, 0))
first(obj.head(s, add))
first(obj.head(s, div, f, add))
first(obj.head(s, ok, add))
first(obj.head(true))
first(obj.obj)
first(obj?.a)
first(obj?.a)?.obj
first(obj?.b)
first(obj?.fn(0 + a))
first(obj?.fn(0))
first(obj?.fn(a))
first(obj?.fn(b))
first(obj?.head("a", false))
first(obj?.head("b"))
first(obj?.head("c", f))
first(obj?.head(0))
first(obj?.head(1))
first(obj?.head(2))
first(obj?.head(a))
first(obj?.head(a, div))
first(obj?.head(a, f))
first(obj?.head(a, f, div, "b", a))
first(obj?.head(a, f, nil))
first(obj?.head(add))
first(obj?.head(add, nil, f))?.obj
first(obj?.head(arr))
first(obj?.head(b))
first(obj?.head(b, "b", false, add))
first(obj?.head(b, s, div))
first(obj?.head(div))
first(obj?.head(f))
first(obj?.head(false, nil, a, obj, f))
first(obj?.head(get(s, obj)))
first(obj?.head(nil))
first(obj?.head(nil, f))
first(obj?.head(obj))
first(obj?.head(obj, f, 2).a)
first(obj?.head(obj, nil, s))
first(obj?.head(ok))
first(obj?.head(ok, b))
first(obj?.head(true))
first(obj?.obj)
first(obj?.obj.a)
first(obj?.obj?.obj)
first(obj[nil])
first(obj[s])
first(ok ? a : ok)
first(ok ? obj : "b")
first(ok ? obj : false)
first(ok ? obj : ok)
first(ok ? ok : s)
first(ok ? s : ok)
first(split(s, s))
first(true ? arr : false)
first(values(obj))
float(-(f * 0))
float(-0)
float(-0.5)
float(-1)
float(-2)
float(-a)
float(-add(b, a))
float(-b)
float(-f)
float(0 * a)
float(0 * b)
float(0 * f)
float(0 ** 0)
float(0 + 2)
float(0 + b)
float(0 - 0.5)
float(0 - b)
float(0 - f)
float(0 / b)
float(0 / f)
float(0 ^ 0)
float(0 ^ 0.5)
float(0 ^ a)
float(0 ^ f)
float(0) != b ** a
float(0) - f
float(0) - obj.a
float(0) == b
float(0.5 * b)
float(0.5 * f)
float(0.5 - 0.5)
float(0.5 - a)
float(0.5 - b)
float(0.5 ^ 1)
float(0.5 ^ f)
float(0.5) != a + a
float(0.5) * obj?.head(0.5)
float(0.5) ** (0 - 0)
float(0.5) / b ** 0
float(0.5) <= a
float(0.5) >= b
float(0.5) >= f / 0
float(1 % a)
float(1 - 1)
float(1 - a)
float(1 - b)
float(1 - f)
float(1) + a
float(1) > a
float(2 % a)
float(2 ** b)
float(2 + b)
float(2 + f)
float(2 / f)
float(2 ^ 0)
float(2 ^ 0.5)
float(2) ** obj?.head(0, 0, "a", 0.5, obj)
float(2) - obj?.a
float(2) < float(b)
float(2) <= a
float(2) > b
float(2) > f
float(2) ^ b
float(a % a)
float(a % b)
float(a * 0)
float(a * 2)
float(a * a)
float(a * b)
float(a ** 1)
float(a ** f)
float(a + 0)
float(a + 2)
float(a + a)
float(a + b)
float(a + f)
float(a - 0)
float(a - a)
float(a - b)
float(a - f)
float(a / 0)
float(a / a)
float(a / b)
float(a ^ 1)
float(a ^ a)
float(a ^ b)
float(a ^ f)
float(a)
float(a) != add(a, a)
float(a) ** f
float(a) + a
float(a) - a
float(a) / obj?.head(f)
float(a) < a
float(a) < f
float(a) <= obj.a
float(a) > f
float(a) >= -0
float(abs(a))
float(abs(b))
float(abs(f))
float(add(0, a))
float(add(1, b))
float(add(2, a))
float(add(2, b))
float(add(a, 0))
float(add(a, 2))
float(add(a, a))
float(add(a, b))
float(add(b, 0))
float(add(b, a))
float(add(b, b))
float(arr[a])
float(arr[b])
float(b % b)
float(b * 0)
float(b * a)
float(b * b)
float(b ** a)
float(b ** b)
float(b + 0)
float(b + f)
float(b - 0)
float(b - b)
float(b / a)
float(b ^ 0.5)
float(b ^ a)
float(b ^ b)
float(b)
float(b) * a
float(b) * b
float(b) ** (a / 0.5)
float(b) + a
float(b) + b
float(b) + obj?.a
float(b) - b
float(b) - f
float(b) / a - obj?.b
float(b) == a
float(count(arr, ok))
float(div(0, a))
float(div(0, b))
float(div(1, a))
float(div(2, a))
float(div(a, a))
float(div(b, 1))
float(div(b, b))
float(f * 0)
float(f * a)
float(f * b)
float(f * f)
float(f ** 0)
float(f ** b)
float(f ** f)
float(f + 0)
float(f + a)
float(f + obj.a)
float(f - 0)
float(f - a)
float(f - b)
float(f - f)
float(f / a)
float(f / f)
float(f ^ a)
float(f)
float(f) * a
float(f) + f
float(f) + obj.a
float(f) / a
float(f) < a ^ b
float(f) > a
float(f) >= b
float(f) ^ obj.b
float(false ? obj : b)
float(false ? ok : b)
float(first(arr))
float(float(0.5))
float(float(1))
float(float(2))
float(float(a))
float(float(b))
float(float(f))
float(get(arr, 0))
float(get(arr, a))
float(get(arr, b))
float(int(0.5))
float(int(a))
float(int(b))
float(last(arr))
float(len(arr))
float(max(0.5))
float(max(b))
float(min(0))
float(min(a ** a))
float(min(a, 0))
float(min(f))
float(obj.a)
float(obj.b)
float(obj.fn(0))
float(obj.fn(2))
float(obj.fn(a))
float(obj.fn(b))
float(obj.head(0))
float(obj.head(0.5, 1))
float(obj.head(1))
float(obj.head(2))
float(obj.head(a))
float(obj.head(a, obj))
float(obj.head(b))
float(obj.head(b, arr, obj, nil))
float(obj.head(b, b, a))
float(obj.head(b, nil))
float(obj.head(f))
float(obj.obj.b)
float(obj.obj?.b)
float(obj?.a)
float(obj?.b)
float(obj?.fn(0))
float(obj?.fn(a))
float(obj?.fn(b))
float(obj?.head(0))
float(obj?.head(0, arr, ok))
float(obj?.head(0, false, false))
float(obj?.head(0.5))
float(obj?.head(a))
float(obj?.head(a, s))
float(obj?.head(b))
float(obj?.head(b, div, div))
float(obj?.head(b, nil))
float(obj?.head(b, obj?.obj))
float(obj?.head(f, s))
float(obj?.obj?.a)
float(ok ? 0 : arr)
float(ok ? 0 : true)
float(ok ? 2 : 2)
float(ok ? b : b)
float(ok ? f : s)
float(string(0))
float(string(f))
float(toJSON(0))
float(toJSON(1))
float(toJSON(2))
float(toJSON(b))
float(toJSON(f))
float(true ? a : a)
float(true ? a : add)
float(true ? b : f)
float(true ? f : obj?.obj)
fromBase64(s + "a")
fromBase64(s[2:b])
fromBase64(s[a:0])
fromBase64(s[a:a])
fromBase64(s[b:b])
fromBase64(string(ok))
fromBase64(toBase64(s))
fromBase64(toJSON(nil))
fromBase64(toJSON(ok))
fromBase64(toJSON(true))
fromJSON(string(b))
fromJSON(string(ok))
fromJSON(toJSON(b))
fromJSON(toJSON(f))
fromJSON(toJSON(nil))
fromJSON(toJSON(s))
fromJSON(toJSON(true))
get(0 .. b, -b)
get(0 .. b, a)
get(0 .. b, obj.obj)
get(1 .. 0, a)
get(1 .. 1, get(arr, a))
get(2 .. 2, b)
get(2 .. a, a)
get(2 .. b, true ? div : "c")
get([1, arr], obj.a)
get([a, "a", div, 0, a], obj?.b)
get([b], obj.head(s))
get([f], b)
get(a .. 0, b)
get(a .. b, b)
get(arr, -a)
get(arr, -b)
get(arr, 0 % a)
get(arr, 0 % b)
get(arr, 0) != obj?.head(s)
get(arr, 0) + a
get(arr, 0) - a
get(arr, 0) - b
get(arr, 0) == f
get(arr, 0) ^ 0 ** f
get(arr, 1 + a)
get(arr, 1) != b
get(arr, 1) ** a
get(arr, 1) - a
get(arr, 1) >= get(arr, b)
get(arr, 2) / obj?.b
get(arr, 2) == obj.a
get(arr, a)
get(arr, a) != b
get(arr, a) * a
get(arr, a) * b
get(arr, a) * obj.head(0, add)
get(arr, a) ** f ^ f
get(arr, a) .. b
get(arr, a) < f
get(arr, a) > f ** f
get(arr, a) ^ min(f)
get(arr, a) in arr
get(arr, add(0, a))
get(arr, add(a, 0))
get(arr, b * 1)
get(arr, b + 2)
get(arr, b + a)
get(arr, b - obj.a)
get(arr, b)
get(arr, b) != b
get(arr, b) != obj.head("a")
get(arr, b) % a * f
get(arr, b) % b
get(arr, b) * b
get(arr, b) ** f
get(arr, b) + b
get(arr, b) - 0 * 1
get(arr, b) - b
get(arr, b) .. obj?.a
get(arr, b) < a
get(arr, b) <= obj?.b
get(arr, b) == a ? f : 1
get(arr, b) >= obj?.b
get(arr, b) ^ f
get(arr, b) ^ obj?.a
get(arr, div(2, a))
get(arr, div(a, b))
get(arr, div(b, b))
get(arr, int(0.5))
get(arr, max(a, a, 0.5))
get(arr, obj.a)
get(arr, obj.b)
get(arr, obj.fn(a))
get(arr, obj.head(a, nil))
get(arr, obj.head(add))
get(arr, obj.head(add, 0, 0))
get(arr, obj.head(arr))
get(arr, obj.head(f))
get(arr, obj.head(s, "c"))
get(arr, obj.obj)
get(arr, obj.obj?.obj)
get(arr, obj?.a)
get(arr, obj?.b)
get(arr, obj?.head(0.5))
get(arr, obj?.head(1))
get(arr, obj?.head(1, ok, 0))
get(arr, obj?.head(add, add))
get(arr, obj?.head(arr))
get(arr, obj?.head(arr, "c"))
get(arr, obj?.head(false))
get(arr, obj?.head(nil))
get(arr, obj?.head(obj))
get(arr, obj?.head(obj, f, div)?.b)
get(arr, obj?.obj)
get(arr, obj?.obj.a)
get(arr, obj[nil])
get(arr, ok ? "a" : add)
get(arr, ok ? arr : div)
get(arr, ok ? obj : 0)
get(arr, ok ? obj : b)
get(arr[0:1], b)
get(arr[0:2], obj?.head(ok))
get(arr[b:a], obj.b)
get(b .. 2, obj.head(arr, ok))
get(b .. a, a)
get(b .. b, ok ? b : div)
get(false ? "a" : ok, get(add, f))
get(false ? "b" : b, f != b)
get(false ? 0 : 0.5, s)
get(false ? 0 : add, obj.head(add, div))
get(false ? 0 : arr, arr)
get(false ? 0 : ok, a)
get(false ? 0.5 : arr, div)
get(false ? 0.5 : s, f)
get(false ? 2 : f, 0.5 .. 0.5)
get(false ? arr : b, upper(0, true, "c"))
get(false ? div : b, 0 / f)
get(false ? div : b, s)
get(false ? f : add, ok)
get(false ? false : s, s)
get(false ? obj : 0, s)
get(false ? obj : ok, obj.head(s, div, "b"))
get(false ? ok : arr, count(arr, ok))
get(filter(arr, ok), a)
get(get(obj, s), add)
get(get(obj, s), int(1))
get(get(obj, s), now(0))
get(get(obj, s), obj.a)
get(get(obj, s), s)
get(map(arr, "b"), obj.head(b, s))
get(map(arr, 0.5), obj.a)
get(map(arr, add), a)
get(map(arr, add), obj.head(b))
get(map(arr, b), a - a)
get(map(arr, b), add(b, 0))
get(map(arr, div), b)
get(map(arr, false), a)
get(map(arr, obj), b)
get(map(arr, s), min(b, b))
get(map(arr, s), obj.a)
get(map(arr, true), b)
get(obj, get(obj, s))
get(obj, lower("a"))
get(obj, lower("c"))
get(obj, obj.a)
get(obj, obj.b)
get(obj, obj.head("b", add, 0.5))
get(obj, obj.head(0))
get(obj, obj.head(b, a))
get(obj, obj.head(div))
get(obj, obj.head(div, add))
get(obj, obj.head(f, add))
get(obj, obj.head(obj))
get(obj, obj.head(obj, "b", b))
get(obj, obj.head(ok, add, 0, 2, obj))
get(obj, obj.head(s))
get(obj, obj.obj)
get(obj, obj.obj.b)
get(obj, obj.obj?.obj)
get(obj, obj?.a)
get(obj, obj?.b)
get(obj, obj?.fn(0))
get(obj, obj?.fn(1))
get(obj, obj?.head("b", nil, a, f, f))
get(obj, obj?.head(2))
get(obj, obj?.head(a))
get(obj, obj?.head(f, ok))
get(obj, obj?.head(false, false, b))
get(obj, obj?.head(s))
get(obj, obj?.head(s))?.b
get(obj, obj?.head(true))
get(obj, obj?.obj)
get(obj, ok ? "a" : a)
get(obj, ok ? a : true)
get(obj, ok ? obj : div)
get(obj, ok ? s : obj)
get(obj, s)
get(obj, s) != f
get(obj, s) != ok
get(obj, s)?.a
get(obj, s)?.a?.b
get(obj, s)?.a?.head(f, div)
get(obj, s)?.a?.obj
get(obj, s)?.b
get(obj, s)?.b?.b
get(obj, s)?.fn(a)
get(obj, s)?.fn(div)
get(obj, s)?.fn(s)
get(obj, s)?.head(add)
get(obj, s)?.head(add, int(1))
get(obj, s)?.head(s)
get(obj, s)?.obj
get(obj, s)?.obj.b
get(obj, s)?.obj?.b
get(obj, string(b))
get(obj, string(div))
get(obj, string(ok))
get(obj, toBase64(s))
get(obj, toJSON(b))
get(obj, toJSON(f))
get(obj, toJSON(false))
get(obj, toJSON(nil == add))
get(obj, toJSON(ok))?.a
get(obj, trimPrefix("a"))
get(obj, trimSuffix(s))
get(obj.a, "a" matches s)
get(obj.a, -f)
get(obj.a, 0 != a)
get(obj.a, 0 - 0)
get(obj.a, 0 .. a)
get(obj.a, 0 == arr)
get(obj.a, 0.5 * b)
get(obj.a, 0.5 >= f)
get(obj.a, 1 <= b)
get(obj.a, 1 > f)
get(obj.a, 2 == add)
get(obj.a, [s, a, obj])
get(obj.a, a != nil)
get(obj.a, a / a)
get(obj.a, a)
get(obj.a, a)?.a
get(obj.a, abs(arr, false, 0))
get(obj.a, add)
get(obj.a, arr and false)
get(obj.a, arr)
get(obj.a, b + a)
get(obj.a, b <= a)
get(obj.a, b == a)
get(obj.a, b)
get(obj.a, div)
get(obj.a, f * f)
get(obj.a, f ** 2)
get(obj.a, f <= 1)
get(obj.a, f == add)
get(obj.a, f == div)
get(obj.a, f == s)
get(obj.a, f)
get(obj.a, false != "b")
get(obj.a, float(nil, 2))
get(obj.a, get("c", obj))
get(obj.a, get(div, div))
get(obj.a, get(div, obj))
get(obj.a, get(f, 1))
get(obj.a, get(false, b))
get(obj.a, get(obj, true))
get(obj.a, get(ok, true))
get(obj.a, last(a, "a"))
get(obj.a, len(true, s, ok, "c", s))
get(obj.a, lower(add, "c"))?.b
get(obj.a, map("c", 1))
get(obj.a, map(arr, b))
get(obj.a, map(obj, f))
get(obj.a, map(s, s))
get(obj.a, max(false))
get(obj.a, obj != "c")
get(obj.a, obj)
get(obj.a, obj)?.b
get(obj.a, obj.b)
get(obj.a, obj.b)?.a
get(obj.a, obj.head(div, nil))
get(obj.a, obj?.head(ok))
get(obj.a, ok == f)
get(obj.a, ok || nil)
get(obj.a, ok)
get(obj.a, s != nil)
get(obj.a, s)
get(obj.a, s[f])
get(obj.a, string(ok))
get(obj.a, toJSON(0, b, 0, f))
get(obj.a, toJSON(2))
get(obj.a, true != s)
get(obj.a, true and "c")
get(obj.b, !true)
get(obj.b, "a" startsWith "a")
get(obj.b, "b" != add)
get(obj.b, "c" in nil)
get(obj.b, 0 + 0.5)
get(obj.b, 0 < f)
get(obj.b, 0.5 .. 0)
get(obj.b, a == nil)
get(obj.b, a == ok)
get(obj.b, a >= a)
get(obj.b, a and true)?.head(arr)
get(obj.b, a)
get(obj.b, a)?.head(s)
get(obj.b, add)
get(obj.b, arr == obj)?.a
get(obj.b, arr)
get(obj.b, b != f)
get(obj.b, b .. a)
get(obj.b, b >= b)
get(obj.b, b)
get(obj.b, div)
get(obj.b, f != ok)
get(obj.b, f)
get(obj.b, false != "b")
get(obj.b, filter(f .. 0.5, b or true))
get(obj.b, get("b"))
get(obj.b, get(2, false))
get(obj.b, get(arr, a))
get(obj.b, get(b, div))
get(obj.b, get(div, 0))
get(obj.b, get(ok))
get(obj.b, last("b", 0))
get(obj.b, lower("b"))
get(obj.b, lower(f, s))
get(obj.b, map(arr, arr))
get(obj.b, map(obj, nil))
get(obj.b, map(s, s))
get(obj.b, max(nil, div))
get(obj.b, not ok)
get(obj.b, now(add, a, div))
get(obj.b, obj == 0.5)
get(obj.b, obj || true)
get(obj.b, obj)
get(obj.b, obj)?.b
get(obj.b, obj)?.b?.b
get(obj.b, obj.a)
get(obj.b, obj.fn(1))
get(obj.b, obj.head(f, obj, 0))
get(obj.b, obj.obj)
get(obj.b, obj?.a)
get(obj.b, obj?.b)
get(obj.b, obj?.head("b", nil, f))
get(obj.b, obj?.head(div))
get(obj.b, ok && s)
get(obj.b, ok == a)
get(obj.b, ok and arr)
get(obj.b, ok)
get(obj.b, one("b", true))
get(obj.b, s == ok)
get(obj.b, s)
get(obj.b, s)?.a
get(obj.b, toJSON(2))
get(obj.b, upper(s))
get(obj.c, a)
get(obj.c, arr)
get(obj.c, ok)
get(obj.fn(0), a)
get(obj.fn(0), add)
get(obj.fn(0), arr)
get(obj.fn(0), f in nil)
get(obj.fn(0), int(b))
get(obj.fn(0), ok)
get(obj.fn(1) + obj?.fn(0), obj)
get(obj.fn(1), div == a)
get(obj.fn(1), div)
get(obj.fn(1), f && false)
get(obj.fn(1), now(arr))
get(obj.fn(2), arr)
get(obj.fn(a), f * f)
get(obj.fn(a), get(nil))
get(obj.fn(a), now(nil))
get(obj.fn(b), 0 + a)
get(obj.fn(b), 2 < 0.5)
get(obj.fn(b), arr)
get(obj.fn(b), div)
get(obj.fn(b), ok)
get(obj.fn(b), s)
get(obj.head("a"), obj?.obj)
get(obj.head("a", "a"), false ? obj : s)
get(obj.head("a", nil), add != div)
get(obj.head("b"), f)
get(obj.head("b", f, add), div)
get(obj.head("b", s, nil), a)
get(obj.head(0), div)
get(obj.head(0), f)
get(obj.head(0, "c"), get("a", arr))
get(obj.head(0, "c"), toJSON(a))
get(obj.head(0, "c", b), add)
get(obj.head(0, 0.5, div, s, a), b ** a)
get(obj.head(0, add), a)
get(obj.head(0, add, f), f)
get(obj.head(0, nil), arr)
get(obj.head(0.5), s)
get(obj.head(0.5, 0, ok), obj)
get(obj.head(0.5, false), add)
get(obj.head(1, false, obj, f, arr), obj)
get(obj.head(2, ok), get(obj, b))
get(obj.head(a), a)
get(obj.head(a), add)
get(obj.head(a), obj == div)
get(obj.head(a), obj?.a)
get(obj.head(a), s)
get(obj.head(a, 0, "a"), f)
get(obj.head(a, 2, a, obj), div != ok)
get(obj.head(a, a, arr), ok || f)
get(obj.head(a, nil, a), arr)
get(obj.head(a, s, add), obj.b)
get(obj.head(add), add)
get(obj.head(add), first(s))
get(obj.head(add), float(s, 1))
get(obj.head(add), ok && a)
get(obj.head(add, 1), arr[0:a])
get(obj.head(add, a, 2), b)
get(obj.head(add, add, add), div)
get(obj.head(arr), !ok)
get(obj.head(arr), a)
get(obj.head(arr), arr)
get(obj.head(arr), f != arr)
get(obj.head(arr), get(s, 2))
get(obj.head(arr), ok)
get(obj.head(arr, 0), f)
get(obj.head(arr, 2), arr == nil)
get(obj.head(arr, nil), -0.5)
get(obj.head(arr, nil, nil), ok)
get(obj.head(b), a)
get(obj.head(b), arr)
get(obj.head(b), f ** a)
get(obj.head(b, 0), f != ok)
get(obj.head(b, 1), div)
get(obj.head(b, arr), "a" < s)
get(obj.head(b, b), get(1, s))
get(obj.head(b, div, f), a / b)
get(obj.head(b, obj, s, true), 0 <= a)
get(obj.head(div), add)
get(obj.head(div), b - b)
get(obj.head(div), b)
get(obj.head(div), div != 1)?.b
get(obj.head(div), obj)
get(obj.head(div, "c", add), arr)
get(obj.head(div, a), obj and false)
get(obj.head(div, arr), a)?.b?.a
get(obj.head(div, div), s matches s)
get(obj.head(div, false), false != arr)
get(obj.head(div, ok), !ok)
get(obj.head(f), arr)
get(obj.head(f), obj.a)?.obj
get(obj.head(f), upper("c"))
get(obj.head(f, add, f, ok), 0.5 and false)
get(obj.head(f, b), obj.b)
get(obj.head(f, false), arr)
get(obj.head(f, nil), add)
get(obj.head(f, s), arr[a])
get(obj.head(false), add != s)
get(obj.head(false), add)
get(obj.head(false), div)
get(obj.head(false), s)
get(obj.head(false, add), s)
get(obj.head(false, arr), div)
get(obj.head(false, b, 0, obj), get(f, b))
get(obj.head(false, div), s in obj)
get(obj.head(get(s, 1)), div)
get(obj.head(nil), add)
get(obj.head(nil), obj?.head(true, "a"))
get(obj.head(nil), obj?.obj)
get(obj.head(nil), s)
get(obj.head(nil), s[b])
get(obj.head(nil, obj, arr, add, arr), b)
get(obj.head(nil, true), string(b))
get(obj.head(obj), div)
get(obj.head(obj), get(add, s))
get(obj.head(obj), get(div, ok, obj))
get(obj.head(obj), ok)
get(obj.head(obj), true || false)
get(obj.head(obj, "a"), s)
get(obj.head(obj, "c", nil), a)
get(obj.head(obj, 0, "a"), obj.obj)?.b
get(obj.head(obj, f), a)
get(obj.head(obj, f, obj), toJSON(s))
get(obj.head(obj, nil), nil != a)
get(obj.head(obj, s, 0), arr)
get(obj.head(ok), a != true)
get(obj.head(ok), b ** 2)
get(obj.head(ok), get(1, add))
get(obj.head(ok), obj)
get(obj.head(ok), obj?.a)
get(obj.head(ok), s)
get(obj.head(ok), toJSON(nil))
get(obj.head(ok), true ? a : nil)
get(obj.head(ok, "a"), add)
get(obj.head(ok, 0.5, add, div), obj)
get(obj.head(ok, 1), 0.5 != 0)
get(obj.head(ok, a), "b" contains "b")
get(obj.head(ok, arr, div, true, s), get(2, nil))
get(obj.head(ok, s), map(obj, true))
get(obj.head(s), add && true)
get(obj.head(s), b)
get(obj.head(s), div == "a")
get(obj.head(s), get(obj, f))
get(obj.head(s), map(s, f))
get(obj.head(s), obj.head(0.5, true, ok))
get(obj.head(s, a), get(div, nil))
get(obj.head(s, arr, f), "a" in obj)
get(obj.head(s, f), last(nil, arr))
get(obj.head(true), ok != 0.5)
get(obj.head(true, "c"), get(b, ok))
get(obj.head(true, false, obj), true != f)
get(obj.obj, !true)
get(obj.obj, "a" == obj)
get(obj.obj, "a" == ok)
get(obj.obj, 0 <= 0)
get(obj.obj, 0 == nil)
get(obj.obj, 0 == s)
get(obj.obj, 0 == true)
get(obj.obj, 0 > a)
get(obj.obj, 0.5 ^ b)
get(obj.obj, a + f)
get(obj.obj, a - 0)
get(obj.obj, a)
get(obj.obj, a)?.a
get(obj.obj, abs(0))
get(obj.obj, add(b, b))
get(obj.obj, add)
get(obj.obj, all("b", ok)) != b
get(obj.obj, arr)
get(obj.obj, b)
get(obj.obj, count(s, false))
get(obj.obj, div != "a")
get(obj.obj, div != add)
get(obj.obj, div)
get(obj.obj, f != obj)
get(obj.obj, f .. 0)
get(obj.obj, f < a)
get(obj.obj, f)
get(obj.obj, false or false)
get(obj.obj, false or s)
get(obj.obj, filter(obj, false))
get(obj.obj, get(arr))
get(obj.obj, get(arr, obj))
get(obj.obj, get(arr, s))
get(obj.obj, get(b, a))
get(obj.obj, get(f, false))
get(obj.obj, get(nil, s))
get(obj.obj, get(obj, true))
get(obj.obj, int(b, 0.5))
get(obj.obj, int(b, b))
get(obj.obj, last("c"))
get(obj.obj, map(arr, "a"))
get(obj.obj, map(s, "a"))
get(obj.obj, min(arr))
get(obj.obj, nil != a)
get(obj.obj, now(obj))
get(obj.obj, obj)
get(obj.obj, obj)?.obj
get(obj.obj, obj?.a)
get(obj.obj, obj?.b)
get(obj.obj, obj?.obj)
get(obj.obj, obj[s])
get(obj.obj, ok != b)
get(obj.obj, ok)
get(obj.obj, one(obj, ok))
get(obj.obj, one(s, ok))
get(obj.obj, s)
get(obj.obj, s)?.obj
get(obj.obj, s[f])
get(obj.obj, string(a, b))
get(obj.obj, toBase64("a", 1))
get(obj.obj, toJSON(arr))
get(obj.obj, true or nil)
get(obj.obj.a, obj)?.fn(a)
get(obj.obj?.b, f)
get(obj?.a, "b" in arr)
get(obj?.a, -a)
get(obj?.a, -f)
get(obj?.a, 0 + a)
get(obj?.a, 0 - a)
get(obj?.a, 0 / a)
get(obj?.a, 0 <= f)?.a
get(obj?.a, 0.5 != 1)
get(obj?.a, 0.5 > 0.5)
get(obj?.a, 1 + f)
get(obj?.a, 1 <= 1)
get(obj?.a, a - a)
get(obj?.a, a == nil)
get(obj?.a, a)
get(obj?.a, a)?.b
get(obj?.a, add(a, a))?.obj
get(obj?.a, add)
get(obj?.a, all(s, false))
get(obj?.a, arr)
get(obj?.a, b ** a)
get(obj?.a, b - a)
get(obj?.a, b < b)
get(obj?.a, b)
get(obj?.a, div(0, b))
get(obj?.a, div)
get(obj?.a, f .. b)
get(obj?.a, f ^ f)
get(obj?.a, f)
get(obj?.a, false != ok)
get(obj?.a, false && s)
get(obj?.a, false ? 0 : false)
get(obj?.a, false || s)
get(obj?.a, get("a", nil))
get(obj?.a, get(0, ok))
get(obj?.a, get(0.5, 2))
get(obj?.a, get(2, true))
get(obj?.a, get(s, f))
get(obj?.a, get(s, s))
get(obj?.a, get(true, nil))
get(obj?.a, int(f))
get(obj?.a, last(0.5, add, 0.5))
get(obj?.a, last(add))
get(obj?.a, map(arr, div))
get(obj?.a, max(f))
get(obj?.a, min(a, 0.5) <= 2 != ok)
get(obj?.a, not ok)
get(obj?.a, now(0.5, 1, s, 0, f))
get(obj?.a, now(div))
get(obj?.a, obj)
get(obj?.a, obj.a)
get(obj?.a, obj.b)
get(obj?.a, obj.head(ok, 0))
get(obj?.a, obj?.b)
get(obj?.a, obj?.head(f))
get(obj?.a, ok && "a")
get(obj?.a, ok ? div : "a")
get(obj?.a, ok || f)
get(obj?.a, ok)
get(obj?.a, s)
get(obj?.a, string(div))
get(obj?.a, toJSON(f, nil, s))
get(obj?.a, true && false)
get(obj?.a, true ? false : add)
get(obj?.b, -f)
get(obj?.b, 0 or true)
get(obj?.b, 0 || false)?.fn(f)
get(obj?.b, 1 - b)
get(obj?.b, 2 % b)
get(obj?.b, 2 == 0)
get(obj?.b, a .. 0)
get(obj?.b, a < b)
get(obj?.b, a)
get(obj?.b, a)?.obj
get(obj?.b, add == s)
get(obj?.b, add in arr)
get(obj?.b, add)
get(obj?.b, arr == 0.5)
get(obj?.b, arr == a)
get(obj?.b, arr)
get(obj?.b, arr)?.b
get(obj?.b, arr[b])
get(obj?.b, b % a)
get(obj?.b, b + 1)
get(obj?.b, b)
get(obj?.b, count(obj, true))
get(obj?.b, div != "b")
get(obj?.b, div)
get(obj?.b, f != ok)
get(obj?.b, f + 0)
get(obj?.b, f / b)
get(obj?.b, f == div)
get(obj?.b, f)
get(obj?.b, false == nil)
get(obj?.b, false and f)
get(obj?.b, float(a))
get(obj?.b, get(0.5, ok))
get(obj?.b, get(a, 2))
get(obj?.b, get(a, a))
get(obj?.b, get(add))
get(obj?.b, get(add, arr))
get(obj?.b, get(add, s))
get(obj?.b, get(f, 0.5))
get(obj?.b, get(f, arr))?.obj
get(obj?.b, get(false, false))
get(obj?.b, get(obj, div))
get(obj?.b, get(obj, nil))
get(obj?.b, get(ok, f))
get(obj?.b, get(s))
get(obj?.b, get(s, 0))
get(obj?.b, int(2))
get(obj?.b, last(ok, true, 0.5))
get(obj?.b, map("a", s))
get(obj?.b, map(obj, 0))
get(obj?.b, map(obj, nil))
get(obj?.b, map(s, 1))
get(obj?.b, map(s, b))
get(obj?.b, max(f))
get(obj?.b, min(nil))
get(obj?.b, nil or true)
get(obj?.b, nil || false)
get(obj?.b, now(s))
get(obj?.b, now(true))
get(obj?.b, obj == b)
get(obj?.b, obj)
get(obj?.b, obj.a)
get(obj?.b, obj.b)
get(obj?.b, obj.head(false))
get(obj?.b, obj?.head(a, 0.5))
get(obj?.b, obj?.head(obj, 0))
get(obj?.b, obj?.head(ok))
get(obj?.b, ok && arr)
get(obj?.b, ok ? f : arr)
get(obj?.b, ok and div)
get(obj?.b, ok)
get(obj?.b, s != obj)
get(obj?.b, s == s)
get(obj?.b, s > "a")
get(obj?.b, s)
get(obj?.b, s)?.obj
get(obj?.b, toJSON(f))
get(obj?.c?.a?.b, ok)
get(obj?.fn(0), a)
get(obj?.fn(0), ok)
get(obj?.fn(0), s)
get(obj?.fn(1 + 0), ok ? ok : s?.a)
get(obj?.fn(1), obj)
get(obj?.fn(2), a / 0)
get(obj?.fn(2), a)
get(obj?.fn(2), none(s, true))
get(obj?.fn(a), add)
get(obj?.fn(a), f)
get(obj?.fn(a), get(arr, b))
get(obj?.fn(a), get(nil, 0))
get(obj?.fn(a), obj)
get(obj?.fn(a), s)
get(obj?.fn(b + b), a)
get(obj?.fn(b), div)
get(obj?.fn(b), f .. f)
get(obj?.fn(b), obj)
get(obj?.head("a"), arr)
get(obj?.head("a"), map("a", a))
get(obj?.head("a", f), obj?.b)?.b
get(obj?.head("b"), add)
get(obj?.head("b", 2, arr), ok)
get(obj?.head("c"), s > "c")
get(obj?.head("c"), s matches s)
get(obj?.head("c", 0.5, a), "a" || false)
get(obj?.head("c", b), nil == div)
get(obj?.head("c", div, ok), count("b", true))
get(obj?.head(0), b .. b)
get(obj?.head(0), div)
get(obj?.head(0), map(s, add))
get(obj?.head(0), obj)
get(obj?.head(0), obj?.b)
get(obj?.head(0), ok)
get(obj?.head(0), s)
get(obj?.head(0, 0), b)
get(obj?.head(0, 0, add, "b", 2), arr)
get(obj?.head(0, a, 0.5, a), a - b)
get(obj?.head(0, b, add, false, nil), b)
get(obj?.head(0, nil, obj, 0, add), div)
get(obj?.head(0.5), min(arr))
get(obj?.head(0.5), s)
get(obj?.head(0.5, b), ok or b)
get(obj?.head(0.5, b), s)
get(obj?.head(0.5, div), add)
get(obj?.head(0.5, s, a, "c", b), obj?.head(add, 0))
get(obj?.head(1), get(ok, 0))
get(obj?.head(1, a), add)
get(obj?.head(1, a, f), get(f, nil))
get(obj?.head(2), a)
get(obj?.head(2), max(0.5))
get(obj?.head(2, true, a, ok), arr)
get(obj?.head(a), add)
get(obj?.head(a), arr)
get(obj?.head(a), b)
get(obj?.head(a), obj?.obj)
get(obj?.head(a), s)
get(obj?.head(a, "c", "c"), a)
get(obj?.head(a, add, b), div)
get(obj?.head(a, div), obj.head(b))
get(obj?.head(a, s, s), map("a", a))
get(obj?.head(add), b)
get(obj?.head(add), none(obj, false))
get(obj?.head(add), now(obj, 1, add))
get(obj?.head(add), s)
get(obj?.head(add, a, obj, "b", a), obj.obj)
get(obj?.head(add, b), div)
get(obj?.head(add, false), div != b)
get(obj?.head(add, float(f)), s)
get(obj?.head(add, obj, a), s)
get(obj?.head(add, obj, a, 0.5), add)
get(obj?.head(add, obj, obj), f)
get(obj?.head(add, ok), a)
get(obj?.head(arr), get(s, arr))
get(obj?.head(arr), obj)
get(obj?.head(arr), s)
get(obj?.head(arr, 0.5, false), 0 > f)
get(obj?.head(arr, a), obj.obj)
get(obj?.head(arr, add), 0.5 / a)
get(obj?.head(arr, add), b)
get(obj?.head(arr, add), div)
get(obj?.head(arr, nil), f)
get(obj?.head(arr, nil, arr, ok), obj)
get(obj?.head(arr, obj, "a"), false == div)
get(obj?.head(arr, ok, arr), obj?.head(true, 0))
get(obj?.head(arr, s), div)
get(obj?.head(arr, s), obj.a)
get(obj?.head(b), all(s, ok))
get(obj?.head(b), b)
get(obj?.head(b), f)?.obj
get(obj?.head(b), false && 0)
get(obj?.head(b), get(0.5, b))
get(obj?.head(b), obj?.b)
get(obj?.head(b, "b", nil), arr)
get(obj?.head(b, 0), obj.b)
get(obj?.head(b, div), add)
get(obj?.head(b, nil, ok), nil == f)
get(obj?.head(div), a)
get(obj?.head(div), arr)
get(obj?.head(div), div)
get(obj?.head(div, 1, ok, a), div)
get(obj?.head(div, a), obj && false)
get(obj?.head(div, arr), nil == "c")
get(obj?.head(div, false), f)
get(obj?.head(div, false, arr), map(s, b))
get(obj?.head(div, obj), f)
get(obj?.head(f), arr)
get(obj?.head(f), obj.obj)
get(obj?.head(f), s)
get(obj?.head(f, nil), ok ? f : div)
get(obj?.head(f, ok, add), "a" == f)
get(obj?.head(false), false and f)
get(obj?.head(false), ok && obj)
get(obj?.head(false), ok)
get(obj?.head(false, b, ok, "a"), any(obj, ok))
get(obj?.head(false, obj, 0, arr), div)
get(obj?.head(false, s, 0, f), true or s)
get(obj?.head(nil), a)
get(obj?.head(nil), add)
get(obj?.head(nil), f)
get(obj?.head(nil), get(false, add))
get(obj?.head(nil), ok)
get(obj?.head(nil), s == arr)
get(obj?.head(nil), s)
get(obj?.head(nil, "c"), arr)
get(obj?.head(nil, arr), ok or obj)
get(obj?.head(nil, obj), first(f, nil))
get(obj?.head(obj), add != true)
get(obj?.head(obj), arr)
get(obj?.head(obj), f)
get(obj?.head(obj), obj)
get(obj?.head(obj), ok)
get(obj?.head(obj, "a", add), ok == ok)
get(obj?.head(obj, arr), arr)
get(obj?.head(obj, f), obj)
get(obj?.head(obj, obj, ok), div)
get(obj?.head(obj?.a), a)
get(obj?.head(ok), a)
get(obj?.head(ok), b)
get(obj?.head(ok, 1), b == b)
get(obj?.head(ok, 1), ok)
get(obj?.head(ok, arr, div), get(add, s))
get(obj?.head(ok, f, 0.5, b), 1 != true)
get(obj?.head(s), b % 2)
get(obj?.head(s), f)
get(obj?.head(s), get(a, obj))
get(obj?.head(s), obj)
get(obj?.head(s), ok)
get(obj?.head(s, 0, arr), false or s)
get(obj?.head(s, 2, f, div), get(f, 0.5))
get(obj?.head(s, add, s), hasPrefix("b", s))
get(obj?.head(s, div, arr), s)
get(obj?.head(s, false), obj == add)
get(obj?.head(true), b)
get(obj?.head(true), f != s)
get(obj?.head(true), f)
get(obj?.head(true), first(div, b))
get(obj?.head(true, add), a)
get(obj?.head(true, add, add), obj.head(ok, obj, 2, nil, 2))
get(obj?.head(true, b), obj)
get(obj?.head(true, div), a)
get(obj?.head(true, f), filter(s, true))
get(obj?.head(true, obj, 1, b), div)
get(obj?.obj, "a" matches s)
get(obj?.obj, -b)
get(obj?.obj, 0 != f)
get(obj?.obj, 0 != s)
get(obj?.obj, 0 / a)
get(obj?.obj, 0.5 + a)?.a
get(obj?.obj, 1 .. a)
get(obj?.obj, 2 + 2)
get(obj?.obj, a != 2)
get(obj?.obj, a * f)
get(obj?.obj, a ** f)
get(obj?.obj, a < b)
get(obj?.obj, a or true)
get(obj?.obj, a)
get(obj?.obj, add and false)
get(obj?.obj, add(a, b))
get(obj?.obj, add)
get(obj?.obj, arr)
get(obj?.obj, b * b)
get(obj?.obj, b ** 2)
get(obj?.obj, b > a)
get(obj?.obj, b)
get(obj?.obj, div == 0)
get(obj?.obj, div)
get(obj?.obj, f < 0)
get(obj?.obj, f)
get(obj?.obj, false or "c")
get(obj?.obj, filter("a", ok))
get(obj?.obj, filter(s, ok))
get(obj?.obj, get("b", arr))
get(obj?.obj, get("c", arr))
get(obj?.obj, get(0, a))
get(obj?.obj, get(add, s))
get(obj?.obj, get(arr, 0))
get(obj?.obj, get(nil, a))
get(obj?.obj, get(nil, b))
get(obj?.obj, int(false, arr, b))
get(obj?.obj, map(obj, "b"))
get(obj?.obj, map(obj, div))
get(obj?.obj, min(arr))
get(obj?.obj, now("c", obj))
get(obj?.obj, obj)
get(obj?.obj, obj)?.a?.a
get(obj?.obj, obj.a)
get(obj?.obj, obj.b)
get(obj?.obj, obj.head(nil))
get(obj?.obj, obj.obj)
get(obj?.obj, obj?.a)
get(obj?.obj, obj?.head(add))
get(obj?.obj, obj?.head(s, 0))
get(obj?.obj, obj?.obj)
get(obj?.obj, ok != a)
get(obj?.obj, ok != false)
get(obj?.obj, ok ? 2 : true)
get(obj?.obj, ok and nil)
get(obj?.obj, ok or ok)
get(obj?.obj, ok)
get(obj?.obj, ok)?.obj
get(obj?.obj, one(obj, true))
get(obj?.obj, s)
get(obj?.obj, string(f))
get(obj?.obj, string(f, 0))
get(obj?.obj, string(ok, s, s))
get(obj?.obj, toJSON(b, b, nil))
get(obj?.obj, toJSON(f))
get(obj?.obj, true || 1)
get(obj?.obj.b, arr)
get(obj?.obj?.a, div)
get(obj?.obj?.b, obj)
get(obj?.obj?.b, s)
get(obj?.obj?.obj, f)
get(obj[nil], add)
get(obj[nil], arr)
get(obj[nil], f)
get(obj[nil], get(s, a))
get(obj[nil], ok)
get(obj[nil], s)
get(obj[s], obj)
get(obj[s], obj?.a)
get(ok ? "a" : add, ok ? s : add)
get(ok ? "a" : arr, arr)
get(ok ? 0 : "c", obj)
get(ok ? 0 : arr, arr)
get(ok ? add : 0.5, b)
get(ok ? add : obj, ok)
get(ok ? arr : add, div)
get(ok ? arr : b, f)
get(ok ? arr : f, toJSON("c"))
get(ok ? b : div, first(nil))
get(ok ? div : 1, add)
get(ok ? f : "a", f)
get(ok ? f : div, arr)
get(ok ? f : obj, div)
get(ok ? f : ok, obj.obj)
get(ok ? false : arr, s)
get(ok ? obj : 0, arr)
get(ok ? obj : a, a)
get(ok ? obj : div, div)
get(ok ? ok : b, ok and ok)
get(ok ? ok : f, last(ok))
get(ok ? ok : obj, a)
get(ok ? ok : obj, arr)
get(ok ? s : f, arr)
get(ok ? s : false, 0 != f)
get(ok ? s : obj, obj?.head(ok, add))?.b
get(ok ? true : a, count(arr, ok))
get(true ? "c" : 0, get("b", div))
get(true ? 0.5 : 0, s)
get(true ? 1 : arr, f)
get(true ? 1 : ok, f == a)
get(true ? 1 : ok, ok or add)
get(true ? a : ok, f * 0.5)
get(true ? a : ok, get(nil, "c"))
get(true ? add : "a", a)
get(true ? add : 0.5, s[0.5:b])
get(true ? b : s, div)
get(true ? div : 2, add)
get(true ? f : "c", get(arr))
get(true ? obj : add, arr)
get(true ? ok : 0, 0 / a)
get(true ? s : 0.5, get(obj, f))
get(values(obj), obj.a)
get({"b": b, "c": "c", "a": nil}?.b, obj.obj)
indexOf("b", s) != a
indexOf(s, s)
indexOf(s, upper(s))
int(-0)
int(-0.5)
int(-1)
int(-a)
int(-b)
int(-f)
int(0 % 1)
int(0 % a)
int(0 * 0)
int(0 * 0.5)
int(0 * f)
int(0 ** 0.5)
int(0 + 0)
int(0 + a)
int(0 + b)
int(0 + f)
int(0 - 0)
int(0 - a)
int(0 - b)
int(0 - f)
int(0 / a)
int(0 / f)
int(0 ^ a)
int(0) != -f
int(0) != a ? nil : a
int(0) != obj.obj
int(0) ** obj.b
int(0) + get(arr, 0)
int(0) .. b
int(0) / f
int(0) < min(1)
int(0) <= obj.b
int(0) > obj.head(b)
int(0) ^ f
int(0.5 * a)
int(0.5 * f)
int(0.5 ** 2)
int(0.5 ** a)
int(0.5 + f)
int(0.5 - f)
int(0.5 / 0.5)
int(0.5 / a)
int(0.5 / b)
int(0.5 / f)
int(0.5 ^ 0)
int(0.5 ^ 0.5)
int(0.5) != f ? 0.5 : arr
int(0.5) < b
int(0.5) > f
int(1 % 1 % b)
int(1 * f)
int(1 ** 0)
int(1 ** a)
int(1 ** b)
int(1 / b)
int(1) != a
int(1) * a
int(1) ** a
int(1) / 0 ^ f
int(1) <= b
int(2 % b)
int(2 ** 1)
int(2 ** f)
int(2 + 0)
int(2 - b)
int(2 / a)
int(2) != a
int(2) ** a
int(2) + int(b)
int(2) .. b
int(2) <= a * f
int(2) > b
int(a % 2)
int(a % b)
int(a * 0)
int(a * 0.5)
int(a * f)
int(a ** 0)
int(a ** b)
int(a ** f)
int(a + a)
int(a + b)
int(a - 0.5)
int(a - a)
int(a / 0)
int(a / a)
int(a / b)
int(a / f)
int(a ^ 0)
int(a ^ 0.5)
int(a ^ b)
int(a)
int(a) != b
int(a) != f != true
int(a) * a
int(a) * f
int(a) ** a
int(a) + -f
int(a) + a
int(a) - b
int(a) - f
int(a) / a
int(a) / obj.a
int(a) < obj.head(obj).a
int(a) <= b
int(a) == b
int(a) >= a
int(a) >= obj.fn(a)
int(a) ^ b
int(abs(a))
int(abs(b))
int(abs(f))
int(add(0, 0))
int(add(0, 2))
int(add(a, 0))
int(add(a, 2))
int(add(a, a))
int(add(a, b))
int(add(add(0, b), b))
int(add(add(b, a), b))
int(add(b, 0))
int(add(b, b))
int(arr[0])
int(arr[a])
int(arr[b])
int(b % a)
int(b * a)
int(b * b)
int(b ** a)
int(b ** b)
int(b ** f)
int(b + 0.5)
int(b + 2)
int(b + a)
int(b + b)
int(b - 0)
int(b - 2)
int(b - b)
int(b - f)
int(b / 1)
int(b / b)
int(b ^ b)
int(b ^ f)
int(b)
int(b) != 0 * 0
int(b) != f
int(b) % a
int(b) * 0 % 2
int(b) * a
int(b) - a
int(b) - b
int(b) .. a
int(b) / a
int(b) ^ f
int(count(arr, true))
int(div(0, 2))
int(div(0, a))
int(div(1, a))
int(div(1, b))
int(div(2, a))
int(div(2, b))
int(div(a, 1))
int(div(a, b))
int(div(b, a))
int(div(b, b))
int(f * 0.5)
int(f * a)
int(f * b)
int(f ** b)
int(f + 0)
int(f + 0.5)
int(f + 2)
int(f + a)
int(f + b)
int(f + f)
int(f - 0)
int(f - 1)
int(f - a)
int(f - b)
int(f / 0)
int(f / f)
int(f ^ 0)
int(f ^ a)
int(f ^ b)
int(f ^ obj?.a)
int(f)
int(f) != a
int(f) * obj.a
int(f) * obj.fn(b)
int(f) ** b
int(f) .. a
int(f) < obj?.a
int(f) == obj?.b
int(f) >= 2 / a
int(f) ^ b
int(false ? "a" : a)
int(false ? 0 : a)
int(false ? add : 0)
int(first(arr))
int(float(0))
int(float(2))
int(float(a))
int(float(f))
int(get(arr, 0))
int(get(arr, a))
int(get(arr, b))
int(int(1))
int(int(a))
int(int(f))
int(last(arr))
int(len(arr))
int(len(obj))
int(len(s))
int(max(0.5))
int(max(0.5, 0))
int(max(1, b, f))
int(max(b))
int(max(b, f))
int(max(f))
int(min(0))
int(min(0.5))
int(min(2))
int(min(a))
int(min(b))
int(min(f))
int(obj.a + f)
int(obj.a)
int(obj.b / f)
int(obj.b)
int(obj.fn(0))
int(obj.fn(1))
int(obj.fn(a))
int(obj.fn(b))
int(obj.head(0))
int(obj.head(0, obj))
int(obj.head(a))
int(obj.head(a, "a", div))
int(obj.head(a, f))
int(obj.head(a, nil, nil))
int(obj.head(a, obj))
int(obj.head(b))
int(obj.head(b, s, nil, 0))
int(obj.head(f))
int(obj.head(f, s, "a"))
int(obj.obj?.b)
int(obj?.a)
int(obj?.b)
int(obj?.fn(0))
int(obj?.fn(b))
int(obj?.fn(obj.b))
int(obj?.head(0.5, add))
int(obj?.head(2, 1, obj))
int(obj?.head(a))
int(obj?.head(a, 0.5))
int(obj?.head(a, a == b))
int(obj?.head(b))
int(obj?.head(b, add, 0))
int(obj?.head(f))
int(obj?.head(f, a, 1))
int(obj?.obj.a)
int(obj?.obj?.b)
int(ok ? 0 : ok)
int(ok ? 0.5 : add)
int(ok ? 1 : 0.5)
int(ok ? a : f)
int(ok ? b : ok)
int(ok ? f : s)
int(string(a))
int(string(b))
int(toJSON(0))
int(toJSON(a))
int(toJSON(b))
int(true ? 0 : nil)
join(map(arr, s))
keys(obj)
keys(obj) == obj?.head(0, obj)
keys(obj)[a]
keys(ok ? obj : nil)
keys({"b": 1, "c": obj})
last(0 .. b)
last(2 .. 1)
last(["b"])
last([nil, obj, b])
last(a .. 0)
last(a .. 2)
last(a .. a)
last(abs(obj?.head(a, add, div)))
last(arr)
last(arr) * 0 * 0
last(arr) * abs(b)
last(arr) * f * a
last(arr) * obj.head(obj, arr).a
last(arr) < b / 0.5
last(arr) >= b
last(arr[b:a])
last(b + obj?.b)
last(b - obj.b)
last(b .. 2)
last(b .. a)
last(div(0, a) > a ? "c" : false)
last(false ? f : a)
last(false ? f : s)
last(false ? obj : s)
last(false ? s : 1)
last(false ? s : obj)
last(filter(arr, false))
last(filter(arr, true))
last(first(obj?.obj))
last(get(obj.a, obj.b))
last(get(obj.b, ok != 0.5))
last(get(obj.obj, ok))
last(last(obj?.b))
last(map(arr, "a"))
last(map(arr, 0))
last(map(arr, 0.5))
last(map(arr, a))
last(map(arr, add))
last(map(arr, arr))
last(map(arr, b))
last(map(arr, div))
last(map(arr, false))
last(map(arr, ok))
last(map(arr, s))
last(map(obj?.head("b"), b))
last(obj.a)
last(obj.b)
last(obj.b)?.a
last(obj.b)?.obj
last(obj.fn(0))
last(obj.fn(1))
last(obj.fn(a))
last(obj.fn(b))
last(obj.head("a"))
last(obj.head("c", 0, ok))
last(obj.head(0))
last(obj.head(0, nil))
last(obj.head(0, ok, ok))
last(obj.head(0.5))
last(obj.head(2))
last(obj.head(2, add, "a", "a", "a"))
last(obj.head(a))
last(obj.head(a, f))
last(obj.head(a, true, f))
last(obj.head(add, 2))
last(obj.head(arr == div))
last(obj.head(arr, s))
last(obj.head(div))
last(obj.head(div, 0.5, obj, s, 2))
last(obj.head(f, a, s, a))
last(obj.head(obj))
last(obj.head(obj, b, add).a)
last(obj.head(ok))
last(obj.head(ok, false))
last(obj.head(s))
last(obj.head(s, a, ok))
last(obj.head(true))
last(obj.head(true, div))
last(obj.obj)
last(obj.obj)?.b
last(obj.obj.a)
last(obj.obj?.a)
last(obj.obj?.obj.a)
last(obj?.a)
last(obj?.a)?.b
last(obj?.b)
last(obj?.b)?.obj
last(obj?.fn(0))
last(obj?.fn(a))
last(obj?.fn(b))
last(obj?.fn(b))?.b
last(obj?.head("a", 0, 1))
last(obj?.head(0, 0.5, a))
last(obj?.head(1, s, "a", obj))
last(obj?.head(2))
last(obj?.head(a, b))
last(obj?.head(a, obj))
last(obj?.head(add))
last(obj?.head(add, false, 0, div, f))
last(obj?.head(arr))
last(obj?.head(arr, 1))
last(obj?.head(b))
last(obj?.head(div, add, nil, ok))
last(obj?.head(div, nil, ok))
last(obj?.head(f))
last(obj?.head(f, div, s))
last(obj?.head(nil)?.obj)
last(obj?.head(nil, div, ok))
last(obj?.head(obj))
last(obj?.head(obj))?.b
last(obj?.head(obj, a))
last(obj?.head(obj, false))
last(obj?.head(ok, arr, div))
last(obj?.head(ok, div))
last(obj?.head(s))
last(obj?.head(true))
last(obj?.obj)
last(obj?.obj)?.a
last(obj?.obj)?.b
last(obj?.obj.a)
last(obj?.obj.b)
last(obj?.obj?.obj)
last(obj[nil])
last(obj[obj[nil]])
last(ok ? "a" : div)
last(ok ? "c" : a)
last(ok ? 0 : obj)
last(ok ? a : s)
last(ok ? add : arr)
last(ok ? arr : false)
last(ok ? div : 0.5)
last(ok ? div : b)
last(ok ? div : f)
last(ok ? div : true)
last(ok ? f : "c")
last(ok ? f : b)
last(ok ? f : ok)
last(ok ? false : s)
last(ok ? obj : div)
last(ok ? obj : s)
last(ok ? ok : 2)
last(ok ? ok : f)?.obj
last(ok ? true : "c")
last(ok ? true : b)
last(split(s, "c"))
last(splitAfter("a", "a"))
last(true ? a : ok)
last(true ? add : f)
last(true ? div : false)
last(true ? div : ok)
last(true ? obj : 0.5)
last(true ? ok : b)
last(true ? ok : div)
lastIndexOf("a", "a") + f
lastIndexOf("b", s) * a
lastIndexOf(s, ok ? s : 0)
lastIndexOf(s, s)
len("a" + s)
len("a") .. b
len("a") == a
len("a") >= 0 * b
len("b" + "c")
len("b") ** b
len("b") >= f
len("c" + "a")
len(0 .. 0)
len(0 .. a)
len(2 .. 0)
len([s])
len(a .. 1)
len(a .. a)
len(a .. b)
len(add != add or ok ? "c" : div)
len(arr)
len(arr) != f
len(arr) != obj?.obj
len(arr) - f
len(arr) - int(a)
len(arr) / a
len(arr) > f
len(arr) > last(arr)
len(arr) ^ -f
len(arr[a:2])
len(filter(arr, false))
len(filter(arr, ok))
len(filter(arr, true))
len(keys(obj))
len(map(arr, "b"))
len(map(arr, 0))
len(map(arr, 1))
len(map(arr, a))
len(map(arr, arr))
len(map(arr, b))
len(map(arr, f))
len(map(arr, ok))
len(map(arr, s))
len(obj)
len(obj) % b
len(obj) ** f
len(obj) ** obj.b
len(obj) + b
len(obj) .. -b
len(obj) / obj?.a
len(obj) <= f
len(obj) <= min(0)
len(obj) == a
len(obj) > get(arr, a)
len(obj) > obj.a
len(obj) >= a
len(obj) >= count(arr, true)
len(obj.head("a", 2, false))
len(obj.head("b"))
len(obj.head("c", ok))
len(obj.head("c", true, obj, false, obj))
len(obj.head(arr))
len(obj.head(arr, div, b))
len(obj.head(obj))
len(obj.head(obj, 2))
len(obj.head(s))
len(obj.head(s, 0, div, s, add))
len(obj.head(s, nil))
len(obj.obj)
len(obj.obj) > b
len(obj?.head("c", b))
len(obj?.head(arr, nil, f))
len(obj?.head(arr, s, "c", div, "c"))
len(obj?.head(obj))
len(obj?.head(s))
len(obj?.head(s, add))
len(obj?.obj)
len(obj?.obj.obj)
len(obj?.obj?.obj)
len(ok ? arr : a)
len(ok ? arr : obj)
len(s + "c")
len(s + s)
len(s)
len(s) != a
len(s) != obj.b
len(s) ** obj?.a
len(s) + a
len(s) + f
len(s) / f
len(s) >= a
len(s) >= b
len(s) ^ f
len(string(0))
len(string(0.5))
len(string(1))
len(string(div == div))
len(string(f))
len(string(false))
len(string(nil))
len(string(obj))
len(string(ok))
len(string(s))
len(toBase64("c"))
len(toJSON("a"))
len(toJSON("c"))
len(toJSON(a))
len(toJSON(b))
len(toJSON(f))
len(toJSON(nil == ok))
len(toJSON(s))
len(trim("b"))
len(trim(s))
len(trimPrefix("a"))
len(trimPrefix(s))
len(trimSuffix("a"))
len(trimSuffix(s))
len(true ? arr : add)
len(true ? arr : obj)
len(upper("b"))
len(values(obj))
len({"a": arr, "b": a})
lower("b") != obj.head(f, ok)
lower("b") contains s
lower("b") matches "c" ? f : b
lower("c" + s)
lower(false ? 0 : "c")
lower(obj.head(s))
lower(obj.head(s, 2, s, "c"))
lower(obj?.head(s))
lower(s + "b")
lower(s + "c")
lower(s)
lower(s) contains s
lower(s) in obj?.obj
lower(s[b:0])
lower(string("a"))
lower(string(0))
lower(string(0.5))
lower(string(2))
lower(string(a))
lower(string(b))
lower(string(f))
lower(string(false))
lower(string(nil))
lower(string(ok))
lower(string(s))
lower(string(true))
lower(toBase64("b"))
lower(toBase64("c"))
lower(toBase64(s))
lower(toJSON("b"))
lower(toJSON("c"))
lower(toJSON(a))
lower(toJSON(f))
lower(toJSON(ok))
lower(toJSON(s))
lower(trim("a"))
lower(trim(s))
lower(trimPrefix("a"))
lower(trimPrefix("c"))
lower(trimPrefix(s))
lower(trimSuffix(s))
lower(upper(s))
map(0 .. 0, a)
map(0 .. 0, b)
map(0 .. 1, #)
map(0 .. a, !ok)
map(0 .. a, arr)
map(0 .. a, ok)
map(0 .. a, s)
map(0 .. b, #)
map(1 .. 0, count(arr, ok))
map(1 .. 1, b)
map(1 .. a, #)
map(1 .. b, #)
map(1 .. b, obj.head(div))
map(2 .. 1, b)
map(2 .. 2, map(arr, a))
map(2 .. 2, true ? obj : a)
map(2 .. b, arr)
map([a], add)
map([nil], div)
map([obj, s], add)
map([ok], #)
map([s], arr)
map([true, obj, s], not ok)
map(a .. 0, #)
map(a .. 0, arr)
map(a .. 0, b)
map(a .. 1, f)
map(a .. a, #)
map(a .. a, div(0, a))
map(a .. a, s)
map(a .. b, b)
map(a .. b, f)
map(a .. obj?.obj?.a, f != #)
map(arr, !any(arr, ok))
map(arr, "a" startsWith "b")
map(arr, "b")[b]
map(arr, # * #)
map(arr, # + #)
map(arr, # + b)
map(arr, #)
map(arr, -#)
map(arr, -0)
map(arr, -1)
map(arr, -a)
map(arr, -b)
map(arr, -f)
map(arr, 0 != nil)
map(arr, 0 * 0)
map(arr, 0 * 0.5 > b)
map(arr, 0 + a)
map(arr, 0 >= 0)
map(arr, 0 ^ 0)
map(arr, 0 in arr)
map(arr, 0) != arr
map(arr, 0.5 != nil)
map(arr, 0.5 + 2)
map(arr, 0.5 - b)
map(arr, 0.5 <= b)
map(arr, 0.5 > b)
map(arr, 0.5 ^ a)
map(arr, 0.5 ^ f)
map(arr, 0.5) == arr
map(arr, 0.5) == obj.head(1, a)
map(arr, 1 + b)
map(arr, 1 - 0)
map(arr, 1 / a)
map(arr, 1 == b)
map(arr, 2 != nil)
map(arr, 2 * a)
map(arr, 2 ** 0.5)
map(arr, 2 - f)
map(arr, 2 ^ 2)
map(arr, a != nil)
map(arr, a % 2)
map(arr, a % a <= #)
map(arr, a * 0.5)
map(arr, a ** a)
map(arr, a + b)
map(arr, a - f)
map(arr, a / f)
map(arr, a < 2)
map(arr, a > 0)
map(arr, a > a)
map(arr, a > b)
map(arr, a ^ b)
map(arr, a)
map(arr, abs(0))
map(arr, add != add)
map(arr, add != nil)
map(arr, add == add)
map(arr, add(#, #))
map(arr, add(0, a))
map(arr, add(0, b))
map(arr, add(2, b))
map(arr, add)
map(arr, add)[a]
map(arr, any(arr, ok))
map(arr, arr)
map(arr, b != 0.5)
map(arr, b * 0.5)
map(arr, b * b)
map(arr, b + f)
map(arr, b - 0.5)
map(arr, b / f)
map(arr, b <= 0.5)
map(arr, b <= 2)
map(arr, b <= a)
map(arr, b > 1)
map(arr, b > a)
map(arr, b >= a)
map(arr, b ^ f)
map(arr, b)
map(arr, b) != obj.b
map(arr, b)[obj.b]
map(arr, count(arr, ok))
map(arr, count(arr, true))
map(arr, div == add)
map(arr, div(1, 1))
map(arr, div(1, 2))
map(arr, div(b, b))
map(arr, div)
map(arr, div) == arr
map(arr, div)[obj.b]
map(arr, div)[obj?.a]
map(arr, f != b)
map(arr, f != nil)
map(arr, f ** 2)
map(arr, f + a)
map(arr, f + f)
map(arr, f - 0.5)
map(arr, f - f)
map(arr, f / f)
map(arr, f < b)
map(arr, f <= 0)
map(arr, f <= a)
map(arr, f == a)
map(arr, f == nil)
map(arr, f > a)
map(arr, f > f)
map(arr, f >= a)
map(arr, f ^ 0.5)
map(arr, f ^ 1)
map(arr, f)
map(arr, false ? 0 : f)
map(arr, false ? 0.5 : arr)
map(arr, false ? div : a)
map(arr, false) == obj.obj
map(arr, filter(arr, ok))
map(arr, float(1))
map(arr, float(b))
map(arr, get(arr, 0))
map(arr, get(obj, s))
map(arr, int(f))
map(arr, len("b"))
map(arr, lower(s))
map(arr, map(arr, 0))
map(arr, map(arr, 0.5))
map(arr, map(arr, arr))
map(arr, map(arr, true))
map(arr, max(f))
map(arr, min(0))
map(arr, min(2))
map(arr, min(b))
map(arr, min(f))
map(arr, nil != a)
map(arr, nil != div)
map(arr, nil == obj)
map(arr, not ok)
map(arr, not true)
map(arr, obj != nil)
map(arr, obj != obj?.b)
map(arr, obj)
map(arr, obj) != arr ? false : nil
map(arr, obj) != obj.b
map(arr, obj)[obj.a]
map(arr, obj)[obj?.b]
map(arr, obj.a)
map(arr, obj.b)
map(arr, obj.c)
map(arr, obj.head(add, nil))
map(arr, obj.head(arr))
map(arr, obj.head(div))
map(arr, obj.head(ok, f))
map(arr, obj.obj)
map(arr, obj.obj?.b)
map(arr, obj?.a)
map(arr, obj?.b)
map(arr, obj?.fn(0))
map(arr, obj?.fn(a))
map(arr, obj?.head("a", b, obj))
map(arr, obj?.head(0))
map(arr, obj?.head(1))
map(arr, obj?.head(add, ok, f))
map(arr, obj?.head(arr))
map(arr, obj?.head(b))
map(arr, obj?.head(s))
map(arr, obj?.obj)
map(arr, obj?.obj.b)
map(arr, obj?.obj?.a)
map(arr, ok ? arr : s)
map(arr, ok)
map(arr, ok)[a]
map(arr, ok)[b]
map(arr, one(arr, ok))
map(arr, repeat(s, a))
map(arr, s + "a")
map(arr, s < s)
map(arr, s > s)
map(arr, s endsWith s)
map(arr, s in obj)
map(arr, s)
map(arr, s) != obj.a
map(arr, s) != obj?.obj
map(arr, s)[obj?.a]
map(arr, s)[ok ? f : ok:a]
map(arr, split(s, s))
map(arr, string(arr))
map(arr, toJSON(a))
map(arr, trimPrefix(s))
map(arr, true || ok)
map(arr[b:a], ok)
map(arr[b:b], b)
map(arr[b:b], ok)
map(b .. 0, b / b)
map(b .. 1, #)
map(b .. 1, s)
map(b .. a, arr != arr)
map(b .. a, b)
map(b .. a, f > 0.5)
map(b .. a, obj?.fn(ok, add))
map(b .. a, s)
map(b .. b, #)
map(b .. b, ok)
map(b .. b, string(arr))
map(div(1, b) <= a ? arr : ok, #)
map(false ? 0 : "a", obj?.obj)
map(false ? 0 : obj, b)
map(false ? 0.5 : arr, #)
map(false ? a : arr, s)
map(false ? b : "b", #)
map(false ? div : arr, 2 * f)
map(false ? obj : s, a)
map(false ? s : arr, #)
map(filter(arr, false), obj?.fn(nil))
map(filter(arr, false), s)
map(filter(arr, ok), 1 >= b)
map(filter(arr, ok), 2 == nil)
map(filter(arr, ok), a)
map(filter(arr, ok), arr)
map(filter(arr, ok), div)
map(filter(arr, ok), obj)
map(filter(arr, ok), s)
map(filter(arr, true), #)
map(keys(obj), #)
map(keys(obj), b)
map(map(arr, "a"), arr)
map(map(arr, "a"), b)
map(map(arr, "b"), f)
map(map(arr, "b"), s)
map(map(arr, "c"), #)
map(map(arr, 0), #)
map(map(arr, 0), obj.head(ok))
map(map(arr, 0.5), #)
map(map(arr, 0.5), a)
map(map(arr, 0.5), arr)
map(map(arr, 0.5), f)
map(map(arr, 1), #)
map(map(arr, 1), arr)
map(map(arr, 1), b)
map(map(arr, a), #)
map(map(arr, a), arr)
map(map(arr, add), "a" == nil)
map(map(arr, add), #)
map(map(arr, add), b)
map(map(arr, add), obj)
map(map(arr, arr), #)
map(map(arr, arr), div)
map(map(arr, arr), obj)
map(map(arr, arr), obj?.b)
map(map(arr, arr), ok)
map(map(arr, b), #)
map(map(arr, b), add)
map(map(arr, b), f)
map(map(arr, b), map(arr, ok))
map(map(arr, b), obj)
map(map(arr, b), ok)
map(map(arr, b), s)
map(map(arr, div), !true)
map(map(arr, div), #)
map(map(arr, div), add(b, 1))
map(map(arr, div), add)
map(map(arr, div), obj)
map(map(arr, div), obj?.a)
map(map(arr, div), split(s, s))
map(map(arr, f), #)
map(map(arr, f), s)
map(map(arr, false), #)
map(map(arr, false), add)
map(map(arr, false), arr)
map(map(arr, obj), 0 >= a)
map(map(arr, obj), a in arr)
map(map(arr, obj), a)
map(map(arr, obj), add)
map(map(arr, obj), b)
map(map(arr, obj), ok)
map(map(arr, ok), #)
map(map(arr, s), #)
map(map(arr, s), f)
map(map(arr, s), obj)
map(map(arr, true), #)
map(map(arr, true), add)
map(map(arr, true), f > f)
map(map(arr, true), f ^ 1)
map(map(arr, true), obj)
map(obj.head("a"), #)
map(obj.head("a", a, 0), #)
map(obj.head("a", add, ok), b)
map(obj.head("a", obj, "b", obj), #)
map(obj.head("b"), a)
map(obj.head("b"), ok)
map(obj.head("b", nil, a, div, true), obj.a)
map(obj.head("c"), b * 1)
map(obj.head("c", 1, div, "a", f), #)
map(obj.head("c", arr), #)
map(obj.head("c", b), 0 * b)
map(obj.head("c", b), arr)
map(obj.head(arr), #)
map(obj.head(arr), a)
map(obj.head(arr), add)
map(obj.head(arr), obj.obj)
map(obj.head(arr), s)
map(obj.head(arr, 0.5), a)
map(obj.head(arr, arr, 0), a)
map(obj.head(arr, false), arr)
map(obj.head(arr, ok), #)
map(obj.head(obj), a .. 0)
map(obj.head(obj), a)
map(obj.head(obj), arr)
map(obj.head(obj), f)
map(obj.head(obj), obj)
map(obj.head(obj, a), 1 .. b)
map(obj.head(obj, div), obj.obj)
map(obj.head(s), #)
map(obj.head(s), 0 + f)
map(obj.head(s), a)
map(obj.head(s), arr)
map(obj.head(s), b % a)
map(obj.head(s), b)
map(obj.head(s), f)
map(obj.head(s), ok)
map(obj.head(s), s)
map(obj.head(s, add, div), f)
map(obj.head(s, b, f, ok, f), #)
map(obj.head(s, ok, 0), a / 0.5)
map(obj.obj, !false)
map(obj.obj, "b" startsWith s)
map(obj.obj, "c" > s)
map(obj.obj, -0.5)
map(obj.obj, -obj?.b)
map(obj.obj, 0 == 1)
map(obj.obj, 0.5 >= b)
map(obj.obj, 2 + a)
map(obj.obj, 2 .. b)
map(obj.obj, a)
map(obj.obj, add)
map(obj.obj, arr)
map(obj.obj, b ** b)
map(obj.obj, b == 2)
map(obj.obj, b)
map(obj.obj, div(0, a))
map(obj.obj, div)
map(obj.obj, f)
map(obj.obj, false || true)
map(obj.obj, not false)
map(obj.obj, obj)
map(obj.obj, obj.a)
map(obj.obj, obj.b)
map(obj.obj, obj.fn(a))
map(obj.obj, obj.head(a, obj, f, f))
map(obj.obj, obj?.a)
map(obj.obj, obj?.head(f, add, s))
map(obj.obj, obj?.head(nil, true))
map(obj.obj, obj?.head(obj, arr))
map(obj.obj, ok)
map(obj.obj, s > s)
map(obj.obj, s matches s)
map(obj.obj, s startsWith s)
map(obj.obj, s)
map(obj.obj, string(0.5))
map(obj.obj, toBase64("c"))
map(obj.obj, toJSON(ok))
map(obj.obj.obj, a)
map(obj.obj?.obj, b)
map(obj?.head("a"), a)
map(obj?.head("a"), add)
map(obj?.head("a"), obj)
map(obj?.head("b"), add)
map(obj?.head("b", a, arr, ok, true), add)
map(obj?.head("b", b), obj)
map(obj?.head("c"), #)
map(obj?.head("c"), ok && ok)
map(obj?.head("c", add, f, "b"), #)
map(obj?.head("c", arr, true), f ^ 0)
map(obj?.head("c", false), #)
map(obj?.head(arr), a)
map(obj?.head(arr), s)
map(obj?.head(arr, "b"), #)
map(obj?.head(arr, 2), obj)
map(obj?.head(arr, add), b)
map(obj?.head(arr, b, nil, arr), toJSON(ok))
map(obj?.head(arr, true, f), s)
map(obj?.head(obj), -a)
map(obj?.head(obj), b)
map(obj?.head(obj), obj.b)
map(obj?.head(obj), ok)
map(obj?.head(obj, "c"), s)
map(obj?.head(obj, 0.5), add)
map(obj?.head(obj, a, false), arr)
map(obj?.head(obj, f, add, s, true), s >= "b")
map(obj?.head(obj, ok, b, a), div)
map(obj?.head(s), b > 0.5)
map(obj?.head(s), b)
map(obj?.head(s), f)
map(obj?.head(s), obj)
map(obj?.head(s, "a", arr, obj), arr)
map(obj?.head(s, b), obj?.a)
map(obj?.head(s, obj), #)
map(obj?.head(s, ok), a / 2)
map(obj?.obj, -2)
map(obj?.obj, 0 + a)
map(obj?.obj, 0 == f)
map(obj?.obj, 1 != 0)
map(obj?.obj, 1 .. 0)
map(obj?.obj, a != nil)
map(obj?.obj, a + 0)
map(obj?.obj, a)
map(obj?.obj, abs(0))
map(obj?.obj, add)
map(obj?.obj, arr)
map(obj?.obj, b > a)
map(obj?.obj, b > f)
map(obj?.obj, b)
map(obj?.obj, count(arr, false))
map(obj?.obj, count(arr, true))
map(obj?.obj, div == add)
map(obj?.obj, div)
map(obj?.obj, f * a)
map(obj?.obj, f)
map(obj?.obj, first(arr))
map(obj?.obj, len(s))
map(obj?.obj, max(f, f * a))
map(obj?.obj, nil != add)
map(obj?.obj, nil == obj?.a)
map(obj?.obj, obj)
map(obj?.obj, obj.a)
map(obj?.obj, obj.b)
map(obj?.obj, obj.fn(0))
map(obj?.obj, obj.head(b))
map(obj?.obj, obj.obj)
map(obj?.obj, obj?.a)
map(obj?.obj, obj?.b)
map(obj?.obj, obj?.fn(0))
map(obj?.obj, obj?.head(ok, 0))
map(obj?.obj, obj?.obj)
map(obj?.obj, ok == true)
map(obj?.obj, ok ? 0.5 : s)
map(obj?.obj, ok ? false : ok)
map(obj?.obj, ok)
map(obj?.obj, s)
map(obj?.obj, toBase64(s))
map(obj?.obj, true ? 0 : arr)
map(obj?.obj.obj, a)
map(obj?.obj.obj, add)
map(obj?.obj.obj, div)
map(obj?.obj.obj, obj.a)
map(obj?.obj.obj, ok)
map(ok ? arr : "b", 1 + a)
map(ok ? arr : nil, a)
map(ok ? obj : "c", ok)
map(ok ? obj : 0, arr)
map(ok ? obj : add, div(b, a))
map(ok ? obj : arr, arr)
map(ok ? s : arr, b)
map(ok ? s : div, #)
map(ok ? s : div, add)
map(split(s, "c"), #)
map(true ? "a" : obj, #)
map(true ? "b" : div, s)
map(true ? arr : arr, #)
map(true ? arr : f, abs(0.5))
map(true ? arr : nil, arr)
map(true ? obj : f, obj.head(0, true, 0.5, s))
map(true ? s : 0, a)
map(values(obj), f)
map(values(obj), filter(arr, ok))
max(-0)
max(-0.5)
max(-2)
max(-a)
max(-a, 0 + a)
max(-b)
max(-f)
max(0 % 2, b)
max(0 % a)
max(0 ** 0.5)
max(0 ** 2)
max(0 ** b)
max(0 ** f)
max(0 + 0.5)
max(0 + a)
max(0 - 2)
max(0 - a)
max(0 / 0)
max(0 / b)
max(0 / f)
max(0 ^ b)
max(0 ^ f)
max(0) != obj.head(false, f)
max(0) + b
max(0) .. a
max(0) <= b
max(0) == b
max(0) > b != ok
max(0, 0) != f
max(0, a) < f
max(0, b) * f
max(0.5 * f)
max(0.5 - a)
max(0.5 - f)
max(0.5 ^ 0)
max(0.5) != obj?.a
max(0.5) + f
max(0.5) <= 0 * b
max(0.5) ^ obj.head(b)
max(0.5, 2) != obj?.b
max(0.5, b) < b ? div : 2
max(0.5, b, 0.5) < obj?.a
max(1 % 1)
max(1 * a)
max(1 ** f)
max(1 - a)
max(1 / 2)
max(1 / f)
max(1 ^ f)
max(1) .. b
max(1) / int(f)
max(1) / max(b, a, 0.5, 2)
max(1) > 0.5 ? add : ok
max(2 * 2)
max(2 * f)
max(2 + f)
max(2 - 0.5)
max(2 / a)
max(2 / f)
max(2 ^ 1)
max(2 ^ f)
max(2) * b
max(2) - 0 % a
max(2) ^ a ^ 0
max(2, b) != b
max(a % a)
max(a % b)
max(a * 0.5)
max(a * f)
max(a ** a)
max(a ** f)
max(a + 0.5)
max(a + 1)
max(a + 1, f)
max(a + a)
max(a - 0)
max(a - 1)
max(a - f)
max(a / a, a)
max(a / obj?.b)
max(a / obj?.head(0.5, s, div))
max(a ^ 0)
max(a ^ f)
max(a)
max(a) - b
max(a) - div(0, b)
max(a) .. a
max(a) < f
max(a) <= b
max(a) <= f
max(a) == b ? 0 : nil
max(a) > f
max(a, -b)
max(a, 0) - b
max(a, 1) ^ b ** f
max(a, a)
max(a, a, b)
max(a, b)
max(a, f)
max(abs(a))
max(abs(arr[b]))
max(abs(b))
max(abs(f ^ 0.5))
max(add(0, 0))
max(add(0, b))
max(add(1, 1))
max(add(1, 2))
max(add(2, a))
max(add(a, 1))
max(add(a, 2))
max(add(a, a))
max(add(b - a, obj.a))
max(add(b, b))
max(arr[0])
max(arr[0], a)
max(arr[1])
max(arr[a])
max(arr[b])
max(b % b)
max(b * 0)
max(b * a)
max(b * f)
max(b ** 0)
max(b ** 0.5)
max(b ** 2)
max(b ** a)
max(b ** f)
max(b + a)
max(b - b)
max(b - f)
max(b / 0)
max(b / 2)
max(b / b)
max(b / f)
max(b ^ 0)
max(b ^ 0.5)
max(b ^ 1)
max(b ^ b)
max(b ^ f)
max(b)
max(b) != 0.5 ** 0
max(b) * f
max(b) ** a
max(b) < b
max(b) == div(b, b)
max(b) == max(b)
max(b, 2) ^ b
max(b, a)
max(b, a) >= float(f)
max(b, b)
max(b, f)
max(b, float(a))
max(count(arr, true))
max(div(0, 2))
max(div(0, a))
max(div(1, 1))
max(div(1, a))
max(div(1, b))
max(div(a, 2))
max(div(a, b))
max(div(b, 2))
max(div(b, a))
max(div(b, b))
max(f * 0)
max(f * a)
max(f * b)
max(f * b, a)
max(f * f)
max(f ** a)
max(f ** obj.b)
max(f + 0)
max(f + a)
max(f + b)
max(f - 0)
max(f - 1)
max(f - 2)
max(f - b)
max(f - f)
max(f / 0)
max(f / 0.5)
max(f / 1)
max(f / a)
max(f / b)
max(f / f)
max(f ^ a)
max(f ^ b)
max(f ^ f)
max(f ^ f) ^ b
max(f)
max(f) != obj.a
max(f) * a
max(f) - int(0)
max(f) / obj?.head(a, ok)
max(f, 2 / f)
max(f, a)
max(f, b)
max(f, f)
max(false ? 0 : b)
max(false ? b : b)
max(float(0.5))
max(float(2))
max(float(b))
max(float(f))
max(get(arr, 0), a)
max(get(arr, a))
max(get(arr, b))
max(int(0))
max(int(0.5))
max(int(a))
max(int(b))
max(last(arr))
max(len("a"))
max(len("c"), b)
max(len(obj.head(s)))
max(max(0, f, b, a))
max(max(2))
max(max(a, 0.5))
max(max(b))
max(max(b, 2, f))
max(max(f))
max(min(0.5))
max(min(2))
max(min(a))
max(min(a, b))
max(min(b, 0))
max(min(f))
max(true ? a : 0)
min(-(0.5 ^ b))
min(-0)
min(-2)
min(-a)
min(-b)
min(-f)
min(-f, a)
min(0 % 2)
min(0 % b)
min(0 * a)
min(0 * b, b)
min(0 ** a)
min(0 ** b)
min(0 ** f, f)
min(0 + 0)
min(0 - b)
min(0 / 1)
min(0 / 2)
min(0 / f)
min(0 ^ 0)
min(0) % b
min(0) % obj.b
min(0) * obj?.b
min(0) + b
min(0) - b
min(0) / a
min(0) / obj?.head(a)
min(0) > a / b
min(0) ^ get(arr, a)
min(0, 2) ^ f
min(0.5 * 0)
min(0.5 ** a)
min(0.5 - f)
min(0.5 / a)
min(0.5 / b)
min(0.5 / f)
min(0.5 ^ 0)
min(0.5 ^ 1)
min(0.5 ^ a)
min(0.5) != f
min(0.5) * a
min(0.5) ** a
min(0.5) - f
min(0.5) > a
min(1 % b)
min(1 * f)
min(1 ** b)
min(1 + 1)
min(1 + a)
min(1 - a)
min(1 / a)
min(1 / b)
min(1 ^ 0)
min(1) .. obj?.b
min(1) == obj.obj
min(1) >= f ? b : arr
min(1) ^ b
min(2 % b + a)
min(2 % b)
min(2 * b)
min(2 ** 0)
min(2 ** f)
min(2 + 0.5)
min(2 - b)
min(2 ^ a)
min(2) ** f
min(a % 1)
min(a % a)
min(a % b)
min(a * a)
min(a * b, int(0))
min(a * f)
min(a ** 0)
min(a ** a, b)
min(a ** b)
min(a ** f)
min(a - 2)
min(a - a)
min(a - f)
min(a / a)
min(a / b)
min(a ^ 0.5)
min(a ^ b)
min(a ^ obj.a)
min(a)
min(a) != f
min(a) % a
min(a) ** f
min(a) - obj.b
min(a) / b
min(a) < a / 0
min(a) == a
min(a) > b
min(a) > obj?.a
min(a) >= a ^ b
min(a) >= obj.head(f, nil)
min(a) ^ a
min(a) ^ f
min(a, 0.5 / a)
min(a, 2) ^ f
min(a, a ** f)
min(a, a)
min(a, a) > f ** 0.5
min(a, b)
min(a, b) != f / a
min(abs(0))
min(abs(a))
min(abs(b))
min(add(0, 0))
min(add(0, 1))
min(add(0, 2))
min(add(0, a))
min(add(2, b))
min(add(a, a))
min(add(a, a), b)
min(add(a, b))
min(add(b, 0))
min(add(b, 1))
min(add(b, a))
min(add(b, b))
min(arr[0])
min(arr[1])
min(arr[a])
min(arr[b])
min(b % a)
min(b * b)
min(b * f)
min(b ** 0)
min(b ** 0.5)
min(b ** a)
min(b + 1)
min(b + a)
min(b + b)
min(b + f)
min(b - 0)
min(b - 0.5)
min(b - a)
min(b / f)
min(b / obj.a)
min(b ^ a)
min(b ^ f)
min(b)
min(b) * obj.a
min(b) * obj.head(f, b)
min(b) ** a
min(b) + div(0, a)
min(b) .. obj.a
min(b) < -f
min(b) <= a / f
min(b) <= len(s)
min(b) == obj.a
min(b) ^ b
min(b, 0) >= b
min(b, 0, f) - b
min(b, 1) != obj?.head(f)
min(b, a - a)
min(b, a)
min(b, a) % obj.b
min(b, a) ^ 0.5 ^ 0.5
min(b, f)
min(count(arr, ok))
min(count(map(arr, add), f != nil))
min(div(0, a) / f)
min(div(0, b))
min(div(1, a))
min(div(2, a))
min(div(2, b))
min(div(a, 1))
min(div(a, 2))
min(div(a, b))
min(div(a, b), a)
min(div(b, 2))
min(div(b, b))
min(f * a, a)
min(f ** 0.5)
min(f ** a)
min(f ** b)
min(f ** f)
min(f - 0.5)
min(f - a)
min(f / 0)
min(f / a)
min(f / b)
min(f / f)
min(f ^ 0)
min(f ^ 0.5)
min(f ^ b)
min(f)
min(f) * a ^ f
min(f) ** obj?.head(b, nil, true, 2, add)
min(f) / obj.a
min(f) > f
min(f, a)
min(f, f)
min(first(arr))
min(float(0))
min(float(b))
min(get(arr, 0))
min(get(arr, 1))
min(get(arr, 2))
min(get(arr, a))
min(get(arr, b))
min(indexOf(s, s))
min(int(0))
min(int(1))
min(int(a))
min(int(b))
min(last(arr))
min(len("c"))
min(len(arr))
min(len(obj))
min(len(obj?.obj))
min(len(s))
min(len(s), a)
min(max(a))
min(max(b))
min(max(b, 0.5))
min(max(f))
min(min(1))
min(min(a))
min(min(b, 0))
min(min(f))
min(min(int(f), b))
min(ok ? b : 2)
min(ok ? b : a)
min(true ? 2 : 2)
nil != "a" == ok
nil != "a" || b <= 0
nil != "c" or ok
nil != 0 && obj.a
nil != 0 || ok
nil != 0.5 != ok
nil != a and ok
nil != a or ok
nil != add && b > 0
nil != add or obj.b
nil != arr != obj.obj
nil != arr or ok
nil != b != obj.obj
nil != b && obj.b
nil != b and ok ? ok : add
nil != b || obj.fn(s, ok).b
nil != div != obj?.head(ok)
nil != div != ok
nil != div and ok
nil != f and f < 2
nil != f or obj?.obj
nil != false or obj.obj
nil != obj != (ok or ok)
nil != obj && "c" > "b"
nil != obj or ok
nil != obj.a
nil != obj.b
nil != obj.obj
nil != obj.obj.a
nil != obj.obj.obj
nil != obj?.a
nil != obj?.b
nil != obj?.b .. b
nil != obj?.obj
nil != obj?.obj?.b
nil != obj?.obj?.obj
nil != ok ? obj.a : add
nil != s and 0.5 == 2
nil != s or obj?.fn(1)
nil != s or ok
nil != true ? ok != ok : int("c")
nil == "a" or nil != false
nil == "c" and obj.fn("b", s, a)
nil == a || 2 != b
nil == a || ok
nil == add != obj?.head(nil, add)
nil == add != obj?.obj
nil == add && obj.b
nil == add and obj == nil
nil == arr != true ? b : b
nil == arr && obj.b
nil == arr && obj?.head(obj, nil, a)
nil == arr and obj.head(div(arr, a)?.head(add?.fn(nil), arr ? "c" : 0), 0 matches a.obj)
nil == arr and ok
nil == div || any(arr, true)
nil == f != obj.a
nil == f && obj.a
nil == f and obj.obj
nil == false and nil == arr
nil == false and not false
nil == nil || 0 >= 0
nil == obj && obj?.obj
nil == obj ? f / b : obj
nil == obj and ok
nil == obj || obj?.a
nil == obj || ok
nil == obj.a
nil == obj.b
nil == obj.head(add)
nil == obj.obj
nil == obj.obj.obj
nil == obj?.a
nil == obj?.b
nil == obj?.obj
nil == obj?.obj.a
nil == obj?.obj.obj
nil == obj[s]
nil == ok && !true
nil == ok && obj?.fn(b)
nil == ok ? s : b
nil == ok and obj.obj
nil == ok and obj?.head("c")
nil == ok or ok
nil == ok || obj.a
nil == ok || ok
nil == s != ok
nil == s and obj?.fn(true, 1)
nil == s or ok
nil == true and {"b": arr}.b
nil in arr && obj.a
nil in arr == ok
nil in arr ? 2 .. 2 : obj
nil in obj && ok
nil in obj or 2 < 0
nil in obj.obj
nil in obj?.head(obj)
nil in obj?.obj
nil in obj?.obj?.obj
none(0 .. a, ok)
none(1 .. b, ok)
none([true], ok)
none(a .. 0, obj.a)
none(a .. a, "b" > "b")
none(a .. a, nil == obj)
none(arr, "a" < s)
none(arr, "a" contains s)
none(arr, "a" startsWith s)
none(arr, 0 < 1)
none(arr, 0 <= b)
none(arr, 0 == nil)
none(arr, 0 > 0.5)
none(arr, 0 >= 0)
none(arr, 0 >= b)
none(arr, 0.5 < b)
none(arr, 0.5 == b)
none(arr, 0.5 >= 0)
none(arr, 1 != a)
none(arr, 1 <= b)
none(arr, 1 in arr)
none(arr, 2 <= a)
none(arr, a != 0)
none(arr, a != 2)
none(arr, a != a)
none(arr, a != nil)
none(arr, a < 0)
none(arr, a < f)
none(arr, a <= 0.5)
none(arr, a == nil)
none(arr, a in arr)
none(arr, add != add)
none(arr, add == nil)
none(arr, all(arr, ok))
none(arr, arr != arr)
none(arr, b != get(arr, 0))
none(arr, b < 0)
none(arr, b < f)
none(arr, b == a)
none(arr, b >= a)
none(arr, div != obj.obj)
none(arr, div == div)
none(arr, f != 0)
none(arr, f != nil)
none(arr, f == 0.5)
none(arr, f > f)
none(arr, false) and ok
none(arr, nil != add)
none(arr, nil != b)
none(arr, nil != f)
none(arr, nil == 0)
none(arr, nil == arr)
none(arr, nil == f)
none(arr, nil == obj)
none(arr, none(arr, false))
none(arr, not ok)
none(arr, obj.head(false, "b", nil))
none(arr, obj?.head(false))
none(arr, obj?.obj == (true and false))
none(arr, ok ? true : b)
none(arr, ok and false)
none(arr, ok or ok)
none(arr, ok || false)
none(arr, ok)
none(arr, ok) && obj.obj
none(arr, ok) && obj?.obj
none(arr, ok) == obj.b
none(arr, ok) == obj?.obj
none(arr, ok) == ok
none(arr, s != "b")
none(arr, s != "c")
none(arr, s != s)
none(arr, s endsWith "c")
none(arr, s matches s)
none(arr, s startsWith "c")
none(arr, true) != obj.b
none(arr, true) and obj.b
none(arr, true) or obj.head(s, arr)
none(b .. 0, obj.a)
none(b .. 2, ok)
none(false ? 0.5 : arr, s <= "b")
none(filter(arr, ok), any(arr, ok))
none(filter(arr, ok), ok and false)
none(keys(obj), nil == obj)
none(map(arr, "b"), f < b)
none(map(arr, add), 0 == f)
none(map(arr, add), b > a)
none(map(arr, b), ok)
none(map(arr, f), ok)
none(map(arr, false), #)
none(map(arr, false), ok)
none(map(arr, obj), s > s)
none(map(arr, ok), "b" <= "b")
none(map(arr, ok), #)
none(map(arr, s), b != nil)
none(map(arr, s), ok && ok)
none(map(arr, s), ok || ok)
none(obj.head(arr), nil == s)
none(obj.head(obj), s matches "b")
none(obj.head(obj, true), ok)
none(obj.head(s), !ok)
none(obj.obj, 1 < f)
none(obj.obj, b != a)
none(obj.obj, b == b)
none(obj.obj, nil != arr)
none(obj.obj, ok and true)
none(obj.obj, ok)
none(obj.obj, s endsWith s)
none(obj.obj, s matches s)
none(obj.obj, true ? ok : "c")
none(obj?.head("a"), 1 <= 0.5)
none(obj?.head("b", nil), ok)
none(obj?.head("b", true), f < f)
none(obj?.head(obj, b, obj), ok)
none(obj?.head(obj, nil), ok)
none(obj?.obj, !ok)
none(obj?.obj, 1 > b)
none(obj?.obj, a != f)
none(obj?.obj, a > f)
none(obj?.obj, div != add)
none(obj?.obj, f < 0.5)
none(obj?.obj, f >= f)
none(obj?.obj, ok != false)
none(obj?.obj, ok)
none(obj?.obj, s contains "b")
none(obj?.obj, s startsWith s)
none(obj?.obj, true == false)
none(obj?.obj.obj, ok)
none(ok ? "b" : false, ok == ok)
not !!true
not !(nil == 0.5)
not !all(arr, true)
not !false
not !ok
not !true
not ("a" != "b")
not ("a" != nil)
not ("a" <= "c")
not ("a" <= s)
not ("a" == "a")
not ("a" == "c")
not ("a" == nil)
not ("a" > s)
not ("a" >= s)
not ("a" contains "a")
not ("a" contains "b")
not ("a" contains s)
not ("a" endsWith "b")
not ("a" endsWith s)
not ("a" in obj)
not ("a" matches "c")
not ("a" startsWith "a")
not ("a" startsWith "b")
not ("b" != "a")
not ("b" != nil)
not ("b" <= "a")
not ("b" <= "c")
not ("b" <= s)
not ("b" == "a")
not ("b" == "c")
not ("b" == nil)
not ("b" == s)
not ("b" > s)
not ("b" >= s)
not ("b" contains "a")
not ("b" contains "b")
not ("b" contains s)
not ("b" endsWith "a")
not ("b" endsWith "b")
not ("b" endsWith s)
not ("b" in obj)
not ("b" matches "b")
not ("b" startsWith "b")
not ("b" startsWith s)
not ("c" != "a")
not ("c" != s)
not ("c" <= "c")
not ("c" == "a")
not ("c" > "b")
not ("c" >= "a")
not ("c" >= s)
not ("c" contains "a")
not ("c" contains "c")
not ("c" contains s)
not ("c" endsWith s)
not ("c" in obj)
not ("c" matches "a")
not ("c" matches "b")
not ("c" matches s)
not ("c" startsWith s)
not (-0.5 < a)
not (0 != 0)
not (0 != 2)
not (0 != a)
not (0 != b)
not (0 != f)
not (0 != nil)
not (0 < 0.5)
not (0 < 2)
not (0 < a)
not (0 < b)
not (0 < f)
not (0 <= 0)
not (0 <= 0.5)
not (0 <= 1)
not (0 <= a)
not (0 <= b)
not (0 <= f)
not (0 == 0.5)
not (0 == 1)
not (0 == 2)
not (0 == a)
not (0 == f)
not (0 == nil)
not (0 > 0)
not (0 > 0.5)
not (0 > 2)
not (0 > a)
not (0 > b)
not (0 > f)
not (0 >= 0)
not (0 >= 0.5)
not (0 >= 1)
not (0 >= 2)
not (0 >= a)
not (0 >= b)
not (0 >= f)
not (0 in arr)
not (0.5 != 0)
not (0.5 != 0.5)
not (0.5 != a)
not (0.5 != b)
not (0.5 != f)
not (0.5 != nil)
not (0.5 < 0.5)
not (0.5 < a)
not (0.5 < b)
not (0.5 < f)
not (0.5 <= 0)
not (0.5 <= a)
not (0.5 <= b)
not (0.5 == 0)
not (0.5 == 0.5)
not (0.5 == 2)
not (0.5 == a)
not (0.5 == b)
not (0.5 == f)
not (0.5 == nil)
not (0.5 > 0)
not (0.5 > 1)
not (0.5 > a)
not (0.5 > b)
not (0.5 > f)
not (0.5 >= 0)
not (0.5 >= 0.5)
not (0.5 >= a)
not (0.5 >= b)
not (0.5 >= f)
not (1 != 0)
not (1 != b)
not (1 != f)
not (1 != nil)
not (1 < 0)
not (1 < a)
not (1 < f)
not (1 <= f)
not (1 == 0.5)
not (1 == b)
not (1 == f)
not (1 > 0.5)
not (1 > b)
not (1 > f)
not (1 >= 0)
not (1 >= 0.5)
not (1 >= 2)
not (1 >= a)
not (1 >= f)
not (1 in arr)
not (2 != 0.5)
not (2 != 2)
not (2 != a)
not (2 != f)
not (2 != nil)
not (2 < 0.5)
not (2 < b)
not (2 < f)
not (2 <= 0.5)
not (2 <= b)
not (2 <= f)
not (2 == a)
not (2 > 0)
not (2 > 1)
not (2 > a)
not (2 > b)
not (2 > f)
not (2 >= a)
not (2 >= b)
not (2 >= b) && ok
not (2 in arr)
not (a != 0)
not (a != 0.5)
not (a != 2)
not (a != a)
not (a != b)
not (a != f)
not (a < 0)
not (a < 1)
not (a < 2)
not (a < a)
not (a < b)
not (a < f)
not (a <= 0)
not (a <= 0.5)
not (a <= 1)
not (a <= a)
not (a <= b)
not (a <= f)
not (a == 0)
not (a == 0.5)
not (a == 1)
not (a == 2)
not (a == a)
not (a == b)
not (a == f)
not (a == nil)
not (a > 0)
not (a > 1)
not (a > a)
not (a > b)
not (a > f)
not (a >= 0)
not (a >= 0.5)
not (a >= 1)
not (a >= a)
not (a >= b)
not (a >= f)
not (a in arr)
not (add != add)
not (add != div)
not (add != nil)
not (add == add)
not (add == div)
not (add == nil)
not (arr != arr)
not (arr != nil)
not (arr == arr)
not (arr == nil)
not (b != 0)
not (b != 0.5)
not (b != 1)
not (b != 2)
not (b != a)
not (b != b)
not (b != f)
not (b != nil)
not (b ** 0 >= a)
not (b < 0)
not (b < 0.5)
not (b < a)
not (b < b)
not (b < f)
not (b <= 0.5)
not (b <= 1)
not (b <= 2)
not (b <= a)
not (b <= b)
not (b <= f)
not (b == 0)
not (b == 0.5)
not (b == 1)
not (b == 2)
not (b == a)
not (b == b)
not (b == f)
not (b == nil)
not (b > 0)
not (b > 1)
not (b > 2)
not (b > a)
not (b > b)
not (b > f)
not (b >= 0)
not (b >= 0.5)
not (b >= a)
not (b >= b)
not (b >= f)
not (b in arr)
not (div != add)
not (div != div)
not (div != nil)
not (div == add)
not (div == div)
not (div == nil)
not (f != 0)
not (f != 0.5)
not (f != a)
not (f != b)
not (f != f)
not (f < 0)
not (f < 1)
not (f < 2)
not (f < a)
not (f < b)
not (f < f)
not (f <= 1)
not (f <= a)
not (f <= b)
not (f <= f)
not (f == 0)
not (f == 0.5)
not (f == 1)
not (f == 2)
not (f == a)
not (f == b)
not (f == f)
not (f == nil)
not (f > 0)
not (f > 0.5)
not (f > 1)
not (f > 2)
not (f > a)
not (f > b)
not (f > f)
not (f > obj.b)
not (f >= 0)
not (f >= 1)
not (f >= 2)
not (f >= a)
not (f >= b)
not (f >= f)
not (false != false)
not (false != nil)
not (false != ok)
not (false && ok)
not (false && true)
not (false == nil)
not (false == ok)
not (false == true)
not (false and true)
not (false or false)
not (false || false)
not (false || ok)
not (false || true)
not (nil != "b")
not (nil != "c")
not (nil != 0)
not (nil != 2)
not (nil != a)
not (nil != add)
not (nil != arr)
not (nil != b)
not (nil != div)
not (nil != f)
not (nil != nil)
not (nil != obj)
not (nil != ok)
not (nil != s)
not (nil != true)
not (nil == "b")
not (nil == 0)
not (nil == 0.5)
not (nil == a)
not (nil == add)
not (nil == arr)
not (nil == b)
not (nil == div)
not (nil == f)
not (nil == false)
not (nil == nil)
not (nil == obj)
not (nil == ok)
not (nil == s)
not (nil == true)
not (nil in arr)
not (nil in obj)
not (obj != nil)
not (obj != obj)
not (obj == nil)
not (obj == obj)
not (obj.b != a ** a)
not (obj.b == ok)
not (obj.head(a) ** f <= f)
not (obj.head(b, div) == s)
not (obj.obj == f)
not (obj?.a != f ** 1)
not (obj?.b < b)
not (obj?.b == ok)
not (ok != false)
not (ok != nil)
not (ok != ok)
not (ok != true)
not (ok && false)
not (ok && ok)
not (ok && true)
not (ok == false)
not (ok == nil)
not (ok == true)
not (ok and false)
not (ok and ok)
not (ok and true)
not (ok or false)
not (ok or ok)
not (ok || obj.b)
not (ok || ok)
not (ok || true)
not (s != "a")
not (s != "b")
not (s != "c")
not (s != nil)
not (s != s)
not (s < "a")
not (s < "b")
not (s < "c")
not (s < s)
not (s <= "a")
not (s <= "b")
not (s <= "c")
not (s <= s)
not (s == "a")
not (s == "b")
not (s == "c")
not (s == nil)
not (s == s)
not (s > "c")
not (s > s)
not (s >= "a")
not (s >= "b")
not (s >= "c")
not (s >= s)
not (s contains "c")
not (s contains s)
not (s endsWith "a")
not (s endsWith "b")
not (s endsWith lower("b"))
not (s endsWith s)
not (s in obj)
not (s matches "a")
not (s matches "c")
not (s matches s)
not (s startsWith "a")
not (s startsWith "b")
not (s startsWith s)
not (true != false)
not (true != nil)
not (true != ok)
not (true != true)
not (true && false)
not (true && true)
not (true == nil)
not (true == ok)
not (true == true)
not (true and false)
not (true and ok)
not (true or false)
not (true or ok)
not (true or true)
not (true || ok)
not (true || true)
not all(arr, false)
not all(arr, ok)
not all(arr, true)
not any(arr, false)
not any(arr, ok)
not any(arr, true)
not false ? "a" : obj
not false ? "c" : 0.5
not false ? 0 : obj.obj
not false ? 0.5 : 0.5
not false ? 0.5 : a
not false ? 2 : 1
not false ? a : div
not false ? a : s
not false ? add : 2
not false ? add : obj
not false ? arr : arr
not false ? b : div
not false ? b : ok
not false ? b : s
not false ? div : nil
not false ? div : ok
not false ? f : "a"
not false ? f : 0
not false ? f : 1
not false ? false : s
not false ? nil : "b"
not false ? nil : f
not false ? obj : "c"
not false ? obj : add
not false ? ok : nil
not false ? ok : ok
not false ? s : 0
not false ? s : add
not false ? s : b
not false ? s : obj
not false ? s : true
not false ? true : false
not false and obj.head(add)
not false and obj?.obj.obj
not false or b == nil
not false or obj?.fn(false)
not false or obj?.head(arr, obj)?.b
not false or obj?.obj
not false || a <= b
not hasPrefix(s, "c")
not hasSuffix("a", "a")
not hasSuffix(s, "a")
not none(arr, false)
not none(arr, ok)
not none(arr, true)
not not (f > f)
not not (nil == div)
not not false
not not obj.head(ok, ok)
not not ok
not not true
not obj.head(f != true)
not obj.head(false)
not obj.head(false, add)
not obj.head(false, div)
not obj.head(obj, arr, b, nil).head(f <= 0)
not obj.head(ok)
not obj.head(ok, a)
not obj.head(ok, add, a, s)
not obj.head(ok, b, s)
not obj.head(ok, div)
not obj.head(true == "c")
not obj.head(true)
not obj?.head(0.5 <= a)
not obj?.head(false)
not obj?.head(false, 1)
not obj?.head(false, b)
not obj?.head(false, nil)
not obj?.head(ok)
not obj?.head(ok, "c")
not obj?.head(ok, 0)
not obj?.head(ok, a)
not obj?.head(ok, div)
not obj?.head(ok, div, a)
not obj?.head(ok, f, true)
not obj?.head(ok, s)
not obj?.head(true)
not ok
not ok != obj.obj
not ok != obj.obj?.obj
not ok != ok
not ok && obj.obj
not ok && obj?.b
not ok && obj?.head(b).a
not ok && s > obj?.a
not ok == obj?.a
not ok == obj?.b
not ok == ok
not ok ? "a" : b
not ok ? "a" : f
not ok ? "b" : a
not ok ? "b" : f
not ok ? "b" : s
not ok ? "c" : a
not ok ? 0 : obj
not ok ? 0 : true
not ok ? 0.5 : false
not ok ? 1 : b
not ok ? 1 : f
not ok ? 1 : true
not ok ? 2 : div
not ok ? 2 : true
not ok ? a : 1
not ok ? a : a
not ok ? a : obj
not ok ? a : s
not ok ? add : 1
not ok ? add : b
not ok ? add : nil
not ok ? add : s
not ok ? arr : nil
not ok ? arr : ok
not ok ? arr : true
not ok ? b : a
not ok ? b : add
not ok ? b : div
not ok ? b : obj
not ok ? div : 1
not ok ? div : a
not ok ? div : b
not ok ? div : obj.b
not ok ? f : "c"
not ok ? f : false
not ok ? f : obj?.obj
not ok ? f : s
not ok ? false : "c"
not ok ? obj : arr
not ok ? obj : b
not ok ? obj : div
not ok ? ok : "c"
not ok ? ok : 0
not ok ? ok : a
not ok ? ok : add
not ok ? ok : arr
not ok ? ok : ok
not ok ? s : a
not ok ? true : add
not ok ? true : false
not ok and obj?.a.obj
not ok or obj.a
not ok or ok
not ok || 0 <= f
not ok || obj.head(0, nil)
not ok || obj?.obj
not ok || ok
not one(arr, false)
not one(arr, ok)
not one(arr, true)
not true != obj?.b
not true ? "b" : b
not true ? 0 : div
not true ? 0.5 : ok
not true ? 1 : obj
not true ? a : a
not true ? arr : 1
not true ? arr : b
not true ? b : "a"
not true ? b : 2
not true ? b : a
not true ? b : div
not true ? b : obj
not true ? div : nil
not true ? div : true
not true ? f : false
not true ? f : obj
not true ? f : true
not true ? nil : "c"
not true ? nil : a
not true ? obj : arr
not true ? obj : f
not true ? obj : ok
not true ? s : ok
not true and obj[s]
not true and ok
not true or obj.obj?.a
not true || ok
obj
obj != get(obj, s)
obj != nil == true
obj != nil ? f : "b"
obj != nil and obj?.fn(a)
obj != nil and s <= "a"
obj != nil || b <= obj.fn(fromJSON(a), trimSuffix(div(true), true % s, a startsWith obj, f ^ add), f)
obj != obj
obj != obj != ok
obj != obj && obj?.head(0, true)
obj != obj == ok
obj != obj ? 0 : obj
obj != obj ? 1 : 0.5
obj != obj or obj.obj
obj != obj || obj?.obj
obj != obj.a
obj != obj.b
obj != obj.c
obj != obj.fn(a)
obj != obj.fn(b)
obj != obj.head(b, f)
obj != obj.head(f, s, s, ok)
obj != obj.head(false)
obj != obj.head(nil or false)
obj != obj.head(ok)
obj != obj.obj
obj != obj.obj.b
obj != obj.obj?.b
obj != obj.obj?.obj
obj != obj?.a
obj != obj?.b
obj != obj?.fn(b)
obj != obj?.head(0, b)
obj != obj?.head(a, 0)
obj != obj?.head(obj)
obj != obj?.obj
obj != obj?.obj.b
obj != obj?.obj.obj
obj != obj?.obj?.b
obj != obj?.obj?.obj
obj != obj[s]
obj != {"a": 2, "b": b}
obj == nil && obj?.fn(nil)
obj == nil == true ? 0.5 : obj
obj == nil ? add : add
obj == nil ? arr : arr
obj == nil ? b : 1
obj == nil ? obj : "c"
obj == obj
obj == obj != any(arr, true)
obj == obj != ok
obj == obj && ok
obj == obj ? false : f
obj == obj ? ok : s
obj == obj or obj?.head(f, false, obj)
obj == obj.a
obj == obj.b
obj == obj.head(0.5)
obj == obj.head(2 == s)
obj == obj.head(a)
obj == obj.head(b)
obj == obj.head(false)
obj == obj.head(int(arr, ok, b, a), 2 * b)
obj == obj.head(obj, s)
obj == obj.head(s == div)
obj == obj.obj
obj == obj.obj.b
obj == obj?.a
obj == obj?.b
obj == obj?.fn(0 + b)
obj == obj?.fn(2)
obj == obj?.head(0, f)
obj == obj?.head(a)
obj == obj?.head(add, "c", add, "a")
obj == obj?.head(add, ok)
obj == obj?.head(filter(arr, ok))
obj == obj?.head(nil)
obj == obj?.head(obj, 0)
obj == obj?.obj
obj == obj?.obj.a
obj == obj?.obj?.a
obj == obj?.obj?.b
obj == obj[nil]
obj in [0.5, a, true, obj]
obj in [arr]
obj in obj?.head(arr)
obj in obj[s]
obj.a
obj.a != "c" ? obj : a
obj.a != 0.5 - b
obj.a != a
obj.a != a * 0.5
obj.a != add
obj.a != add ? false : ok
obj.a != arr
obj.a != b
obj.a != b / a && ok
obj.a != div
obj.a != div != false
obj.a != div ? s : a
obj.a != div or ok
obj.a != f
obj.a != last(arr)
obj.a != obj
obj.a != obj ? f : ok
obj.a != obj.a
obj.a != obj.head(add, obj)
obj.a != obj.obj.obj
obj.a != obj?.b
obj.a != obj?.obj.a
obj.a != ok
obj.a != ok ? ok : 0.5
obj.a != s
obj.a != string(nil)
obj.a != string(ok)
obj.a != toJSON(0.5)
obj.a % a
obj.a % b
obj.a % int(b)
obj.a % obj.a
obj.a % obj?.b
obj.a * (0.5 + 0)
obj.a * -a
obj.a * 0 ^ f
obj.a * a
obj.a * b
obj.a * count(arr, ok)
obj.a * div(0, b)
obj.a * f
obj.a * len(arr)
obj.a * obj.b
obj.a * obj?.b
obj.a ** (a % 2)
obj.a ** (a + a)
obj.a ** (b - f)
obj.a ** 0 ** a
obj.a ** 0.5 ^ 0.5
obj.a ** a
obj.a ** b
obj.a ** div(a, 1)
obj.a ** f
obj.a + -b
obj.a + a
obj.a + b
obj.a + f
obj.a + int(b)
obj.a + max(b, 2)
obj.a + obj.a
obj.a + obj.b
obj.a + obj.head(a, true, nil)
obj.a + obj?.a
obj.a + obj?.b
obj.a + obj?.fn(0)
obj.a - 0 + f
obj.a - a
obj.a - a - 0.5
obj.a - b
obj.a - f
obj.a - obj.a
obj.a - obj.b
obj.a - obj.head(obj).a
obj.a - obj?.b
obj.a .. a
obj.a .. add(a, a)
obj.a .. b
obj.a .. div(0, a)
obj.a .. max(a)
obj.a / -f
obj.a / 0 ^ b
obj.a / a
obj.a / b
obj.a / f
obj.a / f * b
obj.a / obj.head(a, nil)
obj.a / obj?.b
obj.a < -2
obj.a < 0 ? f : a
obj.a < a
obj.a < b
obj.a < b ^ f
obj.a < f
obj.a < obj.b
obj.a <= 0.5 / b
obj.a <= 1 / a
obj.a <= a
obj.a <= a + f
obj.a <= a ? 0 : nil
obj.a <= a ? 2 : 0.5
obj.a <= b
obj.a <= b ** f
obj.a <= count(arr, ok)
obj.a <= f
obj.a <= f ** a
obj.a <= obj.a
obj.a == (true && ok)
obj.a == 2 / b
obj.a == a
obj.a == a * a
obj.a == abs(0.5)
obj.a == add
obj.a == arr
obj.a == arr != true
obj.a == arr[0]
obj.a == b
obj.a == div
obj.a == div == obj?.b
obj.a == f
obj.a == false ? div : add
obj.a == filter(arr, ok)
obj.a == map(arr, true)
obj.a == not false
obj.a == obj
obj.a == obj ? 0 : a
obj.a == obj ? arr : 0.5
obj.a == obj.a
obj.a == obj.b
obj.a == obj.obj
obj.a == obj?.b
obj.a == obj?.obj
obj.a == ok
obj.a == s
obj.a == string(false)
obj.a > a
obj.a > a ** f
obj.a > a ? div : s
obj.a > add(a, a)
obj.a > add(b, 0)
obj.a > b
obj.a > f
obj.a > f ? f : 0
obj.a > max(f)
obj.a > obj?.a
obj.a > obj?.b
obj.a >= 0 - 0
obj.a >= a
obj.a >= abs(0)
obj.a >= add(b, 1)
obj.a >= b
obj.a >= f
obj.a >= f ^ 0.5
obj.a >= obj.a
obj.a >= obj.b
obj.a >= obj?.b
obj.a ^ (a % a)
obj.a ^ a
obj.a ^ b
obj.a ^ f
obj.a ^ len(arr)
obj.a ^ obj.a
obj.a ^ obj.b
obj.a ^ obj.fn(a)
obj.a ^ obj?.a
obj.a and !true
obj.a in arr
obj.a or not false
obj.a or true || obj?.a
obj.b
obj.b != "c" ? s : ok
obj.b != 0 / a
obj.b != 1 / a
obj.b != a
obj.b != a ** f
obj.b != add
obj.b != arr
obj.b != arr[1]
obj.b != b
obj.b != div
obj.b != f
obj.b != f - 0.5
obj.b != f ? ok : add
obj.b != int(f)
obj.b != nil ? f : obj.b
obj.b != obj
obj.b != obj.a
obj.b != obj.b
obj.b != obj?.a
obj.b != obj?.head(b, obj)
obj.b != obj?.obj
obj.b != ok
obj.b != ok ? 0 : b
obj.b != s
obj.b != s ? nil : arr
obj.b != trimSuffix("b")
obj.b % 2 * f
obj.b % a
obj.b % abs(a)
obj.b % b
obj.b % len(arr)
obj.b % len(obj)
obj.b % obj.a
obj.b % obj?.a
obj.b && false ? 0.5 : f
obj.b * (0.5 - b)
obj.b * (a + 0.5)
obj.b * 0.5 / a
obj.b * a
obj.b * add(0, a)
obj.b * b
obj.b * div(b, b)
obj.b * f
obj.b * f / f
obj.b * get(arr, a)
obj.b * obj.a
obj.b * obj.b
obj.b * obj.head(2, add, false, arr)
obj.b ** a
obj.b ** add(1, 2)
obj.b ** add(b, a) != f
obj.b ** b
obj.b ** f
obj.b ** f ^ 1
obj.b ** obj.a
obj.b ** obj.b
obj.b ** obj?.b
obj.b ** obj?.head(f, obj, 0.5, arr, ok)
obj.b + -b
obj.b + 0 / 2
obj.b + a
obj.b + a % 2
obj.b + b
obj.b + f
obj.b + f / 2
obj.b + len(s)
obj.b + obj.b
obj.b + obj?.a
obj.b + obj?.b
obj.b - 0 * f
obj.b - 0 ^ a
obj.b - a
obj.b - b
obj.b - div(a, a)
obj.b - f
obj.b - obj.b
obj.b - obj?.a
obj.b - obj?.b
obj.b .. 0 - b
obj.b .. 2 - a
obj.b .. a
obj.b .. b
obj.b .. b * 0
obj.b .. b - 0
obj.b .. obj.a
obj.b .. obj.b
obj.b .. obj?.head(f, ok, obj, add, 0.5)
obj.b / (0.5 + a)
obj.b / -f
obj.b / 0.5 ** a
obj.b / 0.5 / a
obj.b / a
obj.b / b
obj.b / f
obj.b / obj?.a
obj.b / obj?.head(a, div)
obj.b < 0 - b
obj.b < 1 / a
obj.b < 2 * 0
obj.b < 2 + b
obj.b < a
obj.b < b
obj.b < f
obj.b < get(obj, "b")
obj.b < len("c")
obj.b < min(f)
obj.b < obj.a
obj.b < obj.b
obj.b <= 0.5 == nil
obj.b <= 2 ? "a" : a
obj.b <= a
obj.b <= a * f
obj.b <= a - f
obj.b <= a ? a : 0
obj.b <= arr[a]
obj.b <= b
obj.b <= f
obj.b <= f != ok
obj.b <= get(arr, a)
obj.b <= min(b)
obj.b <= obj.a
obj.b <= obj.fn(0)
obj.b <= obj?.a
obj.b <= obj?.b
obj.b <= obj?.head(b, 0)
obj.b == !false
obj.b == "c" ? a : nil
obj.b == (ok && true)
obj.b == (ok and true)
obj.b == 0.5 ? arr : "c"
obj.b == a
obj.b == a .. a
obj.b == a ? false : false
obj.b == a ^ a
obj.b == add
obj.b == arr
obj.b == b
obj.b == b / 0
obj.b == div
obj.b == f
obj.b == f ? 1 : "c"
obj.b == f ? nil : b
obj.b == f ? obj : ok
obj.b == f ? s : arr
obj.b == int(0.5)
obj.b == map(arr, 0)
obj.b == obj
obj.b == obj.a
obj.b == obj.b
obj.b == obj.head(nil)
obj.b == obj.obj
obj.b == obj?.a
obj.b == obj?.b
obj.b == ok
obj.b == s
obj.b == toBase64(s)
obj.b > -a
obj.b > 0 ? b : f
obj.b > a
obj.b > a ** a
obj.b > b
obj.b > b + 0
obj.b > f
obj.b > int(1)
obj.b > obj.a
obj.b > obj.b
obj.b > obj?.b
obj.b > obj?.fn(0)
obj.b >= 0 ** 1
obj.b >= 0.5 / f
obj.b >= 0.5 ^ 1
obj.b >= 1 ? 2 : obj
obj.b >= a
obj.b >= a ? ok : b
obj.b >= b
obj.b >= b + b
obj.b >= f
obj.b >= max(b)
obj.b >= obj.a
obj.b >= obj.fn(b)
obj.b >= obj?.a
obj.b >= obj?.head(b)
obj.b ^ a
obj.b ^ b
obj.b ^ f
obj.b ^ obj.head(a, true, arr, s)
obj.b ^ obj.obj.b
obj.b ^ obj?.b
obj.b and !false
obj.b and !true
obj.b and false == true
obj.b in arr
obj.b or false and true
obj.c in obj
obj.c?.a
obj.c?.b
obj.c?.b.b
obj.c?.b?.b
obj.c?.fn(b)
obj.c?.head("a" != arr)
obj.c?.head(a)
obj.c?.head(b)
obj.c?.obj
obj.c?.obj?.head(div)
obj.fn(-0)
obj.fn(-1)
obj.fn(-2)
obj.fn(-a)
obj.fn(-b)
obj.fn(0 && true)
obj.fn(0 * a)
obj.fn(0 + 0)
obj.fn(0 + b)
obj.fn(0 - 0)
obj.fn(0 and true)
obj.fn(0 || false)
obj.fn(0) != b
obj.fn(0) * a
obj.fn(0) ** f
obj.fn(0) + f
obj.fn(0) - b
obj.fn(0) / a
obj.fn(0) / b
obj.fn(0) <= b + 0
obj.fn(0) == a
obj.fn(0) == b
obj.fn(0) == s
obj.fn(0) >= a
obj.fn(0) ^ f
obj.fn(1 % b)
obj.fn(1 * b)
obj.fn(1 + b)
obj.fn(1 and true)
obj.fn(1) ** obj?.b
obj.fn(1) + b
obj.fn(1) == add
obj.fn(2 % 1)
obj.fn(2 * 1)
obj.fn(2 * a)
obj.fn(2 + b)
obj.fn(2) != add
obj.fn(2) < f
obj.fn(a % a)
obj.fn(a * 0)
obj.fn(a + 1)
obj.fn(a + 2)
obj.fn(a + a)
obj.fn(a - 1)
obj.fn(a - 2)
obj.fn(a and true)
obj.fn(a or false)
obj.fn(a)
obj.fn(a) != 2 - b
obj.fn(a) != b
obj.fn(a) != f
obj.fn(a) != ok
obj.fn(a) % a
obj.fn(a) % b
obj.fn(a) * a
obj.fn(a) ** a
obj.fn(a) ** b
obj.fn(a) - a
obj.fn(a) < a
obj.fn(a) == add
obj.fn(a) == arr
obj.fn(a) == map(arr, arr)
obj.fn(a) > b
obj.fn(a) >= b
obj.fn(a) ^ f
obj.fn(a) and !true
obj.fn(abs(1))
obj.fn(abs(2))
obj.fn(abs(f, s, b, b))
obj.fn(add(0, 2))
obj.fn(add(0, a))
obj.fn(add(0, b))
obj.fn(add(1, 1))
obj.fn(add(1, b))
obj.fn(add(2, a))
obj.fn(add(a, 0))
obj.fn(add(a, a))
obj.fn(add(a, b))
obj.fn(add(b, 2))
obj.fn(add(b, b))
obj.fn(arr[0])
obj.fn(arr[a])
obj.fn(arr[b])
obj.fn(b % a)
obj.fn(b % b)
obj.fn(b && true)
obj.fn(b * 0)
obj.fn(b * 1)
obj.fn(b * b)
obj.fn(b + obj?.a)
obj.fn(b - 1)
obj.fn(b - 2)
obj.fn(b - a)
obj.fn(b or false)
obj.fn(b || false)
obj.fn(b)
obj.fn(b) != a
obj.fn(b) != div
obj.fn(b) * b ^ f
obj.fn(b) ** b
obj.fn(b) + b
obj.fn(b) .. a % 2
obj.fn(b) .. b * b
obj.fn(b) < b
obj.fn(b) < f
obj.fn(b) <= 0 % b
obj.fn(b) <= b
obj.fn(b) == a / 1
obj.fn(b) == div ? obj : div
obj.fn(b) == ok
obj.fn(b) > f
obj.fn(b) ^ obj?.a
obj.fn(count("a", false))
obj.fn(count("b", ok))
obj.fn(count("b", true))
obj.fn(count("c", ok))
obj.fn(count("c", true))
obj.fn(count(1 .. f, s))
obj.fn(count(arr, false))
obj.fn(count(arr, ok))
obj.fn(count(obj, ok))
obj.fn(count(s, ok))
obj.fn(div(0, a))
obj.fn(div(0, b))
obj.fn(div(1, 1))
obj.fn(div(1, b))
obj.fn(div(a, a))
obj.fn(div(a, b))
obj.fn(div(b, a))
obj.fn(div(b, b))
obj.fn(f == obj or b)
obj.fn(false ? 0 : b)
obj.fn(false or 0)
obj.fn(false or a)
obj.fn(false || 0)
obj.fn(false || 2)
obj.fn(false || a)
obj.fn(get(arr, 0))
obj.fn(get(arr, 0.5))
obj.fn(get(arr, b))
obj.fn(int("b", a))
obj.fn(int(0))
obj.fn(int(1))
obj.fn(int(a))
obj.fn(int(a, 0))
obj.fn(int(b))
obj.fn(int(b, s, a, "a", f))
obj.fn(int(obj, true, b))
obj.fn(int(true, f))
obj.fn(last(arr))
obj.fn(last(arr, b))
obj.fn(len("b"))
obj.fn(len(0, obj))
obj.fn(len(arr))
obj.fn(len(arr, s))
obj.fn(len(f, arr))
obj.fn(len(false, 1, s, obj))
obj.fn(len(nil, arr))
obj.fn(len(s))
obj.fn(max(0))
obj.fn(max(0, b))
obj.fn(max(1))
obj.fn(max(1, 0.5))
obj.fn(max(a))
obj.fn(max(b))
obj.fn(min(0))
obj.fn(min(0, f, a))
obj.fn(min(1))
obj.fn(min(a))
obj.fn(min(b))
obj.fn(min(f, f, 0))
obj.fn(obj.a)
obj.fn(obj.a) < b
obj.fn(obj.b)
obj.fn(obj.fn(1))
obj.fn(obj.fn(2))
obj.fn(obj.fn(a))
obj.fn(obj.head(0))
obj.fn(obj.head(0, add))
obj.fn(obj.head(2))
obj.fn(obj.head(a))
obj.fn(obj.head(a, s))
obj.fn(obj.head(b))
obj.fn(obj?.a)
obj.fn(obj?.b)
obj.fn(obj?.fn(0))
obj.fn(obj?.fn(a))
obj.fn(obj?.fn(b))
obj.fn(obj?.head(0))
obj.fn(obj?.head(0, div))
obj.fn(obj?.head(1))
obj.fn(obj?.head(a, arr))
obj.fn(obj?.head(b))
obj.fn(ok && 2)
obj.fn(ok && a)
obj.fn(ok && b)
obj.fn(ok ? 1 : 0)
obj.fn(ok ? a : s)
obj.fn(ok ? b : "b" .. all(obj, ok))
obj.fn(ok and 0)
obj.fn(ok and a)
obj.fn(ok and b)
obj.fn(s, obj, nil) || true ? 0 : b
obj.fn(true && 0)
obj.fn(true && 2)
obj.fn(true ? 0 : add)
obj.fn(true and a)
obj.head(!false)
obj.head(!false, s, div)
obj.head(!ok)
obj.head(!true)
obj.head(!true, div)
obj.head(!true, ok ? true : add)
obj.head("a" != "c")
obj.head("a" != a)
obj.head("a" != add)
obj.head("a" != b)
obj.head("a" != div)
obj.head("a" != s)
obj.head("a" < s)
obj.head("a" == "c")
obj.head("a" == 0)
obj.head("a" == arr)
obj.head("a" == b)
obj.head("a" == f)
obj.head("a" >= "c")
obj.head("a" contains "a")
obj.head("a" in arr, obj)
obj.head("a" in nil)
obj.head("a" or true)
obj.head("a" || true)
obj.head("a") == add
obj.head("a", a) == b - 0.5
obj.head("b" != "c", last(arr, ok, f), arr)
obj.head("b" != 1)
obj.head("b" != a)
obj.head("b" != add)
obj.head("b" != arr)
obj.head("b" != b)
obj.head("b" != s)
obj.head("b" + "b")
obj.head("b" <= "b")
obj.head("b" == f)
obj.head("b" == obj)
obj.head("b" || false)
obj.head("b") + s
obj.head("b") startsWith s
obj.head("b", ok) != add
obj.head("c" != a)
obj.head("c" != ok)
obj.head("c" + "a")
obj.head("c" + s)
obj.head("c" == "c")
obj.head("c" == add, ok)
obj.head("c" == arr)
obj.head("c" == div)
obj.head("c" == false)
obj.head("c" >= "b")
obj.head("c" >= s, get(0, ok))
obj.head("c" and false)
obj.head("c" and true)
obj.head("c" contains "b")
obj.head("c" endsWith "c")
obj.head("c" startsWith "c")
obj.head("c" || false)
obj.head("c") endsWith s
obj.head("c", "c") > s
obj.head((nil || true) == arr)
obj.head(-0)
obj.head(-0.5)
obj.head(-0.5, add)
obj.head(-2)
obj.head(-a)
obj.head(-b)
obj.head(-f)
obj.head(-f, obj?.head(obj, ok, arr))
obj.head(0 != arr)
obj.head(0 != b)
obj.head(0 != div)
obj.head(0 != nil)
obj.head(0 != nil, b)
obj.head(0 != ok)
obj.head(0 && true)
obj.head(0 * 0.5)
obj.head(0 * a)
obj.head(0 ** 0)
obj.head(0 ** 1)
obj.head(0 ** b)
obj.head(0 ** f)
obj.head(0 + 2)
obj.head(0 + a)
obj.head(0 + f)
obj.head(0 - 0.5)
obj.head(0 - 1)
obj.head(0 - a)
obj.head(0 - f)
obj.head(0 .. 0)
obj.head(0 .. 0.5)
obj.head(0 .. b)
obj.head(0 / b)
obj.head(0 < 0)
obj.head(0 < b, obj?.head(obj, obj, add, "a"))
obj.head(0 <= 0.5)
obj.head(0 <= 0.5, obj.a)
obj.head(0 <= 1)
obj.head(0 == "a")
obj.head(0 == 0)
obj.head(0 == 1)
obj.head(0 == add, f)
obj.head(0 == arr)
obj.head(0 == div)
obj.head(0 == f)
obj.head(0 == false)
obj.head(0 == ok)
obj.head(0 == s, float(b))
obj.head(0 == true)
obj.head(0 > 0)
obj.head(0 > b)
obj.head(0 >= 0)
obj.head(0 >= a, s)
obj.head(0 ^ 0.5)
obj.head(0 ^ 1)
obj.head(0 ^ a)
obj.head(0 ^ f)
obj.head(0 in nil)
obj.head(0 || true)
obj.head(0) != s
obj.head(0) - b
obj.head(0) .. obj?.head(1)
obj.head(0) / a
obj.head(0) / b
obj.head(0) < b ^ b
obj.head(0) == b
obj.head(0) > a - b
obj.head(0) >= 0.5 ? 2 : obj
obj.head(0) >= a
obj.head(0) ^ (b % 1)
obj.head(0) ^ b
obj.head(0, "a") - f
obj.head(0, "b") + f
obj.head(0, "b") .. add(b, b)
obj.head(0, 0) == "c" ? nil : a
obj.head(0, 0, "c") == obj?.a
obj.head(0, 0.5, "b", 0) <= 0.5 != true
obj.head(0, 1, div) < a
obj.head(0, add) / a
obj.head(0, arr) > b
obj.head(0, arr, add, nil) < a
obj.head(0, b, s) .. a
obj.head(0, div) + f
obj.head(0, div, a) < obj?.a
obj.head(0, f) <= b
obj.head(0, f, arr) == ok
obj.head(0, f, b) == s
obj.head(0, f, obj, 0, "a") + a
obj.head(0, ok) - a
obj.head(0, ok) > -b
obj.head(0, true, b) - a
obj.head(0.5 != 1)
obj.head(0.5 != a)
obj.head(0.5 != add)
obj.head(0.5 != arr)
obj.head(0.5 != b)
obj.head(0.5 != f)
obj.head(0.5 != obj)
obj.head(0.5 * 0)
obj.head(0.5 * a, arr)
obj.head(0.5 ** a)
obj.head(0.5 + a)
obj.head(0.5 + f)
obj.head(0.5 - 1)
obj.head(0.5 - a)
obj.head(0.5 - f)
obj.head(0.5 .. 0)
obj.head(0.5 .. a, max(div))
obj.head(0.5 / 0)
obj.head(0.5 < 0.5)
obj.head(0.5 <= 0)
obj.head(0.5 <= b)
obj.head(0.5 == a)
obj.head(0.5 == add, div)
obj.head(0.5 == obj)
obj.head(0.5 >= a)
obj.head(0.5 >= f)
obj.head(0.5 ^ 1)
obj.head(0.5 and true)
obj.head(0.5 in nil)
obj.head(0.5) - b / f
obj.head(0.5) / obj.head(2, obj)
obj.head(0.5, f) != a
obj.head(0.5, false, b) + obj.a
obj.head(0.5, nil) >= f
obj.head(0.5, nil, s) > a
obj.head(1 != add, obj.a)
obj.head(1 != arr)
obj.head(1 != nil)
obj.head(1 != obj)
obj.head(1 != s)
obj.head(1 && true)
obj.head(1 * 0)
obj.head(1 ** 2)
obj.head(1 - a)
obj.head(1 .. b)
obj.head(1 / 0.5)
obj.head(1 / 1)
obj.head(1 / a)
obj.head(1 / f)
obj.head(1 < 1)
obj.head(1 < a)
obj.head(1 == 0, get(div, b))
obj.head(1 == b)
obj.head(1 == div)
obj.head(1 == div, get(div, false))
obj.head(1 == s, 0 ** 0, ok)
obj.head(1 >= 0)
obj.head(1 >= a, ok)
obj.head(1 >= f)
obj.head(1 and false)
obj.head(1) + a
obj.head(1) + a + a
obj.head(1) == f
obj.head(1) ^ obj.b
obj.head(1, a, ok) <= a
obj.head(1, add, ok) > a
obj.head(1, div) == b ? a : a
obj.head(2 != "a")
obj.head(2 != b)
obj.head(2 != true)
obj.head(2 % b)
obj.head(2 * b)
obj.head(2 ** b)
obj.head(2 + 2)
obj.head(2 + b)
obj.head(2 - 1)
obj.head(2 - f, obj, get(obj, a))
obj.head(2 .. a)
obj.head(2 / 0)
obj.head(2 / a, add)
obj.head(2 / f)
obj.head(2 == ok)
obj.head(2 >= 0.5)
obj.head(2 >= b)
obj.head(2 >= f)
obj.head(2 ^ b, 0.5 && false)
obj.head(2 ^ f)
obj.head(2 in arr)
obj.head(2 in nil, a)
obj.head(2) != s
obj.head(2) + f
obj.head(2) == obj.a
obj.head(2, 0.5) % obj?.b
obj.head(2, 0.5) - obj.a
obj.head(2, arr, 2, obj, div) > f
obj.head(2, div, ok) in 2 .. 2
obj.head(["c"])
obj.head([arr, add])
obj.head(a != 0)
obj.head(a != a)
obj.head(a != arr)
obj.head(a != b)
obj.head(a != f)
obj.head(a != nil)
obj.head(a != obj)
obj.head(a != ok)
obj.head(a != ok, obj.b)
obj.head(a % 2)
obj.head(a % b)
obj.head(a * 0)
obj.head(a * 0.5)
obj.head(a * 1)
obj.head(a * a)
obj.head(a * b)
obj.head(a * b, get(0.5, nil))
obj.head(a * f)
obj.head(a ** a)
obj.head(a ** f)
obj.head(a + 0)
obj.head(a + 0.5, none(obj, true), a)
obj.head(a - 0)
obj.head(a - 0.5)
obj.head(a - 1)
obj.head(a - 2)
obj.head(a - a)
obj.head(a - b)
obj.head(a - b, 0 && false, f)
obj.head(a - f)
obj.head(a .. f)
obj.head(a / 0)
obj.head(a / 1)
obj.head(a < 0)
obj.head(a < 1)
obj.head(a < a)
obj.head(a < b)
obj.head(a <= a)
obj.head(a <= b, false in arr)
obj.head(a <= b, ok ? a : div)
obj.head(a <= f)
obj.head(a == "b")
obj.head(a == 0)
obj.head(a == 0, f == nil)
obj.head(a == add)
obj.head(a == b)
obj.head(a == f)
obj.head(a == f, ok ? obj : arr)
obj.head(a == obj)
obj.head(a > 1)
obj.head(a >= a)
obj.head(a >= f)
obj.head(a ^ 0)
obj.head(a ^ a)
obj.head(a ^ a, add)
obj.head(a ^ f)
obj.head(a and true)
obj.head(a in arr)
obj.head(a or true)
obj.head(a)
obj.head(a) != div
obj.head(a) * a
obj.head(a) * b
obj.head(a) ** f
obj.head(a) + b
obj.head(a) + f
obj.head(a) < add(b, a)
obj.head(a) < b ** 0
obj.head(a) <= 0.5 - 0.5
obj.head(a) >= 0.5 ^ f
obj.head(a) >= int(a)
obj.head(a) ^ a
obj.head(a, "a", false, 0) % b
obj.head(a, "b", "b") == obj ? "b" : arr
obj.head(a, 1 != arr)
obj.head(a, a)
obj.head(a, add)
obj.head(a, add) != div ? 0 : 0.5
obj.head(a, arr)
obj.head(a, arr) < obj.a
obj.head(a, b)
obj.head(a, b, f)
obj.head(a, div)
obj.head(a, f)
obj.head(a, f) == f
obj.head(a, f, div, "b") ^ b
obj.head(a, f, f) * b ** a
obj.head(a, f, obj.a)
obj.head(a, false) ^ 0.5 ** a
obj.head(a, nil) == f
obj.head(a, nil) == obj
obj.head(a, obj, ok, nil, ok) <= b
obj.head(a, obj.a)
obj.head(a, obj.b)
obj.head(a, obj.obj)
obj.head(a, obj?.head(s))
obj.head(a, ok)
obj.head(a, s)
obj.head(a, s) - a
obj.head(a, string(0.5, 1), f)
obj.head(a, true || arr)
obj.head(abs(0))
obj.head(abs(1), ok && add)
obj.head(abs(2))
obj.head(abs(b))
obj.head(abs(b, add, true, b))
obj.head(abs(div, "b", b))
obj.head(abs(div, arr, f))
obj.head(abs(f))
obj.head(abs(f, "b", a))
obj.head(abs(obj, b), add != obj)
obj.head(abs(obj, div, 1), a, get(0, f))
obj.head(add != "a")
obj.head(add != "c", ok)
obj.head(add != 0)
obj.head(add != 2)
obj.head(add != add)
obj.head(add != arr)
obj.head(add != b)
obj.head(add != f)
obj.head(add != false, a)
obj.head(add != nil, s)
obj.head(add != obj)
obj.head(add != ok)
obj.head(add != true)
obj.head(add && false, map(obj, obj))
obj.head(add && true)
obj.head(add == 0.5)
obj.head(add == add)
obj.head(add == arr)
obj.head(add == f)
obj.head(add == ok)
obj.head(add == s)
obj.head(add == true)
obj.head(add in arr)
obj.head(add in nil)
obj.head(add or true)
obj.head(add(0, 0))
obj.head(add(0, 1), obj, s)
obj.head(add(0, a))
obj.head(add(1, a), int(0))
obj.head(add(2, 0))
obj.head(add(2, b))
obj.head(add(a, 0))
obj.head(add(a, 0), div)
obj.head(add(a, a))
obj.head(add(a, a), get(s, a))
obj.head(add(b, 0))
obj.head(add(b, a))
obj.head(add(b, b))
obj.head(add)
obj.head(add) != div
obj.head(add) != f
obj.head(add) == f ** 1
obj.head(add, a)
obj.head(add, a, b, arr) == add
obj.head(add, add)
obj.head(add, b)
obj.head(add, b, s) == ok
obj.head(add, div)
obj.head(add, f)
obj.head(add, filter(arr, true))
obj.head(add, obj)
obj.head(add, s <= "b")
obj.head(add, s)
obj.head(add, s, arr) != add(a, 0)
obj.head(add, string(b))
obj.head(all("b", ok))
obj.head(all("b", true))
obj.head(all("c", false))
obj.head(all("c", ok))
obj.head(all(arr, false) == map(s, nil))
obj.head(all(arr, ok))
obj.head(all(arr, true))
obj.head(all(arr, true), a)
obj.head(all(obj, false))
obj.head(all(obj, true))
obj.head(all(s, ok))
obj.head(any("a", false))
obj.head(any("b", false))
obj.head(any(arr, ok))
obj.head(any(arr, true))
obj.head(any(obj, false))
obj.head(any(obj, true))
obj.head(arr != 2)
obj.head(arr != a)
obj.head(arr != add)
obj.head(arr != arr)
obj.head(arr != b)
obj.head(arr != div)
obj.head(arr != f)
obj.head(arr != false)
obj.head(arr != s)
obj.head(arr && false)
obj.head(arr && true)
obj.head(arr == "a")
obj.head(arr == a)
obj.head(arr == arr)
obj.head(arr == b)
obj.head(arr == f)
obj.head(arr == nil)
obj.head(arr == nil, all("b", ok), b)
obj.head(arr == obj)
obj.head(arr == s)
obj.head(arr in nil)
obj.head(arr || true)
obj.head(arr)
obj.head(arr) != a
obj.head(arr) != a ** b
obj.head(arr) != add
obj.head(arr) != obj
obj.head(arr) != obj.head(ok)
obj.head(arr) in arr
obj.head(arr)[obj?.a]
obj.head(arr, 0) != obj?.head(obj)
obj.head(arr, a) == 0.5 * f
obj.head(arr, add)
obj.head(arr, add)[obj.b]
obj.head(arr, arr)
obj.head(arr, b)
obj.head(arr, b, arr)
obj.head(arr, div)
obj.head(arr, div, 0, "b", arr) != f
obj.head(arr, div, arr)
obj.head(arr, div, false, a, div) != arr
obj.head(arr, f or true)
obj.head(arr, f)
obj.head(arr, f, arr, 0) != ok
obj.head(arr, map(obj, false))
obj.head(arr, obj)
obj.head(arr, obj, add) == ok
obj.head(arr, obj?.a)
obj.head(arr, ok)
obj.head(arr, ok, false) == add
obj.head(arr[0:f])
obj.head(arr[0], get(ok, f), arr)
obj.head(arr[1])
obj.head(arr[1], ok)
obj.head(arr[a])
obj.head(arr[b:f])
obj.head(arr[b])
obj.head(arr[b], s)
obj.head(arr[f])
obj.head(b != 0, ok, a)
obj.head(b != a)
obj.head(b != arr)
obj.head(b != arr, s)
obj.head(b != f)
obj.head(b != false)
obj.head(b != obj)
obj.head(b != ok)
obj.head(b != true)
obj.head(b % 1, obj.b)
obj.head(b % b, get(arr, arr))
obj.head(b * 0.5)
obj.head(b * 1)
obj.head(b * a)
obj.head(b * b, b)
obj.head(b * f)
obj.head(b ** 0)
obj.head(b ** 0.5, add)
obj.head(b ** b)
obj.head(b ** f, div)
obj.head(b + a)
obj.head(b + b)
obj.head(b + f)
obj.head(b - 0)
obj.head(b - 0, b ** b)
obj.head(b - 0.5)
obj.head(b - 1)
obj.head(b - 2, obj.head(obj))
obj.head(b - a)
obj.head(b - f)
obj.head(b .. a)
obj.head(b .. a, 2 <= a)
obj.head(b .. b)
obj.head(b .. f, get(obj, a), map(arr, true))
obj.head(b / 0)
obj.head(b / b)
obj.head(b / b, a)
obj.head(b < a)
obj.head(b < b)
obj.head(b < f)
obj.head(b <= a)
obj.head(b <= f)
obj.head(b == "a")
obj.head(b == "b")
obj.head(b == 0)
obj.head(b == a)
obj.head(b == add)
obj.head(b == arr)
obj.head(b == b)
obj.head(b == div)
obj.head(b == nil)
obj.head(b == obj)
obj.head(b == ok)
obj.head(b == ok, div)
obj.head(b == s)
obj.head(b > 0)
obj.head(b > 0.5)
obj.head(b > 1)
obj.head(b > a)
obj.head(b >= a, arr)
obj.head(b >= b, obj.a)
obj.head(b >= f)
obj.head(b ^ 0.5)
obj.head(b ^ 1, not ok)
obj.head(b ^ a)
obj.head(b in arr)
obj.head(b in nil)
obj.head(b or false)
obj.head(b || false)
obj.head(b || true)
obj.head(b)
obj.head(b) != a
obj.head(b) % a
obj.head(b) % b
obj.head(b) * b
obj.head(b) ** div(1, 1)
obj.head(b) ** obj?.a
obj.head(b) - -0
obj.head(b) - a
obj.head(b) - b
obj.head(b) .. div(a, a)
obj.head(b) / (b + a)
obj.head(b) / b
obj.head(b) < -f
obj.head(b) <= a + a
obj.head(b) <= obj.b
obj.head(b) == add
obj.head(b) == map(arr, add)
obj.head(b) == obj
obj.head(b) > obj.b
obj.head(b) >= a
obj.head(b) ^ obj.a
obj.head(b) in arr
obj.head(b, 0 / 2, max(div))
obj.head(b, 0.5, add, nil) == f
obj.head(b, 2) != first(arr)
obj.head(b, a + a)
obj.head(b, a - a)
obj.head(b, a)
obj.head(b, a) ^ b
obj.head(b, a, obj) <= b ? ok : "c"
obj.head(b, a, obj) ^ f
obj.head(b, a, s) >= obj?.a
obj.head(b, add) - f
obj.head(b, add, false, false, false) == s ? 1 : div
obj.head(b, add, s, arr) < 0.5 + b
obj.head(b, add, true) == f
obj.head(b, arr)
obj.head(b, arr) != add
obj.head(b, arr) ** b
obj.head(b, arr) >= b
obj.head(b, b + f)
obj.head(b, b)
obj.head(b, b) != obj.obj
obj.head(b, b, ok) / b
obj.head(b, div)
obj.head(b, f != "b")
obj.head(b, f) != add
obj.head(b, f, b, obj, a) ^ f ** f
obj.head(b, f, false) + a
obj.head(b, f, s, div, b) > b
obj.head(b, false, b) - obj?.a
obj.head(b, first(0.5))
obj.head(b, get(b, arr))
obj.head(b, get(div, true), "a" != 0)
obj.head(b, get(s, 0))
obj.head(b, get(true, obj))
obj.head(b, last(nil))
obj.head(b, nil != div)
obj.head(b, nil or false)
obj.head(b, obj)
obj.head(b, obj) % b
obj.head(b, obj.a)
obj.head(b, obj.head(add))
obj.head(b, ok or ok?.a)
obj.head(b, ok)
obj.head(b, s)
obj.head(b, true) == div
obj.head(count("a", true))
obj.head(count("c", ok))
obj.head(count(arr, false))
obj.head(count(arr, ok))
obj.head(count(arr, ok), 0 == arr)
obj.head(count(arr, true))
obj.head(count(obj, false))
obj.head(count(obj, ok))
obj.head(count(s, false))
obj.head(count(s, ok))
obj.head(count(s, ok), obj.b)
obj.head(count(s, true))
obj.head(date(s, s))
obj.head(div != "a")
obj.head(div != 1)
obj.head(div != a)
obj.head(div != add)
obj.head(div != arr)
obj.head(div != b, f)
obj.head(div != f)
obj.head(div != false)
obj.head(div != obj, arr)
obj.head(div != s)
obj.head(div && true)
obj.head(div == "b", div, b == nil)
obj.head(div == 0)
obj.head(div == 0.5)
obj.head(div == 1)
obj.head(div == 2)
obj.head(div == a)
obj.head(div == a, add)
obj.head(div == div)
obj.head(div == f)
obj.head(div == f, add)
obj.head(div == nil)
obj.head(div == obj, b)
obj.head(div == obj, toBase64(s))
obj.head(div and true)
obj.head(div in arr)
obj.head(div in nil)
obj.head(div || true)
obj.head(div(0, a))
obj.head(div(0, b), ok ? b : "a")
obj.head(div(1, a))
obj.head(div(1, a), obj, "b" in arr)
obj.head(div(a, 2))
obj.head(div(a, a))
obj.head(div(a, b))
obj.head(div(a, b), s)
obj.head(div(b, 2))
obj.head(div(b, a))
obj.head(div(b, b))
obj.head(div)
obj.head(div) != ok
obj.head(div) == a
obj.head(div) == b
obj.head(div) == div
obj.head(div) == obj
obj.head(div, 0 > f)
obj.head(div, 0.5) != -0.5
obj.head(div, a == f)
obj.head(div, a)
obj.head(div, add)
obj.head(div, b ** a)
obj.head(div, b + a, b, a)
obj.head(div, b) == a
obj.head(div, b, div)
obj.head(div, b, obj, add) == b
obj.head(div, div != obj)
obj.head(div, div(0, 2))
obj.head(div, div)
obj.head(div, f != false)
obj.head(div, f >= f)
obj.head(div, f)
obj.head(div, false, "c", s) != obj.head(add, "c")
obj.head(div, get(a, 0))
obj.head(div, get(false, f))
obj.head(div, get(false, obj))
obj.head(div, max(b))
obj.head(div, not ok)
obj.head(div, obj)
obj.head(div, obj.a)
obj.head(div, ok != arr)
obj.head(div, ok and div)
obj.head(div, ok)
obj.head(div, s != div)
obj.head(div, s < s, a)
obj.head(div, s)
obj.head(div, s[2])
obj.head(f != "c")
obj.head(f != "c", 0 * 0.5)
obj.head(f != a)
obj.head(f != a, ok, obj)
obj.head(f != add)
obj.head(f != b)
obj.head(f != nil)
obj.head(f != ok)
obj.head(f != s)
obj.head(f != s, upper(0.5, s))
obj.head(f != true)
obj.head(f * 0)
obj.head(f * 0.5)
obj.head(f * 2)
obj.head(f * b)
obj.head(f * f)
obj.head(f ** 0)
obj.head(f ** 2)
obj.head(f ** b)
obj.head(f ** obj.a)
obj.head(f + 0)
obj.head(f + a)
obj.head(f + b)
obj.head(f - 0)
obj.head(f - 0.5)
obj.head(f - 2)
obj.head(f - a)
obj.head(f - b, f ** f)
obj.head(f - f)
obj.head(f .. a)
obj.head(f .. b, add == nil)
obj.head(f .. f)
obj.head(f .. f) != arr
obj.head(f / 0.5)
obj.head(f / 1)
obj.head(f / a)
obj.head(f / f)
obj.head(f < b)
obj.head(f <= 1, obj)
obj.head(f <= b)
obj.head(f == "b", now(ok, 2))
obj.head(f == "c", one(arr, true))
obj.head(f == 0)
obj.head(f == add)
obj.head(f == b)
obj.head(f == f)
obj.head(f == obj, div)
obj.head(f == s)
obj.head(f == s, ok)
obj.head(f > 0)
obj.head(f > 1)
obj.head(f > f)
obj.head(f > f, any(s, ok), f ^ 0)
obj.head(f >= 0)
obj.head(f >= 0.5)
obj.head(f >= f)
obj.head(f >= f, int(s, nil, f))
obj.head(f ^ 2, a)
obj.head(f ^ b)
obj.head(f ^ f)
obj.head(f ^ f, s < s)
obj.head(f in arr)
obj.head(f in arr, f == 0)
obj.head(f in nil)
obj.head(f or false)
obj.head(f)
obj.head(f) != abs(0.5)
obj.head(f) != div
obj.head(f) != ok
obj.head(f) * b
obj.head(f) .. int(0.5)
obj.head(f) / a
obj.head(f) < b
obj.head(f) < f / 0
obj.head(f) == f
obj.head(f) == obj.a
obj.head(f) == ok
obj.head(f) == s
obj.head(f) >= b
obj.head(f) ^ f
obj.head(f, 0 / f, a - a)
obj.head(f, 0, 0.5) * a
obj.head(f, 0, arr, a) >= f
obj.head(f, a)
obj.head(f, arr != div)
obj.head(f, arr)
obj.head(f, arr) == obj
obj.head(f, b + f)
obj.head(f, b and true, s)
obj.head(f, b)
obj.head(f, b, s) * f / 1
obj.head(f, div != arr)
obj.head(f, div) != ok
obj.head(f, div, get(f, obj))
obj.head(f, div, true, div) ** obj.a
obj.head(f, f)
obj.head(f, f) != obj.a
obj.head(f, false ? true : 0)
obj.head(f, float(b))
obj.head(f, get(false, false))
obj.head(f, last(obj))
obj.head(f, nil != ok)
obj.head(f, obj)
obj.head(f, obj) != add
obj.head(f, ok && f)
obj.head(f, ok)
obj.head(f, ok, f ** f)
obj.head(f, s) && false ? add : ok
obj.head(f, s) >= a / b
obj.head(f, s, obj)
obj.head(f, s[b])
obj.head(false != 0)
obj.head(false != add)
obj.head(false != arr)
obj.head(false != b)
obj.head(false != div)
obj.head(false != f)
obj.head(false != obj)
obj.head(false != s)
obj.head(false && add)
obj.head(false && b)
obj.head(false && f)
obj.head(false && obj)
obj.head(false && s, obj?.head("a", nil, b))
obj.head(false && s, s[2])
obj.head(false == 0.5)
obj.head(false == a)
obj.head(false == add)
obj.head(false == f, true != 2)
obj.head(false == nil)
obj.head(false == obj)
obj.head(false ? add : add)
obj.head(false ? arr : ok)
obj.head(false ? obj : 0)
obj.head(false ? obj : s)
obj.head(false and "c")
obj.head(false and add)
obj.head(false and b)
obj.head(false and div)
obj.head(false and false)
obj.head(false and obj)
obj.head(false and s)
obj.head(false in nil)
obj.head(false or "b")
obj.head(false or b)
obj.head(false or f, get("a", arr))
obj.head(false or ok)
obj.head(false or s)
obj.head(false or s, ok ? 0 : 0.5)
obj.head(false || 0)
obj.head(false || 1)
obj.head(false || add)
obj.head(false || arr)
obj.head(false || b)
obj.head(false || obj, get(arr, div))
obj.head(false || s)
obj.head(false || true)
obj.head(false) && 2 == nil
obj.head(false) && arr == nil
obj.head(false) == a
obj.head(false, "b") || "b" startsWith "a"
obj.head(false, 0, nil, "c") == obj
obj.head(false, a) != arr
obj.head(false, arr, obj, 2, div) == arr
obj.head(false, f) != div
obj.head(false, obj) != a == ok
obj.head(false, ok) == obj.b
obj.head(filter("b", ok))
obj.head(filter("c", ok), obj, get("c", add))
obj.head(filter(arr, true))
obj.head(filter(obj, false))
obj.head(filter(s, ok))
obj.head(first("a", 0.5, s))
obj.head(first("b", add, nil, div))
obj.head(first(0))
obj.head(first(0.5))
obj.head(first(0.5), obj?.a) == obj
obj.head(first(0.5, ok))
obj.head(first(2))
obj.head(first(a))
obj.head(first(a, 1, f))
obj.head(first(add))
obj.head(first(arr))
obj.head(first(b, arr))
obj.head(first(false, obj))
obj.head(first(nil, "b", obj))
obj.head(first(obj))
obj.head(first(ok, b))
obj.head(first(ok, ok))
obj.head(first(s))
obj.head(float("a", a))
obj.head(float(0))
obj.head(float(1))
obj.head(float(2))
obj.head(float(a))
obj.head(float(a), ok and f)
obj.head(float(a, 0, a))
obj.head(float(a, b), add)
obj.head(float(add, 2))
obj.head(float(arr, b))
obj.head(float(b))
obj.head(float(div, obj, add, 0), false && obj)
obj.head(float(f))
obj.head(float(f), f)
obj.head(float(f, 0))
obj.head(float(ok, b))
obj.head(get("a"))
obj.head(get("a"))?.a
obj.head(get("a"), b)
obj.head(get("a", arr))
obj.head(get("a", b))
obj.head(get("a", div))
obj.head(get("a", f))
obj.head(get("a", obj))
obj.head(get("a", ok))
obj.head(get("b"))
obj.head(get("b", 0))
obj.head(get("b", a))
obj.head(get("b", add))
obj.head(get("b", arr))
obj.head(get("b", nil))
obj.head(get("b", obj, a))
obj.head(get("b", ok))
obj.head(get("b", s))
obj.head(get("c", a))
obj.head(get("c", arr))
obj.head(get("c", arr)) == a
obj.head(get("c", b))
obj.head(get(0))
obj.head(get(0, 0))
obj.head(get(0, add))
obj.head(get(0, arr))
obj.head(get(0, arr), obj)
obj.head(get(0, arr)?.b)
obj.head(get(0, b))
obj.head(get(0, div))
obj.head(get(0, f), b)
obj.head(get(0, ok))
obj.head(get(0, s))
obj.head(get(0, true))
obj.head(get(0.5))
obj.head(get(0.5, 0))
obj.head(get(0.5, arr))
obj.head(get(0.5, false))
obj.head(get(0.5, nil, arr, 1, 2))
obj.head(get(0.5, obj))
obj.head(get(0.5, obj), ok)
obj.head(get(1), map(arr, obj))?.b
obj.head(get(1, a))
obj.head(get(1, div))
obj.head(get(1, f))
obj.head(get(1, false))
obj.head(get(1, s))
obj.head(get(2, f))
obj.head(get(a, 0))
obj.head(get(a, 0.5))
obj.head(get(a, add))
obj.head(get(a, b))
obj.head(get(a, b), min(false))
obj.head(get(a, div))
obj.head(get(a, nil))
obj.head(get(a, nil), arr)
obj.head(get(a, obj))
obj.head(get(a, obj), div == nil)
obj.head(get(a, s))
obj.head(get(add, 0.5))
obj.head(get(add, 0.5), ok)
obj.head(get(add, 1))
obj.head(get(add, 2))
obj.head(get(add, a))
obj.head(get(add, arr))
obj.head(get(add, b))
obj.head(get(add, div))
obj.head(get(add, f))
obj.head(get(add, f, a, s))
obj.head(get(add, nil))
obj.head(get(add, obj))
obj.head(get(add, ok))
obj.head(get(add, s))
obj.head(get(arr))
obj.head(get(arr, 0.5))
obj.head(get(arr, 2))
obj.head(get(arr, a))
obj.head(get(arr, add))
obj.head(get(arr, arr))
obj.head(get(arr, f))
obj.head(get(arr, f)) * f
obj.head(get(arr, f), add)
obj.head(get(arr, f, obj, a))
obj.head(get(arr, nil))
obj.head(get(arr, obj))?.a
obj.head(get(arr, ok))
obj.head(get(arr, s))
obj.head(get(b))
obj.head(get(b, 0.5))
obj.head(get(b, 2))
obj.head(get(b, a))
obj.head(get(b, add))
obj.head(get(b, b))
obj.head(get(b, b), div, toJSON(arr))
obj.head(get(b, b), ok)
obj.head(get(b, div))
obj.head(get(b, f))
obj.head(get(b, nil))
obj.head(get(b, obj))
obj.head(get(b, ok))
obj.head(get(b, s))
obj.head(get(b, s))?.obj
obj.head(get(b, true))
obj.head(get(b, true), ok)?.a
obj.head(get(div))
obj.head(get(div, 0.5))
obj.head(get(div, a))
obj.head(get(div, add))
obj.head(get(div, b))
obj.head(get(div, b))?.obj
obj.head(get(div, div))
obj.head(get(div, nil))
obj.head(get(div, obj.b))
obj.head(get(div, ok))
obj.head(get(div, s)?.obj)
obj.head(get(div, true))
obj.head(get(f, 0))
obj.head(get(f, 0.5))
obj.head(get(f, a))
obj.head(get(f, add))
obj.head(get(f, arr))
obj.head(get(f, b))
obj.head(get(f, div))
obj.head(get(f, div, arr))
obj.head(get(f, nil))
obj.head(get(f, nil), add)
obj.head(get(f, nil, a), a)
obj.head(get(f, obj))
obj.head(get(f, true))
obj.head(get(false ? s : arr, obj?.head(a, add)))
obj.head(get(false, arr))
obj.head(get(false, div))
obj.head(get(false, false))
obj.head(get(false, ok))
obj.head(get(nil))
obj.head(get(nil, 0))
obj.head(get(nil, 0.5))
obj.head(get(nil, 1))
obj.head(get(nil, a), arr)
obj.head(get(nil, add))
obj.head(get(nil, add))?.b
obj.head(get(nil, div))
obj.head(get(nil, div)) != float(a ** 0)
obj.head(get(nil, f))
obj.head(get(nil, nil))
obj.head(get(nil, obj))
obj.head(get(nil, ok))
obj.head(get(nil, s))
obj.head(get(nil, s), a)
obj.head(get(nil, true))
obj.head(get(obj))
obj.head(get(obj), ok)
obj.head(get(obj, 0))
obj.head(get(obj, 1))
obj.head(get(obj, 1))?.b
obj.head(get(obj, a))
obj.head(get(obj, arr) != a)
obj.head(get(obj, arr))
obj.head(get(obj, arr))?.obj
obj.head(get(obj, b))
obj.head(get(obj, div))
obj.head(get(obj, f))
obj.head(get(obj, false))
obj.head(get(obj, nil))
obj.head(get(obj, obj))
obj.head(get(obj, ok))
obj.head(get(obj, s))
obj.head(get(obj, true))
obj.head(get(ok))
obj.head(get(ok, 0))
obj.head(get(ok, 0.5))
obj.head(get(ok, 1))
obj.head(get(ok, a))?.b
obj.head(get(ok, add))
obj.head(get(ok, add), obj)
obj.head(get(ok, arr))
obj.head(get(ok, div))
obj.head(get(ok, f))
obj.head(get(ok, false), map(arr, "a"), toJSON(0.5))
obj.head(get(ok, nil))
obj.head(get(ok, ok))
obj.head(get(ok, ok), 0 + 0.5)
obj.head(get(ok, s), a > 0.5)
obj.head(get(ok, s), arr[0:b])
obj.head(get(s))
obj.head(get(s, "a", ok))
obj.head(get(s, 0.5))
obj.head(get(s, 1))
obj.head(get(s, 1), b)
obj.head(get(s, a))
obj.head(get(s, a), obj.head(0.5, div))
obj.head(get(s, add))
obj.head(get(s, arr))
obj.head(get(s, div))
obj.head(get(s, div))?.b
obj.head(get(s, f))
obj.head(get(s, nil))
obj.head(get(s, obj))
obj.head(get(s, obj), get(a, f))
obj.head(get(s, ok), true ? b : "a")
obj.head(get(s, true))
obj.head(get(true && nil))
obj.head(get(true))
obj.head(get(true, 0))
obj.head(get(true, 0), arr)
obj.head(get(true, a))
obj.head(get(true, add))
obj.head(get(true, add), arr)
obj.head(get(true, arr))
obj.head(get(true, f), ok || 1)
obj.head(get(true, nil))
obj.head(int("b", arr, f))
obj.head(int("b", nil, a))
obj.head(int(a))
obj.head(int(a), string(true))
obj.head(int(arr, a, f))
obj.head(int(s, 0))
obj.head(keys(obj))
obj.head(last(0.5))
obj.head(last(0.5), arr)
obj.head(last(0.5), get(nil, ok))
obj.head(last(a))
obj.head(last(a, "a"))
obj.head(last(a, obj))
obj.head(last(add))
obj.head(last(add), ok)
obj.head(last(add, obj, add))
obj.head(last(arr))
obj.head(last(arr, s), f)
obj.head(last(b))
obj.head(last(b, b))
obj.head(last(div))
obj.head(last(f))
obj.head(last(f, b, b))
obj.head(last(false))
obj.head(last(obj))
obj.head(last(obj, 2, obj))
obj.head(last(obj, a, s))
obj.head(last(ok, arr, nil, ok))
obj.head(last(s))
obj.head(last(s, ok, a), nil == arr)
obj.head(len(add, add, s, obj))
obj.head(len(add, obj))
obj.head(len(arr))
obj.head(len(b, s))
obj.head(len(obj))
obj.head(len(obj, "a"))
obj.head(len(s) <= f)
obj.head(len(s))
obj.head(len(s, arr, "b"), obj?.b)
obj.head(lower(a, "b"))
obj.head(lower(a, div, "b"))
obj.head(lower(s))
obj.head(map("a", 0.5))
obj.head(map("a", a))
obj.head(map("a", nil))
obj.head(map("a", s))
obj.head(map("b", 0))
obj.head(map("b", div))
obj.head(map("b", f))
obj.head(map("b", nil))
obj.head(map("b", s))
obj.head(map("b", true))
obj.head(map("c", "b"))
obj.head(map("c", a))
obj.head(map("c", a), get(arr, div))
obj.head(map("c", arr))
obj.head(map("c", arr), ok)
obj.head(map("c", b))
obj.head(map("c", f))
obj.head(map("c", s))
obj.head(map(arr, "c"))
obj.head(map(arr, 0))
obj.head(map(arr, 1))
obj.head(map(arr, a))
obj.head(map(arr, arr))
obj.head(map(arr, b))
obj.head(map(arr, b), div != obj)
obj.head(map(arr, div))
obj.head(map(arr, f))
obj.head(map(arr, false))
obj.head(map(arr, nil))
obj.head(map(arr, obj), toJSON(b))
obj.head(map(arr, ok) == b)
obj.head(map(arr, ok))
obj.head(map(arr, s))
obj.head(map(obj, "a"))
obj.head(map(obj, "b"))
obj.head(map(obj, "c"))
obj.head(map(obj, 0))
obj.head(map(obj, 0.5))
obj.head(map(obj, a))
obj.head(map(obj, add))
obj.head(map(obj, div))
obj.head(map(obj, f))
obj.head(map(obj, false))
obj.head(map(obj, nil))
obj.head(map(obj, obj))
obj.head(map(obj, ok))
obj.head(map(obj, s))
obj.head(map(s, "a"))
obj.head(map(s, 0))
obj.head(map(s, 0.5))
obj.head(map(s, a))
obj.head(map(s, add))
obj.head(map(s, arr))
obj.head(map(s, div))
obj.head(map(s, f))
obj.head(map(s, false))
obj.head(map(s, get(f, f)))
obj.head(map(s, nil))
obj.head(map(s, nil), obj.a)
obj.head(map(s, obj))
obj.head(map(s, ok))
obj.head(map(s, ok), int(b))
obj.head(map(s, s))
obj.head(map(s, true))
obj.head(max("a"))
obj.head(max("c"))
obj.head(max(0.5))
obj.head(max(1))
obj.head(max(a))
obj.head(max(add))
obj.head(max(b))
obj.head(max(f))
obj.head(max(f), a)
obj.head(max(nil, 0), div)
obj.head(max(obj))
obj.head(max(ok))
obj.head(max(s))
obj.head(min(0))
obj.head(min(0, 0))
obj.head(min(0, a, f, f))
obj.head(min(a))
obj.head(min(a, f), obj)
obj.head(min(add))
obj.head(min(arr))
obj.head(min(div))
obj.head(min(f))
obj.head(min(nil))
obj.head(min(ok))
obj.head(min(s))
obj.head(min(true))
obj.head(nil != 0)
obj.head(nil != 0, a)
obj.head(nil != a)
obj.head(nil != add)
obj.head(nil != add, f)
obj.head(nil != f)
obj.head(nil != false)
obj.head(nil != obj)
obj.head(nil != true)
obj.head(nil != true, obj?.b)
obj.head(nil && true)
obj.head(nil == "a")
obj.head(nil == 0)
obj.head(nil == 0.5)
obj.head(nil == a)
obj.head(nil == add)
obj.head(nil == b, arr)
obj.head(nil == f)
obj.head(nil == nil, div, a)
obj.head(nil == obj)
obj.head(nil == s)
obj.head(nil and false)
obj.head(nil and true)
obj.head(nil in arr, a)
obj.head(nil in obj)
obj.head(nil || true, b % a)
obj.head(nil) != div
obj.head(nil) != s
obj.head(nil) == f / f
obj.head(nil) in obj?.obj
obj.head(nil)?.a
obj.head(nil)?.a?.a
obj.head(nil)?.b
obj.head(nil)?.b.obj
obj.head(nil)?.fn(div)
obj.head(nil)?.fn(map(arr, arr))
obj.head(nil)?.head(arr)
obj.head(nil)?.head(f ^ b)
obj.head(nil)?.obj
obj.head(nil)?.obj.a
obj.head(nil, "a", 0)?.obj
obj.head(nil, "b")?.a
obj.head(nil, "b")?.obj
obj.head(nil, "c")?.head(arr)
obj.head(nil, 0)?.b
obj.head(nil, 0, nil)?.obj
obj.head(nil, 0, obj, s)?.a
obj.head(nil, 0, s)?.b
obj.head(nil, 1)?.obj
obj.head(nil, 1, arr)?.obj
obj.head(nil, a)?.a.head(s, a)
obj.head(nil, a)?.b
obj.head(nil, a, 0)?.head(false or a)
obj.head(nil, a, a, arr)?.b
obj.head(nil, a, add)?.a
obj.head(nil, a, arr)?.b
obj.head(nil, a, b, true, a)?.b
obj.head(nil, a, f)?.b
obj.head(nil, add)?.b
obj.head(nil, add)?.b?.a
obj.head(nil, add, 2, ok) == ok
obj.head(nil, add, a)?.obj
obj.head(nil, add, b)?.a
obj.head(nil, add, b)?.fn(a)
obj.head(nil, add, b)?.obj
obj.head(nil, arr) == arr
obj.head(nil, arr)?.b
obj.head(nil, arr)?.b.obj
obj.head(nil, arr)?.obj
obj.head(nil, arr, 0.5, obj, ok)?.b
obj.head(nil, arr, arr)?.a
obj.head(nil, arr, div)?.a
obj.head(nil, arr, f)?.a
obj.head(nil, b)?.a
obj.head(nil, b)?.b?.obj
obj.head(nil, b)?.obj
obj.head(nil, b, 0, s, f)?.b
obj.head(nil, b, div) in arr
obj.head(nil, b, s)?.obj
obj.head(nil, div) == f
obj.head(nil, div)?.a
obj.head(nil, div)?.b
obj.head(nil, div, 0, b)?.b
obj.head(nil, div, a)?.b
obj.head(nil, div, nil, 1)?.obj
obj.head(nil, f)?.a
obj.head(nil, f)?.b.obj
obj.head(nil, f)?.obj
obj.head(nil, f, b, a)?.a?.b
obj.head(nil, f, div)?.a
obj.head(nil, f, div, arr)?.b
obj.head(nil, f, f)?.a
obj.head(nil, f, obj)?.a
obj.head(nil, false)?.a
obj.head(nil, false)?.b
obj.head(nil, nil)?.b
obj.head(nil, nil)?.obj
obj.head(nil, nil, add)?.a
obj.head(nil, nil, arr, nil, s)?.obj
obj.head(nil, obj)?.a
obj.head(nil, obj)?.b
obj.head(nil, obj)?.obj
obj.head(nil, obj, 1)?.b
obj.head(nil, obj, f, div, a)?.b
obj.head(nil, ok)?.a
obj.head(nil, ok)?.b
obj.head(nil, ok)?.obj
obj.head(nil, ok, 0.5)?.a
obj.head(nil, ok, f)?.head(ok)
obj.head(nil, ok, ok)?.obj
obj.head(nil, s)?.b
obj.head(nil, s)?.obj
obj.head(nil, s, a)?.b
obj.head(nil, true)?.a
obj.head(nil, true)?.b
obj.head(nil, true, 0)?.a
obj.head(nil, true, s)?.a
obj.head(none("c", false))
obj.head(none(arr, false))
obj.head(none(arr, ok))
obj.head(none(obj, false))
obj.head(none(obj, ok))
obj.head(none(s, false))
obj.head(none(s, ok))
obj.head(none(s, true))
obj.head(none(s, true), a)
obj.head(not (obj == obj))
obj.head(not false)
obj.head(not ok)
obj.head(not true)
obj.head(now("b"))
obj.head(now("c"))
obj.head(now(1, s, 0), add)
obj.head(now(a))
obj.head(now(add))
obj.head(now(arr))
obj.head(now(b))
obj.head(now(b, nil))
obj.head(now(div))
obj.head(now(f))
obj.head(now(f, a, s))
obj.head(now(false, a, 0.5, arr))
obj.head(now(nil))
obj.head(now(nil, obj))
obj.head(now(obj))
obj.head(now(obj, div, ok, obj))
obj.head(now(obj, ok))
obj.head(now(ok))
obj.head(now(ok, "b"))
obj.head(obj != "a")
obj.head(obj != 0)
obj.head(obj != a)
obj.head(obj != add)
obj.head(obj != arr)
obj.head(obj != b)
obj.head(obj != div)
obj.head(obj != f, filter("c", ok))
obj.head(obj != obj)
obj.head(obj != obj, b, true and 2)
obj.head(obj != obj, get(add, a))
obj.head(obj != ok)
obj.head(obj != s)
obj.head(obj && true)
obj.head(obj == 0)
obj.head(obj == 1)
obj.head(obj == add)
obj.head(obj == b)
obj.head(obj == div)
obj.head(obj == false)
obj.head(obj == nil)
obj.head(obj in nil)
obj.head(obj or true)
obj.head(obj)
obj.head(obj) != a ? nil : 2
obj.head(obj) != add
obj.head(obj) == obj.a
obj.head(obj) == s
obj.head(obj).a
obj.head(obj).b
obj.head(obj).b * a
obj.head(obj).fn(add(b, b))
obj.head(obj).head(add)
obj.head(obj).obj
obj.head(obj).obj != obj
obj.head(obj).obj.b
obj.head(obj)?.a
obj.head(obj)?.b
obj.head(obj)?.fn(a)
obj.head(obj)?.head(-0.5)
obj.head(obj)?.head(arr)
obj.head(obj)?.head(get(0.5 / f))
obj.head(obj)?.head(last(ok, "b" contains "a"))
obj.head(obj)?.head(s)
obj.head(obj)?.obj
obj.head(obj)?.obj == add
obj.head(obj)?.obj.obj
obj.head(obj)?.obj?.a
obj.head(obj)?.obj?.obj
obj.head(obj, "a").a
obj.head(obj, "a")?.obj
obj.head(obj, "a", add, arr, div)?.b
obj.head(obj, "b" in arr)
obj.head(obj, "b").b
obj.head(obj, "b").obj
obj.head(obj, "b")?.a
obj.head(obj, "b", "b", arr)?.a
obj.head(obj, "b", a).a
obj.head(obj, "b", b)?.a
obj.head(obj, "b", div, div, a).obj
obj.head(obj, "c").obj
obj.head(obj, "c")?.obj
obj.head(obj, "c", obj)?.a
obj.head(obj, 0 ** f)
obj.head(obj, 0) == add
obj.head(obj, 0).b
obj.head(obj, 0).obj
obj.head(obj, 0)?.a
obj.head(obj, 0)?.b
obj.head(obj, 0)?.obj
obj.head(obj, 0, "b")?.a
obj.head(obj, 0, "b")?.b
obj.head(obj, 0, 0.5)?.obj?.obj?.b
obj.head(obj, 0, 1, nil).obj
obj.head(obj, 0, b).b
obj.head(obj, 0, f, true).b
obj.head(obj, 0, false)?.b
obj.head(obj, 0, ok)?.obj
obj.head(obj, 0, s)?.a
obj.head(obj, 0.5 ^ b)
obj.head(obj, 0.5).a
obj.head(obj, 0.5).b
obj.head(obj, 0.5).obj
obj.head(obj, 0.5)?.a
obj.head(obj, 0.5, "c")?.a
obj.head(obj, 0.5, div)?.obj
obj.head(obj, 0.5, obj).b
obj.head(obj, 1).b
obj.head(obj, 1).obj
obj.head(obj, 1)?.a
obj.head(obj, 1, a).obj?.obj?.a
obj.head(obj, 1, false).obj
obj.head(obj, 2, "a")?.b
obj.head(obj, 2, true) != s
obj.head(obj, a)
obj.head(obj, a).a
obj.head(obj, a).b
obj.head(obj, a)?.b
obj.head(obj, a)?.obj
obj.head(obj, a, 0).a
obj.head(obj, a, 1)?.b
obj.head(obj, a, 2, a).b
obj.head(obj, a, a).b
obj.head(obj, a, a, false).b
obj.head(obj, a, add, add, s).a
obj.head(obj, a, add, s)?.obj
obj.head(obj, a, arr).b
obj.head(obj, a, ok, b)?.obj
obj.head(obj, a, s, 2).obj
obj.head(obj, add)
obj.head(obj, add).a
obj.head(obj, add).b
obj.head(obj, add).obj
obj.head(obj, add)?.a
obj.head(obj, add)?.b
obj.head(obj, add)?.head(div)
obj.head(obj, add)?.obj
obj.head(obj, add, "c", false, div).b
obj.head(obj, add, 0, add).b
obj.head(obj, add, obj)?.b
obj.head(obj, add, ok, ok).a
obj.head(obj, arr)
obj.head(obj, arr).a
obj.head(obj, arr).b
obj.head(obj, arr)?.a
obj.head(obj, arr)?.b
obj.head(obj, arr, add)?.a
obj.head(obj, arr, arr).obj
obj.head(obj, arr, b).b
obj.head(obj, arr, b)?.obj
obj.head(obj, arr, b, obj, div)?.b
obj.head(obj, arr, obj, add)?.b
obj.head(obj, arr, ok).b
obj.head(obj, arr, ok).obj
obj.head(obj, arr, ok)?.obj
obj.head(obj, arr, ok, 0).a
obj.head(obj, arr, ok, arr).b
obj.head(obj, arr, s, b, add)?.obj
obj.head(obj, b)
obj.head(obj, b).a
obj.head(obj, b).b
obj.head(obj, b).obj
obj.head(obj, b)?.b
obj.head(obj, b)?.obj
obj.head(obj, b)?.obj?.obj
obj.head(obj, b, add).obj
obj.head(obj, b, b)?.a
obj.head(obj, b, b, a).obj
obj.head(obj, b, nil)?.obj
obj.head(obj, b, true)?.b
obj.head(obj, div)
obj.head(obj, div).a
obj.head(obj, div).obj
obj.head(obj, div)?.a
obj.head(obj, div)?.b
obj.head(obj, div)?.head(div)
obj.head(obj, div)?.obj
obj.head(obj, div, "a", a).obj
obj.head(obj, div, "b")?.a
obj.head(obj, div, "b")?.b
obj.head(obj, div, 0).a
obj.head(obj, div, 0, ok).b
obj.head(obj, div, arr, add)?.b
obj.head(obj, div, f, div, add)?.obj
obj.head(obj, div, f, obj, ok)?.obj
obj.head(obj, div, obj)
obj.head(obj, div, obj, a)?.obj
obj.head(obj, div, s)
obj.head(obj, f <= 0.5)?.a
obj.head(obj, f)
obj.head(obj, f).a
obj.head(obj, f).b
obj.head(obj, f).obj
obj.head(obj, f)?.a
obj.head(obj, f)?.b
obj.head(obj, f, 2)?.head(arr)
obj.head(obj, f, arr, a, "a").b
obj.head(obj, f, f, true, s)?.obj
obj.head(obj, f, obj).b
obj.head(obj, f, obj)?.a
obj.head(obj, false).a
obj.head(obj, false).b
obj.head(obj, false).obj
obj.head(obj, false)?.a
obj.head(obj, false, f).obj
obj.head(obj, false, ok, f).obj
obj.head(obj, false, s, ok).a
obj.head(obj, get(arr, b), b < b).b
obj.head(obj, get(ok, arr))
obj.head(obj, last(add))
obj.head(obj, map(obj, nil))
obj.head(obj, nil).a
obj.head(obj, nil).b
obj.head(obj, nil)?.a
obj.head(obj, nil)?.b
obj.head(obj, nil)?.obj
obj.head(obj, nil, 1)?.obj
obj.head(obj, nil, a).b
obj.head(obj, nil, arr)?.a
obj.head(obj, nil, div).obj
obj.head(obj, nil, obj).a
obj.head(obj, not ok)
obj.head(obj, obj)
obj.head(obj, obj).b
obj.head(obj, obj).obj
obj.head(obj, obj)?.a
obj.head(obj, obj)?.obj
obj.head(obj, obj, arr).obj
obj.head(obj, obj, b).a
obj.head(obj, obj, b, ok, div).obj
obj.head(obj, obj, div)
obj.head(obj, obj, div)?.b
obj.head(obj, obj, false)?.a
obj.head(obj, obj, s)?.a
obj.head(obj, obj.obj)
obj.head(obj, ok in nil)
obj.head(obj, ok or 0, s == "a", add, max("c"))
obj.head(obj, ok)
obj.head(obj, ok) and false ? 1 : arr
obj.head(obj, ok).a
obj.head(obj, ok).b
obj.head(obj, ok)?.a
obj.head(obj, ok)?.b
obj.head(obj, ok)?.obj
obj.head(obj, ok, "b")?.a
obj.head(obj, ok, a)?.head(f)
obj.head(obj, ok, add).obj
obj.head(obj, ok, b).b
obj.head(obj, ok, f)?.b
obj.head(obj, ok, nil)?.a
obj.head(obj, ok, obj)?.b
obj.head(obj, ok, s)?.a
obj.head(obj, ok, true, s)?.obj
obj.head(obj, s)
obj.head(obj, s).a
obj.head(obj, s).b
obj.head(obj, s)?.a
obj.head(obj, s)?.b
obj.head(obj, s)?.obj
obj.head(obj, s, 0, nil).a
obj.head(obj, s, 2, b)?.obj
obj.head(obj, s, a)?.b
obj.head(obj, s, b)?.a
obj.head(obj, s, div, s)?.obj
obj.head(obj, true != 0.5, add, abs(b))
obj.head(obj, true) == obj?.b
obj.head(obj, true).b
obj.head(obj, true)?.obj
obj.head(obj, true)[s]
obj.head(obj, true, "a").b
obj.head(obj, true, "a", div, true)?.a
obj.head(obj.a)
obj.head(obj.a, f && false)
obj.head(obj.a, map(obj, "a"), obj)
obj.head(obj.b)
obj.head(obj.b, 0 == obj)
obj.head(obj.b, 0.5 != nil)
obj.head(obj.b, arr)
obj.head(obj.b, false ? 0 : add)
obj.head(obj.b, true ? arr : 0)
obj.head(obj.fn(0))
obj.head(obj.fn(a))
obj.head(obj.fn(b))
obj.head(obj.head(0))
obj.head(obj.head(0, b, b, obj))
obj.head(obj.head(0.5), string(f, a))
obj.head(obj.head(1, ok, b, 0, div))
obj.head(obj.head(a))
obj.head(obj.head(a), arr)
obj.head(obj.head(a, b))
obj.head(obj.head(add))
obj.head(obj.head(add, a, false))
obj.head(obj.head(arr))
obj.head(obj.head(arr), f)
obj.head(obj.head(arr), ok)
obj.head(obj.head(arr, 0.5))
obj.head(obj.head(b, add))
obj.head(obj.head(b, obj, ok))
obj.head(obj.head(div))
obj.head(obj.head(false))
obj.head(obj.head(false, false, "a", "c", 2))
obj.head(obj.head(nil))
obj.head(obj.head(nil, b))
obj.head(obj.head(nil, nil))
obj.head(obj.head(obj))
obj.head(obj.head(obj, s, a, s, add)).obj
obj.head(obj.head(ok))
obj.head(obj.head(ok, b))
obj.head(obj.head(ok, s, 0))
obj.head(obj.head(s))
obj.head(obj.head(true))
obj.head(obj.obj)
obj.head(obj.obj)?.a
obj.head(obj.obj)?.b
obj.head(obj.obj, div, b)
obj.head(obj.obj, f)
obj.head(obj?.a)
obj.head(obj?.a, first(div))
obj.head(obj?.a, get(div, add))
obj.head(obj?.a, ok)
obj.head(obj?.b)
obj.head(obj?.b, a)
obj.head(obj?.b, div)
obj.head(obj?.b, f)
obj.head(obj?.b, get(0, div))
obj.head(obj?.b, s)
obj.head(obj?.c)
obj.head(obj?.fn(1))
obj.head(obj?.fn(a))
obj.head(obj?.fn(b))
obj.head(obj?.head("a", 1))
obj.head(obj?.head("a", ok, 0.5, a))
obj.head(obj?.head("b"))
obj.head(obj?.head(0.5))
obj.head(obj?.head(0.5), obj?.obj)
obj.head(obj?.head(0.5, add))
obj.head(obj?.head(1))
obj.head(obj?.head(2))
obj.head(obj?.head(2, f, 0.5, "b", b))
obj.head(obj?.head(a))
obj.head(obj?.head(a, f, obj, obj, nil))
obj.head(obj?.head(add))
obj.head(obj?.head(arr))
obj.head(obj?.head(arr, true))
obj.head(obj?.head(b))
obj.head(obj?.head(b, a), a && true)
obj.head(obj?.head(b, b))
obj.head(obj?.head(div))
obj.head(obj?.head(div), get(s, 1))
obj.head(obj?.head(f), get(nil, a, "b"))
obj.head(obj?.head(false))
obj.head(obj?.head(false, arr))
obj.head(obj?.head(false, false))
obj.head(obj?.head(false, obj), b)
obj.head(obj?.head(nil))
obj.head(obj?.head(nil, a))
obj.head(obj?.head(nil, true), a / f)
obj.head(obj?.head(obj))
obj.head(obj?.head(obj).head(arr))
obj.head(obj?.head(obj, div, obj))
obj.head(obj?.head(ok))
obj.head(obj?.head(ok, "b", true, b, f))
obj.head(obj?.head(ok, b, false))
obj.head(obj?.head(ok, ok, ok))
obj.head(obj?.head(s))
obj.head(obj?.head(s, "b"), b, a)
obj.head(obj?.head(true, ok))
obj.head(obj?.obj)
obj.head(obj?.obj).a
obj.head(obj?.obj).obj
obj.head(obj?.obj)?.obj
obj.head(obj?.obj, add != nil)
obj.head(obj?.obj, b)
obj.head(obj?.obj, obj?.obj)
obj.head(obj[s])?.obj
obj.head(ok != "b", obj.a)
obj.head(ok != 0)
obj.head(ok != add)
obj.head(ok != arr)
obj.head(ok != f)
obj.head(ok != nil)
obj.head(ok != obj)
obj.head(ok != ok)
obj.head(ok != s)
obj.head(ok != true)
obj.head(ok && "c")
obj.head(ok && "c", ok)
obj.head(ok && 0)
obj.head(ok && 0, s)
obj.head(ok && 0.5)
obj.head(ok && a)
obj.head(ok && add)
obj.head(ok && add, div)
obj.head(ok && arr)
obj.head(ok && arr, a ^ 0, add)
obj.head(ok && b)
obj.head(ok && div)
obj.head(ok && f)
obj.head(ok && false)
obj.head(ok && nil)
obj.head(ok && s)
obj.head(ok && true)
obj.head(ok == 0)
obj.head(ok == 0.5)
obj.head(ok == 2, a / 0.5)
obj.head(ok == a)
obj.head(ok == add)
obj.head(ok == arr)
obj.head(ok == b)
obj.head(ok == f)
obj.head(ok == false)
obj.head(ok == ok)
obj.head(ok == s)
obj.head(ok ? 0 : add)
obj.head(ok ? 2 : s)
obj.head(ok ? add : 0)
obj.head(ok ? arr : false)
obj.head(ok ? arr : ok)
obj.head(ok ? b : f)
obj.head(ok ? b : nil)
obj.head(ok ? div : 0)
obj.head(ok ? obj : s)
obj.head(ok ? ok : obj)
obj.head(ok ? ok : s)
obj.head(ok ? s : add)
obj.head(ok and a) == obj
obj.head(ok and add)
obj.head(ok and arr)
obj.head(ok and div)
obj.head(ok and f)
obj.head(ok and obj)
obj.head(ok and true)
obj.head(ok in map("b", nil))
obj.head(ok or "a")
obj.head(ok or "c")
obj.head(ok or 0)
obj.head(ok or 1)
obj.head(ok or a)
obj.head(ok or add)
obj.head(ok or div)
obj.head(ok or false)
obj.head(ok or int(a)?.a?.b)
obj.head(ok or obj)
obj.head(ok or ok)
obj.head(ok or s, get(0, nil))
obj.head(ok || "a")
obj.head(ok || a)
obj.head(ok || add)
obj.head(ok || arr)
obj.head(ok || arr, any(obj, ok), b)
obj.head(ok || div)
obj.head(ok || f)
obj.head(ok || nil)
obj.head(ok || ok)
obj.head(ok || s)
obj.head(ok)
obj.head(ok) != add
obj.head(ok) != arr
obj.head(ok) != f
obj.head(ok) != obj.a
obj.head(ok) && obj.a
obj.head(ok) == add
obj.head(ok) == string(a)
obj.head(ok) ? arr : ok
obj.head(ok) or !false
obj.head(ok) or ok
obj.head(ok, 1) == obj?.a
obj.head(ok, 2, 0) != ok
obj.head(ok, a + a)
obj.head(ok, a <= a)
obj.head(ok, a) == obj
obj.head(ok, add)
obj.head(ok, add) && obj.b
obj.head(ok, arr, "a") or f != nil
obj.head(ok, div)
obj.head(ok, div) || obj.a.head(ok, a.head(nil, div) < false < "c", add)
obj.head(ok, f != "a")
obj.head(ok, f)
obj.head(ok, false) == add(1, 1)
obj.head(ok, get(a, obj))
obj.head(ok, get(nil, a))
obj.head(ok, map(obj, f))
obj.head(ok, obj)
obj.head(ok, obj.head(f))
obj.head(ok, obj.obj)
obj.head(ok, ok, div)
obj.head(ok, s && false)
obj.head(ok, s)
obj.head(ok, s, add)
obj.head(one("c", ok))
obj.head(one(obj, ok))
obj.head(one(s, false))
obj.head(one(s, ok))
obj.head(repeat("b", b))
obj.head(repeat(s, 0))
obj.head(s != "c")
obj.head(s != 2, 0 .. b)
obj.head(s != add, f ^ 0)
obj.head(s != arr)
obj.head(s != false)
obj.head(s != obj)
obj.head(s != ok)
obj.head(s != s)
obj.head(s + "a")
obj.head(s + s)
obj.head(s < "b")
obj.head(s < s)
obj.head(s <= "b", arr)
obj.head(s <= s)
obj.head(s == a)
obj.head(s == arr)
obj.head(s == b)
obj.head(s == div)
obj.head(s == f, a)
obj.head(s == false)
obj.head(s == ok)
obj.head(s == true)
obj.head(s > "b")
obj.head(s >= "c")
obj.head(s and false)
obj.head(s contains s)
obj.head(s contains s, obj.a)
obj.head(s matches "b")
obj.head(s matches "c")
obj.head(s startsWith s)
obj.head(s)
obj.head(s) != "a" ? ok : s
obj.head(s) != a
obj.head(s) != obj?.obj
obj.head(s) != string(b)
obj.head(s) != true ? f : true
obj.head(s) == 0 .. b
obj.head(s) == div
obj.head(s) == div != ok
obj.head(s) == f
obj.head(s) == nil ? arr : 0
obj.head(s) == obj
obj.head(s) in obj
obj.head(s) in obj.obj
obj.head(s) matches s ? obj : b
obj.head(s) or false and ok
obj.head(s)[a]
obj.head(s)[obj?.b]
obj.head(s, "a" == "a")
obj.head(s, 0) <= s
obj.head(s, 0, nil, a) <= s
obj.head(s, 0.5 ** 1)
obj.head(s, 0.5, 0.5) >= s
obj.head(s, 2)[obj?.a]
obj.head(s, a + f)
obj.head(s, a)
obj.head(s, all(arr, true), 0.5 * 0.5)
obj.head(s, b ^ 0)
obj.head(s, b)
obj.head(s, b) == div
obj.head(s, div)
obj.head(s, f * b)
obj.head(s, f == obj)
obj.head(s, f)
obj.head(s, f, obj)
obj.head(s, false and nil)
obj.head(s, false, true)[b]
obj.head(s, get("a", obj), s != f)
obj.head(s, nil != arr, ok)
obj.head(s, now(add))
obj.head(s, now(nil))
obj.head(s, obj == arr)
obj.head(s, obj)
obj.head(s, ok, a)
obj.head(s, s)
obj.head(s, s) != obj.a
obj.head(s[0])
obj.head(s[a:1])
obj.head(s[f])
obj.head(splitAfter("c", "c"))
obj.head(string("a"), obj, a)
obj.head(string("c", ok, ok))
obj.head(string(0, ok))
obj.head(string(0.5, "a", b))
obj.head(string(1))
obj.head(string(2, nil))
obj.head(string(a))
obj.head(string(a, nil))
obj.head(string(add))
obj.head(string(add, a, arr, f))
obj.head(string(arr))
obj.head(string(arr, b, f, s, f))
obj.head(string(arr, obj, s, arr), all("c", ok))
obj.head(string(b))
obj.head(string(b, arr))
obj.head(string(div))
obj.head(string(div), ok == 1)
obj.head(string(f, ok))
obj.head(string(obj, false))
obj.head(string(ok))
obj.head(string(ok, true))
obj.head(string(s))
obj.head(string(s), div)
obj.head(string(s, 0, obj))
obj.head(string(true, div, obj, b))
obj.head(toBase64("a", "b"))
obj.head(toBase64("c"))
obj.head(toBase64("c", b, a))
obj.head(toBase64(s))
obj.head(toJSON("a"))
obj.head(toJSON("b"))
obj.head(toJSON("b"), obj)
obj.head(toJSON("c"))
obj.head(toJSON("c", s))
obj.head(toJSON(0))
obj.head(toJSON(0, 0.5))
obj.head(toJSON(0.5 < a))
obj.head(toJSON(0.5))
obj.head(toJSON(0.5, f, arr))
obj.head(toJSON(1, ok, arr))
obj.head(toJSON(2), f, 0.5 < f)
obj.head(toJSON(a, f, 0, f))
obj.head(toJSON(arr))
obj.head(toJSON(b, add, ok))
obj.head(toJSON(b, f, b))
obj.head(toJSON(f))
obj.head(toJSON(f, "b"))
obj.head(toJSON(f, add, nil, obj))
obj.head(toJSON(f, div))
obj.head(toJSON(false), ok)
obj.head(toJSON(false, f))
obj.head(toJSON(nil))
obj.head(toJSON(nil, div))
obj.head(toJSON(ok))
obj.head(toJSON(ok, obj, f))
obj.head(toJSON(s, nil, ok))
obj.head(toJSON(true), string(nil))
obj.head(trim(s))
obj.head(trimPrefix("c"))
obj.head(trimPrefix(s), s)
obj.head(trimSuffix("b"))
obj.head(trimSuffix("c"))
obj.head(trimSuffix(s))
obj.head(true != 0)
obj.head(true != add)
obj.head(true != add, b == false)
obj.head(true != div)
obj.head(true != f, a)
obj.head(true != obj)
obj.head(true != ok, string(false, b, b, arr))
obj.head(true && a) != f
obj.head(true && add, get(nil, ok))
obj.head(true && ok)
obj.head(true && s)
obj.head(true == "a")
obj.head(true == 0.5)
obj.head(true == a)
obj.head(true == arr, ok)
obj.head(true == f)
obj.head(true == nil)
obj.head(true ? add : false)
obj.head(true ? arr : b)
obj.head(true ? b : ok startsWith add.fn(true))
obj.head(true ? div : arr, b)
obj.head(true ? f : "b", s)
obj.head(true ? obj : f)
obj.head(true ? obj : nil)
obj.head(true ? s : "a")
obj.head(true and a)
obj.head(true and arr)
obj.head(true and b, s)
obj.head(true and div)
obj.head(true and nil)
obj.head(true and obj)
obj.head(true in arr)
obj.head(true in nil)
obj.head(true or 0)
obj.head(true or 1, b)
obj.head(true or a)
obj.head(true or arr)
obj.head(true or b)
obj.head(true or obj)
obj.head(true or ok)
obj.head(true || arr)
obj.head(true || obj)
obj.head(true) != b
obj.head(true) != obj
obj.head(true) && obj?.obj?.b
obj.head(true) == f
obj.head(true, 0) or ok
obj.head(true, add) or obj.b
obj.head(true, add, b) && ok
obj.head(true, div) || 0 == f
obj.head(true, f) == s
obj.head(upper("b"), b)
obj.head(upper("c"))
obj.head(upper("c"), b)
obj.head(upper(a, "c"))
obj.head(upper(s))
obj.head(upper(s, a, 0.5, s))
obj.head(upper(true, "a"))
obj.head(values(obj))
obj.head({"a": add})
obj.head({"b": add, "b": b, "c": s})
obj.obj
obj.obj != 2 % 1
obj.obj != a
obj.obj != a / 1
obj.obj != a == true
obj.obj != a ? f : true
obj.obj != add
obj.obj != add(a, a)
obj.obj != any(arr, true)
obj.obj != arr
obj.obj != arr ? false : b
obj.obj != b
obj.obj != b .. b
obj.obj != b ? a : s
obj.obj != div
obj.obj != div(b, b)
obj.obj != f
obj.obj != f != nil
obj.obj != f / f
obj.obj != float(b)
obj.obj != min(b)
obj.obj != obj
obj.obj != obj.a
obj.obj != obj.head(0)
obj.obj != obj?.a
obj.obj != obj?.b
obj.obj != ok
obj.obj != s
obj.obj != string(0.5)
obj.obj != string(2)
obj.obj && !false
obj.obj == -b
obj.obj == 0 == nil ? get(arr, a) : ok
obj.obj == 2 ** f
obj.obj == a
obj.obj == a ** f
obj.obj == add
obj.obj == add ? arr : obj
obj.obj == add ? div : "c"
obj.obj == add(a, 0)
obj.obj == any(arr, false)
obj.obj == arr
obj.obj == b
obj.obj == div
obj.obj == div != ok
obj.obj == f
obj.obj == f == ok
obj.obj == f ? div : 0.5
obj.obj == none(arr, ok)
obj.obj == not true
obj.obj == obj
obj.obj == obj.obj
obj.obj == obj.obj?.obj
obj.obj == obj?.b
obj.obj == obj?.head(0, ok)
obj.obj == ok
obj.obj == ok == ok
obj.obj == s
obj.obj == true ? 1 : a
obj.obj == true ? nil : "a"
obj.obj in arr
obj.obj in map(arr, "a")
obj.obj or "b" == "a"
obj.obj or false and obj?.b?.b
obj.obj.a
obj.obj.a != b
obj.obj.a ** a
obj.obj.b
obj.obj.b ** b
obj.obj.b .. b
obj.obj.b < b
obj.obj.b ^ -f ^ -f
obj.obj.obj
obj.obj.obj.a
obj.obj.obj.b
obj.obj.obj.obj
obj.obj.obj?.a
obj.obj.obj?.b
obj.obj.obj?.obj
obj.obj?.a
obj.obj?.a ** f
obj.obj?.a == arr
obj.obj?.b
obj.obj?.b != add
obj.obj?.b * f
obj.obj?.obj
obj.obj?.obj != b
obj.obj?.obj.a
obj.obj?.obj.b
obj.obj?.obj.obj
obj.obj?.obj?.a
obj.obj?.obj?.b
obj.obj?.obj?.obj
obj.obj?.obj[s]
obj.obj[obj.head(nil)]
obj.obj[s]
obj.obj[toJSON(s)]
obj.obj[trimPrefix(s)]
obj?.a
obj?.a != (ok and ok)
obj?.a != a
obj?.a != add
obj?.a != arr
obj?.a != b
obj?.a != div
obj?.a != f
obj?.a != f ** a
obj?.a != obj
obj?.a != obj.head(s, div, "b", 1)
obj?.a != obj.obj
obj?.a != obj?.a
obj?.a != obj?.b
obj?.a != ok
obj?.a != ok ? b : arr
obj?.a != s
obj?.a != s != false
obj?.a != toJSON(arr)
obj?.a != trimPrefix("a")
obj?.a % a
obj?.a % b
obj?.a % obj.a
obj?.a % obj?.b
obj?.a * -0.5
obj?.a * a
obj?.a * arr[a]
obj?.a * b
obj?.a * f
obj?.a * min(f, f)
obj?.a * obj.a
obj?.a ** a
obj?.a ** abs(0)
obj?.a ** add(b, 0)
obj?.a ** b
obj?.a ** f
obj?.a ** obj?.head(f, ok)
obj?.a + a
obj?.a + abs(a)
obj?.a + add(0, 0)
obj?.a + arr[b]
obj?.a + b
obj?.a + f
obj?.a + f ** a
obj?.a + obj.a
obj?.a + obj?.a
obj?.a + obj?.b
obj?.a - 0 % 1
obj?.a - 0 * 0
obj?.a - 0 * 0.5
obj?.a - 0 * 2
obj?.a - a
obj?.a - b
obj?.a - f
obj?.a - obj.b
obj?.a - obj?.a
obj?.a .. a
obj?.a .. b
obj?.a .. count(arr, true)
obj?.a .. div(b, 2)
obj?.a .. obj.b
obj?.a .. obj?.a
obj?.a / (b + f)
obj?.a / a
obj?.a / b
obj?.a / b ** f
obj?.a / f
obj?.a / obj.head(b, a)
obj?.a / obj?.b
obj?.a < a
obj?.a < a ? "c" : add
obj?.a < a ? s : false
obj?.a < b
obj?.a < f
obj?.a < float(b)
obj?.a < obj.a
obj?.a < obj?.a
obj?.a <= 0 * 0.5
obj?.a <= 0 == false
obj?.a <= 2 ? b : ok
obj?.a <= a
obj?.a <= a + f
obj?.a <= b
obj?.a <= b + a
obj?.a <= count(arr, ok)
obj?.a <= div(b, a)
obj?.a <= f
obj?.a <= f ^ f
obj?.a <= len(arr)
obj?.a <= obj.head(0.5, add, false, nil)
obj?.a <= obj?.b
obj?.a == -1
obj?.a == 0.5 ^ a
obj?.a == a
obj?.a == a ** f
obj?.a == add
obj?.a == arr
obj?.a == b
obj?.a == b ? ok : obj
obj?.a == count(arr, ok)
obj?.a == div
obj?.a == div ? 2 : true
obj?.a == div ? b : div
obj?.a == div ? s : b
obj?.a == f
obj?.a == f != ok
obj?.a == f ^ 0.5
obj?.a == min(2, 0)
obj?.a == nil ? 0 : a
obj?.a == obj
obj?.a == ok
obj?.a == s
obj?.a == toJSON(s)
obj?.a > -1
obj?.a > 1 ? 2 : 0.5
obj?.a > a
obj?.a > a ^ f
obj?.a > b
obj?.a > b + a
obj?.a > b ? "b" : obj.a
obj?.a > f
obj?.a > f * b
obj?.a > get(arr, 0)
obj?.a > obj.a
obj?.a > obj?.a
obj?.a > obj?.b
obj?.a >= 0 != nil
obj?.a >= 0 * 0
obj?.a >= 2 != nil
obj?.a >= 2 / a
obj?.a >= a
obj?.a >= b
obj?.a >= div(b, a)
obj?.a >= f
obj?.a >= f ? true : a == obj?.a?.a
obj?.a >= obj.a
obj?.a >= obj.b
obj?.a >= obj.head(2, obj)
obj?.a >= obj?.a
obj?.a >= obj?.head(f, f)
obj?.a ^ (b * 1)
obj?.a ^ -b
obj?.a ^ a
obj?.a ^ arr[b]
obj?.a ^ b
obj?.a ^ f
obj?.a ^ len(s)
obj?.a ^ obj.a
obj?.a ^ obj?.a
obj?.a ^ obj?.b
obj?.a ^ obj?.head(b, "c", 1)
obj?.a in arr
obj?.a in values(obj)
obj?.a || !true
obj?.a || not false
obj?.b
obj?.b != "a" ? f : false
obj?.b != "a" ? nil : nil
obj?.b != 0 ** f
obj?.b != 0.5 + b
obj?.b != 2 * b
obj?.b != a
obj?.b != a ? a : add
obj?.b != a ? false : b
obj?.b != add
obj?.b != add == nil
obj?.b != add ? 0 : "a"
obj?.b != arr
obj?.b != arr[a]
obj?.b != b
obj?.b != b ** 0
obj?.b != div
obj?.b != div ? div : 2
obj?.b != f
obj?.b != float(b)
obj?.b != map(arr, a)
obj?.b != map(arr, arr)
obj?.b != max(0)
obj?.b != min(a)
obj?.b != obj
obj?.b != obj.head(b, b)
obj?.b != obj.obj
obj?.b != obj?.a
obj?.b != ok
obj?.b != s
obj?.b != toBase64(s)
obj?.b % -a
obj?.b % a
obj?.b % b
obj?.b % get(arr, 2)
obj?.b % obj.a
obj?.b % obj.head(a, f, arr)
obj?.b % obj?.a
obj?.b % obj?.head(1)
obj?.b * (a + a)
obj?.b * (f + b)
obj?.b * 0 ^ f
obj?.b * a
obj?.b * a ** b
obj?.b * a / f
obj?.b * b
obj?.b * div(b, a)
obj?.b * f
obj?.b * float(b)
obj?.b * obj.a
obj?.b * obj.head(2, add)
obj?.b * obj.head(b, 0)
obj?.b * obj?.b
obj?.b ** (0 + b)
obj?.b ** (b + b)
obj?.b ** a
obj?.b ** add(a, 0)
obj?.b ** b
obj?.b ** b ^ 0.5
obj?.b ** f
obj?.b ** max(0)
obj?.b ** obj.a
obj?.b ** obj.b
obj?.b ** obj.head(a)
obj?.b ** obj?.a
obj?.b + a
obj?.b + add(b, 2)
obj?.b + b
obj?.b + b * f
obj?.b + div(a, 2)
obj?.b + obj.a
obj?.b + obj.b
obj?.b + obj?.b
obj?.b - -a
obj?.b - 0 * 0
obj?.b - 0 + a
obj?.b - 0 ^ b
obj?.b - a
obj?.b - a + a
obj?.b - b
obj?.b - b - 1
obj?.b - f
obj?.b - f ** a
obj?.b - obj.a
obj?.b - obj.b
obj?.b - obj?.a
obj?.b .. 2 - 0
obj?.b .. a
obj?.b .. add(b, a)
obj?.b .. b
obj?.b .. obj.b
obj?.b .. obj?.a
obj?.b .. obj?.b
obj?.b .. obj?.fn(a)
obj?.b / (0 - b)
obj?.b / 0 * f
obj?.b / 0.5 ** b
obj?.b / a
obj?.b / b
obj?.b / count(arr, ok)
obj?.b / div(a, b)
obj?.b / f
obj?.b / get(arr, 0)
obj?.b / obj.b
obj?.b / obj?.a
obj?.b / obj?.b
obj?.b < 0 != ok
obj?.b < 1 + 2
obj?.b < 1 - a
obj?.b < a
obj?.b < add(b, 0)
obj?.b < b
obj?.b < b != ok
obj?.b < f
obj?.b < f * b
obj?.b < obj?.b
obj?.b <= -a
obj?.b <= a
obj?.b <= add(0, 1)
obj?.b <= b
obj?.b <= f
obj?.b <= f + b
obj?.b <= f / 2
obj?.b <= f / b
obj?.b <= obj?.b
obj?.b == !false
obj?.b == 0 * a
obj?.b == 1 .. 0
obj?.b == a
obj?.b == a + f
obj?.b == add
obj?.b == arr
obj?.b == arr ? add : s
obj?.b == b
obj?.b == b - a
obj?.b == div
obj?.b == f
obj?.b == obj
obj?.b == obj.obj
obj?.b == obj?.b
obj?.b == obj?.obj
obj?.b == ok
obj?.b == s
obj?.b == s == nil
obj?.b == s == ok
obj?.b == s ? 0.5 : "a"
obj?.b == s ? add : obj
obj?.b == upper("c")
obj?.b > 0 * a
obj?.b > a
obj?.b > b
obj?.b > b ^ 0
obj?.b > f
obj?.b > max(1)
obj?.b > min(0.5)
obj?.b >= -a
obj?.b >= 0 ** a
obj?.b >= 0.5 != true
obj?.b >= 0.5 ? div : arr
obj?.b >= a
obj?.b >= b
obj?.b >= b + 0
obj?.b >= b + b
obj?.b >= div(b, 1)
obj?.b >= f
obj?.b >= max(f, f)
obj?.b >= obj.a
obj?.b >= obj.head(a, arr, add)
obj?.b >= obj?.b
obj?.b ^ (0 * f)
obj?.b ^ -b
obj?.b ^ a
obj?.b ^ arr[2]
obj?.b ^ b
obj?.b ^ f
obj?.b ^ int(f)
obj?.b ^ obj.a
obj?.b ^ obj.head(0)
obj?.b ^ obj?.head(obj, obj, a).a
obj?.b and (true || false)
obj?.b in arr
obj?.b in arr ? arr : a
obj?.b in map(arr, true)
obj?.c != div
obj?.c != obj
obj?.c?.a
obj?.c?.a?.b
obj?.c?.b
obj?.c?.b.obj
obj?.c?.fn(div)
obj?.c?.obj
obj?.c?.obj.b
obj?.fn(-0)
obj?.fn(-1)
obj?.fn(-2)
obj?.fn(-a)
obj?.fn(-b)
obj?.fn(0 % a)
obj?.fn(0 * a)
obj?.fn(0 + 0)
obj?.fn(0 + a)
obj?.fn(0 + b)
obj?.fn(0 - 0)
obj?.fn(0 - b)
obj?.fn(0 or false)
obj?.fn(0) != a
obj?.fn(0) != ok
obj?.fn(0) != {"b": 1, "a": div}
obj?.fn(0) ** f
obj?.fn(0) + b
obj?.fn(0) / b
obj?.fn(0) == a
obj?.fn(0) == add
obj?.fn(0) == obj
obj?.fn(0) >= b
obj?.fn(0) ^ b
obj?.fn(0) ^ obj?.a
obj?.fn(1 % a)
obj?.fn(1 * b)
obj?.fn(1 + 0)
obj?.fn(1 + a)
obj?.fn(1 - b)
obj?.fn(1) != string(f)
obj?.fn(1) * f / b
obj?.fn(1) / b
obj?.fn(1) < obj.head(0.5, s)
obj?.fn(1) < obj?.head(a)
obj?.fn(2 - 0)
obj?.fn(2 - b)
obj?.fn(2) % a
obj?.fn(2) - obj.head(0.5, 0, b, 0.5)
obj?.fn(2) <= a
obj?.fn(2) == arr ? obj : b
obj?.fn(a % 2)
obj?.fn(a % a)
obj?.fn(a % b)
obj?.fn(a * 0)
obj?.fn(a * 1)
obj?.fn(a * 2)
obj?.fn(a * a)
obj?.fn(a + 2)
obj?.fn(a + a)
obj?.fn(a + b)
obj?.fn(a - 1)
obj?.fn(a - 2)
obj?.fn(a - b)
obj?.fn(a || false)
obj?.fn(a)
obj?.fn(a) != 0 .. b
obj?.fn(a) != arr
obj?.fn(a) != b
obj?.fn(a) != div
obj?.fn(a) != toBase64(s)
obj?.fn(a) - 0.5 ** f
obj?.fn(a) .. b
obj?.fn(a) / a
obj?.fn(a) == add
obj?.fn(a) == s
obj?.fn(a) > b
obj?.fn(a) > obj.a
obj?.fn(a) >= a
obj?.fn(a) ^ a
obj?.fn(a) || ok || true
obj?.fn(abs(0.5, div, a))
obj?.fn(abs(2))
obj?.fn(abs(a))
obj?.fn(abs(add, b, "b", a))
obj?.fn(abs(arr, a))
obj?.fn(abs(b))
obj?.fn(abs(s, a))
obj?.fn(add(0, 1))
obj?.fn(add(0, b))
obj?.fn(add(1, 0))
obj?.fn(add(1, 2))
obj?.fn(add(2, a))
obj?.fn(add(2, b))
obj?.fn(add(a, 0))
obj?.fn(add(a, 2))
obj?.fn(add(a, b))
obj?.fn(add(b, a))
obj?.fn(add(b, b))
obj?.fn(arr[0.5])
obj?.fn(arr[1])
obj?.fn(arr[b])
obj?.fn(arr[f])
obj?.fn(b % 2)
obj?.fn(b % a)
obj?.fn(b && true)
obj?.fn(b * b)
obj?.fn(b + 0)
obj?.fn(b + a)
obj?.fn(b + b)
obj?.fn(b - a)
obj?.fn(b - b)
obj?.fn(b)
obj?.fn(b) != (false and ok)
obj?.fn(b) != obj
obj?.fn(b) != ok
obj?.fn(b) != string("c")
obj?.fn(b) * obj.obj?.a
obj?.fn(b) - a
obj?.fn(b) - f
obj?.fn(b) - obj.b
obj?.fn(b) .. b
obj?.fn(b) < a
obj?.fn(b) < b
obj?.fn(b) == obj
obj?.fn(b) > div(b, a)
obj?.fn(b) ^ a
obj?.fn(b) ^ b
obj?.fn(b) in arr
obj?.fn(count("a", false))
obj?.fn(count("a", true))
obj?.fn(count(arr, false))
obj?.fn(count(arr, ok))
obj?.fn(count(obj, false))
obj?.fn(count(s, ok))
obj?.fn(count(s, true))
obj?.fn(div(0, 1))
obj?.fn(div(0, b))
obj?.fn(div(1, a))
obj?.fn(div(2, 1))
obj?.fn(div(2, a))
obj?.fn(div(2, b))
obj?.fn(div(a, 1))
obj?.fn(div(a, a))
obj?.fn(div(a, b))
obj?.fn(div(b, 1))
obj?.fn(div(b, 2))
obj?.fn(div(b, a))
obj?.fn(div(b, b))
obj?.fn(false ? false : a)
obj?.fn(false or 2)
obj?.fn(false || 0)
obj?.fn(get(arr, 0))
obj?.fn(get(arr, 1))
obj?.fn(get(arr, 2))
obj?.fn(get(arr, a))
obj?.fn(get(arr, b))
obj?.fn(get(arr, f))
obj?.fn(get(obj, "b"))
obj?.fn(int(0))
obj?.fn(int(0.5))
obj?.fn(int(2))
obj?.fn(int(a))
obj?.fn(int(a, nil, 0))
obj?.fn(int(add, b))
obj?.fn(int(b))
obj?.fn(int(b, 1))
obj?.fn(int(f))
obj?.fn(int(f, a, s, a))
obj?.fn(int(ok, ok, 0))
obj?.fn(int(s, "c", 0.5))
obj?.fn(last(arr))
obj?.fn(last(arr, 0.5))
obj?.fn(len(0, f, obj, nil, "c"))
obj?.fn(len(arr))
obj?.fn(len(f, arr, obj))
obj?.fn(len(obj))
obj?.fn(len(ok, s))
obj?.fn(max(0))
obj?.fn(max(a))
obj?.fn(max(b, a))
obj?.fn(min(0))
obj?.fn(min(2))
obj?.fn(min(a))
obj?.fn(obj.a)
obj?.fn(obj.b)
obj?.fn(obj.fn(1))
obj?.fn(obj.head(0))
obj?.fn(obj.head(0, nil))
obj?.fn(obj.head(2, f, 0))
obj?.fn(obj.head(a))
obj?.fn(obj.head(a, arr))
obj?.fn(obj.head(b))
obj?.fn(obj.head(b, nil, 2))
obj?.fn(obj.head(b, true))
obj?.fn(obj.obj?.b)
obj?.fn(obj?.a)
obj?.fn(obj?.a) == b
obj?.fn(obj?.b)
obj?.fn(obj?.fn(0))
obj?.fn(obj?.fn(1))
obj?.fn(obj?.fn(2))
obj?.fn(obj?.fn(a))
obj?.fn(obj?.fn(b))
obj?.fn(obj?.head(0))
obj?.fn(obj?.head(0, arr))
obj?.fn(obj?.head(0, s))
obj?.fn(obj?.head(a))
obj?.fn(obj?.head(a, 0, nil))
obj?.fn(obj?.head(a, arr))
obj?.fn(obj?.head(a, div, add))
obj?.fn(obj?.head(b, 2))
obj?.fn(obj?.head(b, add))
obj?.fn(obj?.head(b, add, b))
obj?.fn(obj?.head(b, add, nil))
obj?.fn(obj?.obj.a)
obj?.fn(ok ? 2 : 0)
obj?.fn(ok ? b : obj)
obj?.fn(ok and 1)
obj?.fn(ok and a)
obj?.fn(ok and b)
obj?.fn(ok) and not true
obj?.fn(true && 0)
obj?.fn(true and 0)
obj?.fn(true and a)
obj?.head(!(add == arr))
obj?.head(!false)
obj?.head(!ok)
obj?.head(!true)
obj?.head("a" != 2)
obj?.head("a" != arr)
obj?.head("a" != b)
obj?.head("a" != false)
obj?.head("a" != true)
obj?.head("a" < "b")
obj?.head("a" == add)
obj?.head("a" == arr, div)
obj?.head("a" == false)
obj?.head("a" > "b")
obj?.head("a" > s)
obj?.head("a" matches "c")
obj?.head("a" startsWith "a")
obj?.head("a" startsWith "b")
obj?.head("a") <= s
obj?.head("a") == arr
obj?.head("a") > s
obj?.head("a") contains s
obj?.head("a") in 0 .. a
obj?.head("a") in obj.obj
obj?.head("a", 0) == b ** 0
obj?.head("a", a) != arr ? s : false
obj?.head("b" != "c")
obj?.head("b" != 0)
obj?.head("b" != 1)
obj?.head("b" != 2)
obj?.head("b" != arr)
obj?.head("b" != nil)
obj?.head("b" + "a")
obj?.head("b" + s)
obj?.head("b" == 0)
obj?.head("b" == b, indexOf(s, s), a, b)
obj?.head("b" == nil)
obj?.head("b" > s)
obj?.head("b" endsWith "a")
obj?.head("b" in obj)
obj?.head("b" matches s)
obj?.head("b") == obj.a
obj?.head("b", s, arr) == obj
obj?.head("c" != "a")
obj?.head("c" != arr)
obj?.head("c" != div)
obj?.head("c" + s)
obj?.head("c" == arr)
obj?.head("c" == div)
obj?.head("c" == obj)
obj?.head("c" == s)
obj?.head("c" >= s)
obj?.head("c" startsWith s)
obj?.head("c") != ok
obj?.head("c") == false == false
obj?.head("c") == s
obj?.head("c", 2, 0) + s
obj?.head("c", add) contains s
obj?.head("c", add) in obj
obj?.head("c", b) != arr
obj?.head("c", b) in arr
obj?.head((b + 0) * a < b)
obj?.head(-0)
obj?.head(-0.5)
obj?.head(-1)
obj?.head(-a)
obj?.head(-a, add)
obj?.head(-b)
obj?.head(-b, obj?.head("c", 0))
obj?.head(-f)
obj?.head(-f, add)
obj?.head(0 != 0)
obj?.head(0 != 1)
obj?.head(0 != a)
obj?.head(0 != arr)
obj?.head(0 != b)
obj?.head(0 != div)
obj?.head(0 != f)
obj?.head(0 != false)
obj?.head(0 != nil)
obj?.head(0 != obj)
obj?.head(0 != obj, obj, -b)
obj?.head(0 != obj?.obj)
obj?.head(0 % 2)
obj?.head(0 % a)
obj?.head(0 % b)
obj?.head(0 && false)
obj?.head(0 * 0)
obj?.head(0 * f)
obj?.head(0 + 0)
obj?.head(0 + 2)
obj?.head(0 + a)
obj?.head(0 + b)
obj?.head(0 - 0)
obj?.head(0 - 0.5)
obj?.head(0 - 2)
obj?.head(0 - a)
obj?.head(0 - b)
obj?.head(0 - f)
obj?.head(0 .. 2)
obj?.head(0 .. b)
obj?.head(0 / 0)
obj?.head(0 < 0.5)
obj?.head(0 < a)
obj?.head(0 <= 0)
obj?.head(0 <= 0.5)
obj?.head(0 <= a, get("a", b))
obj?.head(0 <= b, obj)
obj?.head(0 <= f)
obj?.head(0 == "b")
obj?.head(0 == 1)
obj?.head(0 == add)
obj?.head(0 == arr)
obj?.head(0 == b)
obj?.head(0 == div)
obj?.head(0 == div, f != b)
obj?.head(0 == nil)
obj?.head(0 == obj)
obj?.head(0 == s)
obj?.head(0 > 0)
obj?.head(0 > b)
obj?.head(0 > f)
obj?.head(0 > f, false or "b")
obj?.head(0 >= 0)
obj?.head(0 >= 2)
obj?.head(0 >= a)
obj?.head(0 >= f)
obj?.head(0 ^ 0)
obj?.head(0 ^ 0, f != obj)
obj?.head(0 ^ 0, string(div, f, b, s))
obj?.head(0 ^ b, obj, now(0.5))
obj?.head(0 or true)
obj?.head(0) != add
obj?.head(0) != b
obj?.head(0) != div
obj?.head(0) != filter(arr, ok)
obj?.head(0) % obj.a
obj?.head(0) ** b
obj?.head(0) - obj?.fn(b)
obj?.head(0) .. a
obj?.head(0) .. obj.b
obj?.head(0) / obj?.a
obj?.head(0) < div(b, b)
obj?.head(0) in map(arr, false)
obj?.head(0, 1) != f
obj?.head(0, 1) != nil ? "a" : arr
obj?.head(0, 2, ok) == f
obj?.head(0, 2, s) * b
obj?.head(0, arr) .. b
obj?.head(0, arr, ok, ok) % b
obj?.head(0, f, 0, ok) .. a
obj?.head(0, ok) % a
obj?.head(0, ok) % b
obj?.head(0.5 != 0)
obj?.head(0.5 != 1)
obj?.head(0.5 != 2)
obj?.head(0.5 != a, add, 0 == ok)
obj?.head(0.5 != arr, obj)
obj?.head(0.5 != false)
obj?.head(0.5 != obj)
obj?.head(0.5 && true)
obj?.head(0.5 * 0.5)
obj?.head(0.5 * b)
obj?.head(0.5 * b, f <= a)
obj?.head(0.5 ** 0)
obj?.head(0.5 ** 0.5, a)
obj?.head(0.5 ** a)
obj?.head(0.5 + 2)
obj?.head(0.5 + f)
obj?.head(0.5 - f)
obj?.head(0.5 - f, add, a)
obj?.head(0.5 .. f)
obj?.head(0.5 / 0.5)
obj?.head(0.5 / 2)
obj?.head(0.5 < 0)
obj?.head(0.5 <= 0)
obj?.head(0.5 <= f)
obj?.head(0.5 == "c")
obj?.head(0.5 == a)
obj?.head(0.5 == arr)
obj?.head(0.5 == ok)
obj?.head(0.5 == true)
obj?.head(0.5 > f)
obj?.head(0.5) != a
obj?.head(0.5) != arr
obj?.head(0.5) != b
obj?.head(0.5) - f
obj?.head(0.5) <= f ? true : a
obj?.head(0.5) == b
obj?.head(0.5) == ok ? 0 : obj
obj?.head(0.5) > f
obj?.head(0.5) > f / f
obj?.head(0.5, a) in arr ? add : f
obj?.head(0.5, a, f) + 2 * f
obj?.head(0.5, arr, div, f, "a") >= f
obj?.head(0.5, arr, true) > obj?.b
obj?.head(0.5, b) == obj
obj?.head(0.5, nil) != b
obj?.head(0.5, nil) ^ b
obj?.head(0.5, nil, 0) / add(b, a)
obj?.head(0.5, ok) <= a
obj?.head(0.5, true) < obj?.a
obj?.head(1 != 0)
obj?.head(1 != ok)
obj?.head(1 % b, ok, obj)
obj?.head(1 * a)
obj?.head(1 * b)
obj?.head(1 + 0)
obj?.head(1 + b, obj.head(add, ok))
obj?.head(1 - b)
obj?.head(1 - f, get(add, 1))
obj?.head(1 .. b)
obj?.head(1 < b)
obj?.head(1 == add)
obj?.head(1 == arr)
obj?.head(1 == s)
obj?.head(1 > b)
obj?.head(1 >= f)
obj?.head(1 ^ 1)
obj?.head(1 ^ a)
obj?.head(1 ^ f)
obj?.head(1 and false)
obj?.head(1 in nil)
obj?.head(1 or true)
obj?.head(1) != div
obj?.head(1) * a
obj?.head(1) >= f
obj?.head(1, add) != obj.a
obj?.head(1, add, s, ok) / obj.a
obj?.head(1, s) + obj.head(0)
obj?.head(2 != 0.5, filter(arr, false))
obj?.head(2 != b)
obj?.head(2 != div)
obj?.head(2 != f)
obj?.head(2 != nil)
obj?.head(2 != nil, one("c", false))
obj?.head(2 != s)
obj?.head(2 != true)
obj?.head(2 * f)
obj?.head(2 ** b, upper(false, s))
obj?.head(2 ** f)
obj?.head(2 + 0.5)
obj?.head(2 - b)
obj?.head(2 .. 0)
obj?.head(2 .. 0, f, s endsWith s)
obj?.head(2 .. a)
obj?.head(2 .. f)
obj?.head(2 / a, arr, obj.obj)
obj?.head(2 < 0.5)
obj?.head(2 <= 0)
obj?.head(2 <= a)
obj?.head(2 <= f, f && false, add)
obj?.head(2 == nil)
obj?.head(2 == true)
obj?.head(2 ^ b)
obj?.head(2 in arr)
obj?.head(2 || false)
obj?.head(2) != a
obj?.head(2) * a
obj?.head(2) ** a
obj?.head(2) - f
obj?.head(2) == arr
obj?.head(2) > a * f
obj?.head(2) in obj?.head(nil)
obj?.head(2, 1, arr, b, add) in arr
obj?.head(2, arr, div) == a
obj?.head(2, obj, "a", div) <= b % a
obj?.head(2, obj, nil) .. b
obj?.head(2, s, b) in arr
obj?.head(["c", "a"])
obj?.head(a != "a")
obj?.head(a != "b")
obj?.head(a != arr)
obj?.head(a != div)
obj?.head(a != false)
obj?.head(a != nil)
obj?.head(a != obj)
obj?.head(a != obj, arr)
obj?.head(a != ok)
obj?.head(a % b)
obj?.head(a * 0)
obj?.head(a * a, obj)
obj?.head(a ** 0)
obj?.head(a ** 0.5)
obj?.head(a ** a)
obj?.head(a ** b)
obj?.head(a ** f)
obj?.head(a + 0)
obj?.head(a + 0.5)
obj?.head(a + 1)
obj?.head(a + a)
obj?.head(a + b)
obj?.head(a - 0)
obj?.head(a - 0.5)
obj?.head(a - 1)
obj?.head(a - b)
obj?.head(a - f, ok)
obj?.head(a .. 1)
obj?.head(a .. a)
obj?.head(a .. f)
obj?.head(a / 0)
obj?.head(a / a)
obj?.head(a / b)
obj?.head(a < 0)
obj?.head(a < 0.5)
obj?.head(a < a)
obj?.head(a < a, a)
obj?.head(a < b)
obj?.head(a <= 0)
obj?.head(a <= b)
obj?.head(a == 0.5, string(2, true))
obj?.head(a == add)
obj?.head(a == arr)
obj?.head(a == obj)
obj?.head(a == obj, a, obj in nil, s)
obj?.head(a == obj, obj.b)
obj?.head(a == ok)
obj?.head(a == s)
obj?.head(a > 0)
obj?.head(a > a)
obj?.head(a >= 0)
obj?.head(a >= 0, a)
obj?.head(a ^ 0.5)
obj?.head(a ^ 2, map(arr, obj))
obj?.head(a ^ a)
obj?.head(a ^ b)
obj?.head(a ^ f)
obj?.head(a and false)
obj?.head(a in arr)
obj?.head(a || false)
obj?.head(a)
obj?.head(a) != s
obj?.head(a) * 2 ^ f
obj?.head(a) ** (b * 0)
obj?.head(a) ** b
obj?.head(a) + obj?.a
obj?.head(a) - 0.5 / f
obj?.head(a) / b
obj?.head(a) / obj?.head(2, s, arr)
obj?.head(a) < -a
obj?.head(a) <= a
obj?.head(a) == nil ? nil : nil
obj?.head(a) == one(arr, ok)
obj?.head(a) > f
obj?.head(a) > obj?.b
obj?.head(a) >= b - b
obj?.head(a) ^ a
obj?.head(a, "c", 1, div, nil) != ok
obj?.head(a, "c", arr) % a
obj?.head(a, 0, ok, add) .. b
obj?.head(a, 0.5, s, f) ^ a
obj?.head(a, a)
obj?.head(a, a, add)
obj?.head(a, all(obj, true))
obj?.head(a, arr)
obj?.head(a, arr, obj)
obj?.head(a, b > b)
obj?.head(a, b) <= a
obj?.head(a, b) == 0 + f
obj?.head(a, div, div, ok)
obj?.head(a, f ** f, a != 0.5)
obj?.head(a, f, s) >= b
obj?.head(a, false or f)
obj?.head(a, false) != div
obj?.head(a, max(a, f, f))
obj?.head(a, obj)
obj?.head(a, obj, f, 0) ^ obj?.a
obj?.head(a, obj.head(b))
obj?.head(a, obj?.a)
obj?.head(a, ok, a)
obj?.head(a, ok, b, s, add) in arr
obj?.head(a, s)
obj?.head(a, s, a)
obj?.head(a, true, a) * b
obj?.head(abs(0))
obj?.head(abs(0, b))
obj?.head(abs(0, b, s, obj, 0))
obj?.head(abs(0.5))
obj?.head(abs(2))
obj?.head(abs(a, s, a))
obj?.head(abs(b))
obj?.head(abs(f))
obj?.head(abs(obj, a))
obj?.head(abs(obj, b))
obj?.head(abs(obj, true, a))
obj?.head(abs(s, a))
obj?.head(abs(s, a), add, f)
obj?.head(add != 0.5)
obj?.head(add != a)
obj?.head(add != add)
obj?.head(add != div)
obj?.head(add != false)
obj?.head(add != nil)
obj?.head(add != ok)
obj?.head(add != s)
obj?.head(add != true)
obj?.head(add && false)
obj?.head(add && true)
obj?.head(add == "a")
obj?.head(add == 0.5, b != nil)
obj?.head(add == a, s != obj)
obj?.head(add == arr)
obj?.head(add == b)
obj?.head(add == div)
obj?.head(add == f)
obj?.head(add == obj)
obj?.head(add == ok)
obj?.head(add == ok, obj)
obj?.head(add == s)
obj?.head(add and true)
obj?.head(add in arr)
obj?.head(add in arr, div)
obj?.head(add in nil)
obj?.head(add or false)
obj?.head(add || false)
obj?.head(add(0, 0))
obj?.head(add(1, 0))
obj?.head(add(1, 1))
obj?.head(add(1, b))
obj?.head(add(2, a))
obj?.head(add(a, 0))
obj?.head(add(b, 0))
obj?.head(add(b, a))
obj?.head(add(b, b))
obj?.head(add)
obj?.head(add) != arr
obj?.head(add) != s
obj?.head(add) == arr
obj?.head(add) in arr
obj?.head(add, "a") == div
obj?.head(add, 0.5 ^ b)
obj?.head(add, 2 / f)
obj?.head(add, add)
obj?.head(add, add, nil) == ok
obj?.head(add, arr == add)
obj?.head(add, arr) != s
obj?.head(add, arr, s) != a
obj?.head(add, b)
obj?.head(add, div)
obj?.head(add, f)
obj?.head(add, f) != upper("c")
obj?.head(add, get(b, s))
obj?.head(add, get(false, obj))
obj?.head(add, get(ok, b))
obj?.head(add, obj)
obj?.head(add, obj?.b)
obj?.head(add, ok)
obj?.head(add, s)
obj?.head(add, string(s))
obj?.head(all("a", ok))
obj?.head(all("b", ok))
obj?.head(all(arr, false))
obj?.head(all(arr, ok))
obj?.head(all(obj, false))
obj?.head(all(s, ok))
obj?.head(all(s, true))
obj?.head(any("c", ok))
obj?.head(any(obj, false))
obj?.head(any(obj, ok))
obj?.head(any(obj, ok), 1 == arr, b == 0.5)
obj?.head(any(obj, true))
obj?.head(any(s, ok), ok)
obj?.head(arr != "b")
obj?.head(arr != "c")
obj?.head(arr != "c", arr)
obj?.head(arr != 0.5)
obj?.head(arr != div)
obj?.head(arr != nil)
obj?.head(arr != obj)
obj?.head(arr != s)
obj?.head(arr && true, ok and obj)
obj?.head(arr == 0)
obj?.head(arr == 0.5)
obj?.head(arr == 1)
obj?.head(arr == a)
obj?.head(arr == add)
obj?.head(arr == arr)
obj?.head(arr == b)
obj?.head(arr == div)
obj?.head(arr == f)
obj?.head(arr == nil)
obj?.head(arr == obj)
obj?.head(arr == ok)
obj?.head(arr and false)
obj?.head(arr)
obj?.head(arr) != div(a, a)
obj?.head(arr) != s
obj?.head(arr) == a ? 1 : b
obj?.head(arr) == arr
obj?.head(arr) == obj.b
obj?.head(arr) == obj?.obj
obj?.head(arr) == ok
obj?.head(arr)[-1]
obj?.head(arr)[0.5 - a]
obj?.head(arr)[b]
obj?.head(arr, 0) == ok
obj?.head(arr, 1 - f, ok)
obj?.head(arr, a, a)
obj?.head(arr, a, false) == 2 ? obj : "b"
obj?.head(arr, add(0, 0), 0 - 0.5)
obj?.head(arr, add)
obj?.head(arr, all(obj, false), obj.a)
obj?.head(arr, all(s, ok))
obj?.head(arr, arr) in arr
obj?.head(arr, b)
obj?.head(arr, b) != a
obj?.head(arr, b, div) != ok
obj?.head(arr, div(a, b))
obj?.head(arr, div)
obj?.head(arr, filter(obj, false))
obj?.head(arr, map(arr, obj))
obj?.head(arr, max(ok))
obj?.head(arr, none(obj, ok), any(arr, true))
obj?.head(arr, obj)
obj?.head(arr, obj?.head(a, 0))
obj?.head(arr, obj?.head(add, add, 0))
obj?.head(arr, obj?.obj)
obj?.head(arr, ok)
obj?.head(arr, ok)[b]
obj?.head(arr, one(arr, ok))
obj?.head(arr, s && true)
obj?.head(arr, s)
obj?.head(arr, string(div, 0))
obj?.head(arr, true) == a
obj?.head(arr[0.5:0])
obj?.head(arr[0])
obj?.head(arr[a])
obj?.head(arr[a], s)
obj?.head(arr[b])
obj?.head(arr[f])
obj?.head(b != "c")
obj?.head(b != 0)
obj?.head(b != 0.5)
obj?.head(b != a)
obj?.head(b != a, ok)
obj?.head(b != add)
obj?.head(b != arr)
obj?.head(b != b)
obj?.head(b != div)
obj?.head(b != nil)
obj?.head(b != obj)
obj?.head(b != obj?.obj)
obj?.head(b != ok)
obj?.head(b != s)
obj?.head(b != true)
obj?.head(b % 2, f)
obj?.head(b % a)
obj?.head(b % a, s in nil)
obj?.head(b && true)
obj?.head(b * 0.5)
obj?.head(b * a)
obj?.head(b * b)
obj?.head(b ** b)
obj?.head(b + 0)
obj?.head(b + 1)
obj?.head(b + a)
obj?.head(b + f)
obj?.head(b - 0)
obj?.head(b - 1)
obj?.head(b - a)
obj?.head(b - b)
obj?.head(b - f)
obj?.head(b .. 0.5)
obj?.head(b .. 2)
obj?.head(b .. a)
obj?.head(b / 0)
obj?.head(b / f)
obj?.head(b < 0.5)
obj?.head(b < 2)
obj?.head(b < a)
obj?.head(b < a, arr)
obj?.head(b < f)
obj?.head(b <= 0)
obj?.head(b <= 1)
obj?.head(b <= b)
obj?.head(b == "b")
obj?.head(b == "c")
obj?.head(b == 0)
obj?.head(b == 0.5)
obj?.head(b == arr)
obj?.head(b == div) != ok
obj?.head(b == obj)
obj?.head(b == ok)
obj?.head(b > f)
obj?.head(b >= 0)
obj?.head(b >= 0.5)
obj?.head(b >= 2)
obj?.head(b >= b)
obj?.head(b >= f)
obj?.head(b ^ 0)
obj?.head(b ^ b)
obj?.head(b ^ f)
obj?.head(b and false)
obj?.head(b and true)
obj?.head(b in nil)
obj?.head(b or true)
obj?.head(b || false)
obj?.head(b)
obj?.head(b) != 1 == ok
obj?.head(b) % obj?.head(obj, div).a
obj?.head(b) + 0.5 - b
obj?.head(b) + b
obj?.head(b) .. a
obj?.head(b) / a
obj?.head(b) <= a
obj?.head(b) <= f
obj?.head(b) == -f
obj?.head(b) == b
obj?.head(b) == f
obj?.head(b) > 0 * 2
obj?.head(b) >= a + b
obj?.head(b, "a") .. b
obj?.head(b, 0, b) > b
obj?.head(b, 1 < f)
obj?.head(b, 1 > b)
obj?.head(b, add(b, 1))
obj?.head(b, add)
obj?.head(b, arr) - f
obj?.head(b, arr) == div
obj?.head(b, arr) == s
obj?.head(b, arr) ^ b
obj?.head(b, b > 1)
obj?.head(b, b)
obj?.head(b, b) ^ b
obj?.head(b, b, b - a)
obj?.head(b, div != ok)
obj?.head(b, div) <= 0 ^ f
obj?.head(b, f)
obj?.head(b, f, a and false)
obj?.head(b, f, div) <= f
obj?.head(b, f, f) < obj?.b
obj?.head(b, false, nil) / (0.5 - f)
obj?.head(b, first(nil))
obj?.head(b, get(nil, 0))
obj?.head(b, get(s, a))
obj?.head(b, max(arr))
obj?.head(b, obj)
obj?.head(b, obj) ** f
obj?.head(b, obj, ok) .. 0 + a
obj?.head(b, obj.a)
obj?.head(b, obj.fn(b))
obj?.head(b, obj?.obj)
obj?.head(b, ok && add)
obj?.head(b, ok ? b : 0)
obj?.head(b, ok, 0.5) != b
obj?.head(b, s)
obj?.head(b, trim(s), b)
obj?.head(count("a", ok))
obj?.head(count("b", ok))
obj?.head(count("c", ok))
obj?.head(count(arr, ok))
obj?.head(count(arr, true))
obj?.head(count(obj, false))
obj?.head(count(obj, ok))
obj?.head(count(obj, true))
obj?.head(count(s, false))
obj?.head(count(s, ok))
obj?.head(count(s, true), div, map("c", add))
obj?.head(div != "c")
obj?.head(div != 2, obj)
obj?.head(div != a)
obj?.head(div != f)
obj?.head(div != f, div)
obj?.head(div != s)
obj?.head(div && false)
obj?.head(div == "b", arr)
obj?.head(div == 0)
obj?.head(div == 2)
obj?.head(div == a)
obj?.head(div == arr)
obj?.head(div == arr, arr)
obj?.head(div == arr, ok)
obj?.head(div == div)
obj?.head(div == f)
obj?.head(div == nil)
obj?.head(div == obj)
obj?.head(div == ok)
obj?.head(div in arr)
obj?.head(div or false)
obj?.head(div || false)
obj?.head(div(0, 1))
obj?.head(div(0, 2))
obj?.head(div(2, a))
obj?.head(div(a, 1))
obj?.head(div(a, 2), b)
obj?.head(div(a, a))
obj?.head(div(a, b))
obj?.head(div(b, 1))
obj?.head(div(b, a))
obj?.head(div(b, b))
obj?.head(div)
obj?.head(div) != add
obj?.head(div) != arr
obj?.head(div) != f
obj?.head(div) != s
obj?.head(div) == obj
obj?.head(div, 0, ok) != add
obj?.head(div, 0.5 .. f)
obj?.head(div, a == f)
obj?.head(div, a)
obj?.head(div, add == nil, get(0, arr))
obj?.head(div, add)
obj?.head(div, arr)
obj?.head(div, arr, ok)
obj?.head(div, b .. 0)
obj?.head(div, b)
obj?.head(div, b, arr) != arr
obj?.head(div, div)
obj?.head(div, f)
obj?.head(div, f, ok) != f ** f
obj?.head(div, false && "b")
obj?.head(div, get(b, b))
obj?.head(div, get(nil, div, nil, ok))
obj?.head(div, nil) != s
obj?.head(div, now(f, ok, ok, a), f)
obj?.head(div, now(ok))
obj?.head(div, obj)
obj?.head(div, obj.a, s != 0.5)
obj?.head(div, obj.head(f))
obj?.head(div, obj?.a)
obj?.head(div, ok)
obj?.head(div, s)
obj?.head(div, s) == ok ? f : a
obj?.head(div, s, string(ok))
obj?.head(f != "c")
obj?.head(f != 0)
obj?.head(f != 2)
obj?.head(f != any(obj, ok))
obj?.head(f != arr)
obj?.head(f != b)
obj?.head(f != div)
obj?.head(f != f, ok)
obj?.head(f != false)
obj?.head(f != obj)
obj?.head(f != s, b or true)
obj?.head(f && false)
obj?.head(f * 0)
obj?.head(f * 0.5)
obj?.head(f * 1)
obj?.head(f * 2)
obj?.head(f * a)
obj?.head(f * f)
obj?.head(f ** 0)
obj?.head(f ** 2)
obj?.head(f ** b)
obj?.head(f ** f)
obj?.head(f + 0.5)
obj?.head(f + 1)
obj?.head(f + f)
obj?.head(f - 0)
obj?.head(f - 0.5)
obj?.head(f - 1)
obj?.head(f - 2)
obj?.head(f - b)
obj?.head(f .. a)
obj?.head(f .. b)
obj?.head(f .. f)
obj?.head(f / 0)
obj?.head(f / 2)
obj?.head(f / a)
obj?.head(f / b)
obj?.head(f < a)
obj?.head(f < b)
obj?.head(f < f)
obj?.head(f <= 0)
obj?.head(f <= a)
obj?.head(f <= a, a)
obj?.head(f <= f)
obj?.head(f == add)
obj?.head(f == arr)
obj?.head(f == f)
obj?.head(f == obj)
obj?.head(f == ok)
obj?.head(f == s)
obj?.head(f == true, obj != false)
obj?.head(f > b)
obj?.head(f >= 0)
obj?.head(f >= 0.5)
obj?.head(f >= b)
obj?.head(f >= f)
obj?.head(f ^ 2)
obj?.head(f ^ a)
obj?.head(f in arr)
obj?.head(f in nil)
obj?.head(f or false)
obj?.head(f or true)
obj?.head(f)
obj?.head(f) * b
obj?.head(f) ** -f
obj?.head(f) + obj?.a
obj?.head(f) - b
obj?.head(f) / a
obj?.head(f) <= a
obj?.head(f) == 0 ^ 0.5
obj?.head(f) == b != true
obj?.head(f) == f
obj?.head(f) > 1 + 1
obj?.head(f) > a
obj?.head(f) >= b
obj?.head(f) >= b ^ b
obj?.head(f) in arr
obj?.head(f, 0) <= a - f
obj?.head(f, 2, arr, false, a) > a
obj?.head(f, a)
obj?.head(f, add)
obj?.head(f, add, f) < add(a, a)
obj?.head(f, add, obj) - a
obj?.head(f, arr, 0.5, b) + f
obj?.head(f, arr, f) + f
obj?.head(f, b != "a")
obj?.head(f, b, s, b) ^ obj.a
obj?.head(f, div == arr)
obj?.head(f, div)
obj?.head(f, div, f) ** b
obj?.head(f, f * b)
obj?.head(f, f)
obj?.head(f, f) + -b
obj?.head(f, f, obj) != f
obj?.head(f, f, ok, arr) <= f + 0
obj?.head(f, get(0.5, arr), map(arr, nil))
obj?.head(f, get(ok, add))
obj?.head(f, nil) - a
obj?.head(f, obj != arr)
obj?.head(f, obj != b)
obj?.head(f, obj)
obj?.head(f, obj?.head(b, arr, "c"), b)
obj?.head(f, ok ? add : b)
obj?.head(f, ok ? s : 0)
obj?.head(f, ok and add, string(add))
obj?.head(f, ok)
obj?.head(f, s)
obj?.head(f, true and f)
obj?.head(f, true || a)
obj?.head(false != a)
obj?.head(false != f)
obj?.head(false != false)
obj?.head(false != ok)
obj?.head(false != s)
obj?.head(false != s, upper(0, "b"), obj)
obj?.head(false && a, a)
obj?.head(false && add)
obj?.head(false && b)
obj?.head(false && obj)
obj?.head(false == obj)
obj?.head(false == s)
obj?.head(false ? "c" : false)
obj?.head(false ? a : 0, obj.fn(2))
obj?.head(false ? a : add)
obj?.head(false ? a : false)
obj?.head(false ? add : ok, a ^ b)
obj?.head(false ? arr : nil)
obj?.head(false ? nil : 0.5)
obj?.head(false ? obj : s, obj?.head("c"))
obj?.head(false ? s : add)
obj?.head(false ? s : f, div)
obj?.head(false and "a", b)
obj?.head(false and "b")
obj?.head(false and 0.5)
obj?.head(false and a)
obj?.head(false and add)
obj?.head(false and arr)
obj?.head(false and obj)
obj?.head(false or add)
obj?.head(false or arr)
obj?.head(false or b)
obj?.head(false or f)
obj?.head(false or true)
obj?.head(false || add, arr != "a")
obj?.head(false || arr)
obj?.head(false || b)
obj?.head(false || ok)
obj?.head(false) == obj
obj?.head(false) ? 0 % 1 : obj.obj
obj?.head(false) in arr
obj?.head(false, 0, b) == s + "a"
obj?.head(false, 0.5, div) || obj.head(add, obj)
obj?.head(false, 1) || b > 2
obj?.head(false, b) == b
obj?.head(false, b, "a") || obj?.a
obj?.head(false, obj) in arr
obj?.head(filter(arr, false))
obj?.head(filter(arr, ok))
obj?.head(filter(arr, true))
obj?.head(filter(s, ok))
obj?.head(filter(s, true))
obj?.head(first(0))
obj?.head(first(0.5, 1, arr, obj, arr))
obj?.head(first(a), map(arr, add))
obj?.head(first(a, 0.5))
obj?.head(first(a, div))
obj?.head(first(add))
obj?.head(first(b, div))
obj?.head(first(b, false, a))
obj?.head(first(b, nil))
obj?.head(first(div))
obj?.head(first(f))
obj?.head(first(f))?.b
obj?.head(first(f), f)
obj?.head(first(f, a), true != nil)
obj?.head(first(false))
obj?.head(first(false, nil), a != f)?.a
obj?.head(first(false, ok))
obj?.head(first(nil, nil))
obj?.head(first(obj, 0), b * b)
obj?.head(first(ok))
obj?.head(first(ok, arr))
obj?.head(first(s))
obj?.head(first(s, b))
obj?.head(first(s, s), abs(0.5))
obj?.head(first(true, div, 0))
obj?.head(float(0))
obj?.head(float(0.5))
obj?.head(float(2))
obj?.head(float(b))
obj?.head(float(b, 0.5))
obj?.head(float(f))
obj?.head(float(f, div, f))
obj?.head(get("a", "b"))?.b
obj?.head(get("a", nil))
obj?.head(get("a", nil), f)
obj?.head(get("a", ok))
obj?.head(get("b", a))
obj?.head(get("b", add))
obj?.head(get("b", b))
obj?.head(get("b", div))
obj?.head(get("b", false))
obj?.head(get("c", arr), a)
obj?.head(get(0, 0))
obj?.head(get(0, 0.5))
obj?.head(get(0, a))
obj?.head(get(0, add))
obj?.head(get(0, arr))
obj?.head(get(0, b))
obj?.head(get(0, b), add)
obj?.head(get(0, f))
obj?.head(get(0, f), add)
obj?.head(get(0, nil))
obj?.head(get(0, obj))?.b
obj?.head(get(0, ok))
obj?.head(get(0, ok)?.b)
obj?.head(get(0.5), get(ok, false))
obj?.head(get(0.5, 0.5))
obj?.head(get(0.5, b))
obj?.head(get(0.5, false))
obj?.head(get(0.5, nil))
obj?.head(get(0.5, obj))
obj?.head(get(0.5, ok))
obj?.head(get(0.5, s))
obj?.head(get(0.5, true))
obj?.head(get(1, 0))
obj?.head(get(1, a))
obj?.head(get(1, add))
obj?.head(get(1, b))
obj?.head(get(1, nil))
obj?.head(get(1, obj))
obj?.head(get(1, ok))
obj?.head(get(1, s))
obj?.head(get(1, s), obj.head(nil), div)
obj?.head(get(2))
obj?.head(get(2, 0))
obj?.head(get(2, a))
obj?.head(get(2, add))
obj?.head(get(2, div))
obj?.head(get(a))
obj?.head(get(a), ok)
obj?.head(get(a, 0))
obj?.head(get(a, 2))
obj?.head(get(a, a))
obj?.head(get(a, b))
obj?.head(get(a, b))?.a
obj?.head(get(a, div))
obj?.head(get(a, f))
obj?.head(get(a, false))
obj?.head(get(a, obj))
obj?.head(get(a, obj), b in nil)
obj?.head(get(a, s))
obj?.head(get(add, 0))
obj?.head(get(add, 2))
obj?.head(get(add, arr))
obj?.head(get(add, b))
obj?.head(get(add, div))
obj?.head(get(add, f))
obj?.head(get(add, false))
obj?.head(get(add, nil))
obj?.head(get(add, ok))
obj?.head(get(add, s))
obj?.head(get(add, true))
obj?.head(get(arr))
obj?.head(get(arr, 0.5))
obj?.head(get(arr, a))
obj?.head(get(arr, arr))
obj?.head(get(arr, div))
obj?.head(get(arr, false))
obj?.head(get(arr, nil))
obj?.head(get(arr, s))
obj?.head(get(b))
obj?.head(get(b, 0.5))
obj?.head(get(b, 1), add)
obj?.head(get(b, 2))
obj?.head(get(b, a))
obj?.head(get(b, arr))
obj?.head(get(b, b))
obj?.head(get(b, b), obj)
obj?.head(get(b, div), obj.obj)
obj?.head(get(b, nil))
obj?.head(get(b, obj))
obj?.head(get(b, ok))
obj?.head(get(div, 0))
obj?.head(get(div, 0.5))
obj?.head(get(div, a))
obj?.head(get(div, a, nil), ok || div)
obj?.head(get(div, add))
obj?.head(get(div, b))
obj?.head(get(div, div))
obj?.head(get(div, f))
obj?.head(get(div, nil))
obj?.head(get(div, obj))
obj?.head(get(div, s))
obj?.head(get(div, s), f == nil)
obj?.head(get(div, true))
obj?.head(get(f, 0))
obj?.head(get(f, 0.5))
obj?.head(get(f, 1))
obj?.head(get(f, 2))
obj?.head(get(f, a))?.a
obj?.head(get(f, add))
obj?.head(get(f, b), toBase64("c", ok, f))
obj?.head(get(f, f))
obj?.head(get(f, false))
obj?.head(get(f, nil))
obj?.head(get(f, ok))
obj?.head(get(false, 0))
obj?.head(get(false, 0)?.a)
obj?.head(get(false, 0.5), s == div)
obj?.head(get(false, div))
obj?.head(get(false, nil))
obj?.head(get(false, ok))
obj?.head(get(false, s))
obj?.head(get(nil))
obj?.head(get(nil, add))
obj?.head(get(nil, arr))
obj?.head(get(nil, arr, s))
obj?.head(get(nil, b), obj?.fn(b))
obj?.head(get(nil, div))
obj?.head(get(nil, nil))
obj?.head(get(nil, nil), ok)
obj?.head(get(nil, ok))
obj?.head(get(nil, ok), map("c", add))
obj?.head(get(nil, ok), ok)
obj?.head(get(nil, s))
obj?.head(get(obj)?.fn(ok))
obj?.head(get(obj, 0))
obj?.head(get(obj, 0.5))
obj?.head(get(obj, 2))
obj?.head(get(obj, a))
obj?.head(get(obj, add))
obj?.head(get(obj, arr))
obj?.head(get(obj, b))
obj?.head(get(obj, obj))
obj?.head(get(obj, s))
obj?.head(get(obj, s)?.obj?.obj)
obj?.head(get(obj, s, arr))
obj?.head(get(ok))
obj?.head(get(ok, a))
obj?.head(get(ok, add))
obj?.head(get(ok, arr))
obj?.head(get(ok, b))
obj?.head(get(ok, div))
obj?.head(get(ok, nil))
obj?.head(get(ok, nil), false and add)
obj?.head(get(ok, obj))
obj?.head(get(ok, obj))?.b
obj?.head(get(ok, obj), s)
obj?.head(get(ok, s))
obj?.head(get(ok, true))
obj?.head(get(s))
obj?.head(get(s), f == a)
obj?.head(get(s)?.a)
obj?.head(get(s, 1))
obj?.head(get(s, 2), add)
obj?.head(get(s, a))
obj?.head(get(s, a, true))
obj?.head(get(s, add))
obj?.head(get(s, arr))
obj?.head(get(s, arr), get(arr, arr))
obj?.head(get(s, b))
obj?.head(get(s, div))
obj?.head(get(s, div), a, a)
obj?.head(get(s, f))
obj?.head(get(s, nil))
obj?.head(get(s, obj))?.b
obj?.head(get(s, ok))
obj?.head(get(s, ok))?.a
obj?.head(get(s, s))
obj?.head(get(s, true))
obj?.head(get(s, true), obj)
obj?.head(get(true, 0.5), arr)
obj?.head(get(true, a))
obj?.head(get(true, add))
obj?.head(get(true, div))
obj?.head(get(true, div), any("b", false))
obj?.head(get(true, f))
obj?.head(get(true, false))
obj?.head(get(true, s))
obj?.head(int("b", a))
obj?.head(int(2))
obj?.head(int(a))
obj?.head(int(b))
obj?.head(int(f))
obj?.head(int(false, s, false, a))
obj?.head(last(0))
obj?.head(last(0.5))
obj?.head(last(0.5, add))
obj?.head(last(0.5, b, f, "b"))
obj?.head(last(1, true, a, s))
obj?.head(last(a))
obj?.head(last(a, false, f, "a"))
obj?.head(last(add))
obj?.head(last(arr, arr))
obj?.head(last(b))
obj?.head(last(b, add, ok, 2))
obj?.head(last(div))
obj?.head(last(div, b))
obj?.head(last(f))
obj?.head(last(f, arr, arr))
obj?.head(last(obj))
obj?.head(last(obj, "c", a, ok))
obj?.head(last(ok))
obj?.head(last(ok, ok))
obj?.head(last(s))
obj?.head(len("a"))
obj?.head(len(add, "a"))
obj?.head(len(arr))
obj?.head(len(arr), arr)
obj?.head(len(false, div, obj))
obj?.head(len(obj, "c"))
obj?.head(lower("a"))
obj?.head(lower("b"))
obj?.head(lower(arr, s))
obj?.head(lower(false, true, s))
obj?.head(lower(s))
obj?.head(map("a", "a"))
obj?.head(map("a", "b"))
obj?.head(map("a", 0))
obj?.head(map("a", 2))
obj?.head(map("a", a), obj.head(a))
obj?.head(map("a", add), s, get(arr, b))
obj?.head(map("a", arr))
obj?.head(map("a", div))
obj?.head(map("a", f))
obj?.head(map("b", add))
obj?.head(map("b", f))
obj?.head(map("b", nil))
obj?.head(map("b", ok), add)
obj?.head(map("c", 0.5))
obj?.head(map("c", div), b)
obj?.head(map("c", nil), get(s))
obj?.head(map("c", obj))
obj?.head(map("c", s))
obj?.head(map(arr, "a"))
obj?.head(map(arr, "b"))
obj?.head(map(arr, 0))
obj?.head(map(arr, 0.5))
obj?.head(map(arr, arr))
obj?.head(map(arr, b))
obj?.head(map(arr, div))
obj?.head(map(arr, f))
obj?.head(map(arr, false))
obj?.head(map(arr, false), f)
obj?.head(map(arr, nil))
obj?.head(map(arr, obj))
obj?.head(map(arr, ok))
obj?.head(map(arr, s))
obj?.head(map(arr, true))
obj?.head(map(obj, 0.5))
obj?.head(map(obj, 1), add == f)
obj?.head(map(obj, add))
obj?.head(map(obj, arr))
obj?.head(map(obj, b))
obj?.head(map(obj, b), get(nil, ok), arr)
obj?.head(map(obj, b), obj)
obj?.head(map(obj, div))
obj?.head(map(obj, f))
obj?.head(map(obj, nil), ok || true)
obj?.head(map(obj, obj))
obj?.head(map(obj, obj), obj.b)
obj?.head(map(obj, ok))
obj?.head(map(obj, s))
obj?.head(map(obj.obj, a or false))
obj?.head(map(s, #))
obj?.head(map(s, 0))
obj?.head(map(s, 0.5))
obj?.head(map(s, 1))
obj?.head(map(s, 2), arr)
obj?.head(map(s, a))
obj?.head(map(s, add))
obj?.head(map(s, arr))
obj?.head(map(s, div))
obj?.head(map(s, f))
obj?.head(map(s, nil), add(a, a))
obj?.head(map(s, obj), f, b + 2)
obj?.head(map(s, ok))
obj?.head(map(s, ok), 0 ** f)
obj?.head(map(s, s))
obj?.head(max("a"))
obj?.head(max("b"))
obj?.head(max("c"))
obj?.head(max(1, b))
obj?.head(max(b, b))
obj?.head(max(div))
obj?.head(max(f != 0))
obj?.head(max(false))
obj?.head(max(get(ok, b)))
obj?.head(max(obj)?.obj)
obj?.head(max(ok))
obj?.head(max(s))
obj?.head(min("a"))
obj?.head(min("c"), arr)
obj?.head(min(0))
obj?.head(min(a))
obj?.head(min(add))
obj?.head(min(arr))
obj?.head(min(b))
obj?.head(min(f))
obj?.head(min(nil))
obj?.head(min(nil, 1), 0 / f)
obj?.head(min(ok))
obj?.head(min(ok), arr, f)
obj?.head(min(s, s), f)
obj?.head(nil != 0)
obj?.head(nil != 0.5)
obj?.head(nil != 1)
obj?.head(nil != 2)
obj?.head(nil != a)
obj?.head(nil != add, obj.fn(b))
obj?.head(nil != arr)
obj?.head(nil != b, "b" != 0)
obj?.head(nil != false)
obj?.head(nil != nil)
obj?.head(nil != obj)
obj?.head(nil != ok)
obj?.head(nil != true)
obj?.head(nil == "b") or add(a, 0) - obj.b
obj?.head(nil == "c" || add == f)
obj?.head(nil == arr)
obj?.head(nil == div)
obj?.head(nil == nil)
obj?.head(nil == obj)
obj?.head(nil == ok)
obj?.head(nil == s)
obj?.head(nil in arr)
obj?.head(nil || false)
obj?.head(nil || true)
obj?.head(nil) != add
obj?.head(nil) != arr
obj?.head(nil) != div
obj?.head(nil) != f
obj?.head(nil) == 2 + a
obj?.head(nil) == add
obj?.head(nil) == map(arr, "b")
obj?.head(nil) == obj.obj
obj?.head(nil) in obj
obj?.head(nil) in obj?.obj
obj?.head(nil)?.a
obj?.head(nil)?.a.b
obj?.head(nil)?.a?.b
obj?.head(nil)?.b
obj?.head(nil)?.b.a
obj?.head(nil)?.b.obj
obj?.head(nil)?.b?.obj
obj?.head(nil)?.fn(obj.obj)
obj?.head(nil)?.fn(s, "b" != f)
obj?.head(nil)?.head(ok)
obj?.head(nil)?.obj
obj?.head(nil)?.obj?.a
obj?.head(nil)?.obj?.b
obj?.head(nil, "a")?.obj
obj?.head(nil, "b")?.b
obj?.head(nil, "b", obj)?.b
obj?.head(nil, "b", s)?.b
obj?.head(nil, "b", s, f)?.obj
obj?.head(nil, "c")?.obj
obj?.head(nil, "c", 0.5)?.obj
obj?.head(nil, "c", f)?.a
obj?.head(nil, 0)?.a
obj?.head(nil, 0)?.b
obj?.head(nil, 0)?.obj
obj?.head(nil, 0, b, s)?.a
obj?.head(nil, 0.5, 0, s)?.b
obj?.head(nil, 1)?.b
obj?.head(nil, 1)?.obj
obj?.head(nil, 1, false)?.a
obj?.head(nil, 1, nil)?.obj
obj?.head(nil, 2)?.b
obj?.head(nil, 2)?.obj
obj?.head(nil, 2, 0, nil)?.a
obj?.head(nil, a) != s ? add : obj?.b
obj?.head(nil, a) == s
obj?.head(nil, a)?.a
obj?.head(nil, a)?.obj
obj?.head(nil, a, 0.5, a)?.a
obj?.head(nil, a, 0.5, add, false)?.b
obj?.head(nil, a, add)?.a
obj?.head(nil, a, ok, nil)?.obj
obj?.head(nil, a, s)?.b
obj?.head(nil, add)?.a
obj?.head(nil, add)?.obj
obj?.head(nil, add, "b")?.obj
obj?.head(nil, add, b)?.obj.obj
obj?.head(nil, add, false)?.a
obj?.head(nil, add, false)?.b
obj?.head(nil, add, nil, add)?.obj
obj?.head(nil, arr)?.a
obj?.head(nil, arr)?.b
obj?.head(nil, arr)?.obj
obj?.head(nil, arr, "a")?.obj
obj?.head(nil, arr, "c")?.b
obj?.head(nil, arr, 1)?.b
obj?.head(nil, arr, s)?.a
obj?.head(nil, b)?.a
obj?.head(nil, b)?.b
obj?.head(nil, b)?.obj
obj?.head(nil, b, a, ok, ok)?.b
obj?.head(nil, b, add)?.a
obj?.head(nil, b, b)?.b
obj?.head(nil, b, false)?.a
obj?.head(nil, b, s)?.a
obj?.head(nil, div)?.a
obj?.head(nil, div)?.obj
obj?.head(nil, div, arr)?.b
obj?.head(nil, f)?.b
obj?.head(nil, f)?.obj
obj?.head(nil, f, add, add)?.b
obj?.head(nil, f, nil)?.a
obj?.head(nil, f, s)?.a
obj?.head(nil, false)?.a
obj?.head(nil, false)?.obj
obj?.head(nil, false, s)?.a
obj?.head(nil, nil)?.a
obj?.head(nil, nil, 0.5)?.obj
obj?.head(nil, nil, add)?.b
obj?.head(nil, nil, add, arr)?.obj
obj?.head(nil, nil, ok)?.obj
obj?.head(nil, obj) in obj
obj?.head(nil, obj)?.a
obj?.head(nil, obj)?.b
obj?.head(nil, obj)?.b.a
obj?.head(nil, obj)?.obj
obj?.head(nil, ok)?.a
obj?.head(nil, ok)?.b
obj?.head(nil, ok)?.obj
obj?.head(nil, ok, "b")?.b
obj?.head(nil, ok, 0.5)?.a
obj?.head(nil, ok, arr)?.b
obj?.head(nil, ok, div, arr, obj)?.obj
obj?.head(nil, ok, nil, ok)?.obj
obj?.head(nil, ok, s, 1, true)?.obj.a
obj?.head(nil, s)?.a
obj?.head(nil, s)?.obj
obj?.head(nil, s, 0.5)?.obj
obj?.head(nil, s, a)?.obj
obj?.head(nil, s, false, s)?.a
obj?.head(nil, s, s)?.b
obj?.head(nil, true)?.a
obj?.head(nil, true)?.head(f, arr)
obj?.head(nil, true)?.obj
obj?.head(none("b", true), s == f)
obj?.head(none("c", false))
obj?.head(none("c", ok))
obj?.head(none("c", true))
obj?.head(none(arr, ok), get(nil, 1), now(div, "a", s, div, f), a)
obj?.head(none(obj, false))
obj?.head(none(obj, ok))
obj?.head(none(s, false))
obj?.head(not false)
obj?.head(not ok)
obj?.head(not true)
obj?.head(now(0, s))
obj?.head(now(0, s), f + b)
obj?.head(now(0.5), arr, obj.a)
obj?.head(now(1))
obj?.head(now(a))
obj?.head(now(a, a, a))
obj?.head(now(arr))
obj?.head(now(b, b))
obj?.head(now(b, div, f))
obj?.head(now(b, s))
obj?.head(now(div))
obj?.head(now(div, div, "b", obj, 1))
obj?.head(now(f, add))
obj?.head(now(false))
obj?.head(now(nil))
obj?.head(now(nil, obj))
obj?.head(now(obj), 0 == 1)
obj?.head(now(obj, 0))
obj?.head(now(ok))
obj?.head(now(ok, arr))
obj?.head(now(ok, b))
obj?.head(now(ok, b, arr, nil))
obj?.head(now(ok, f), true == 0.5)
obj?.head(now(ok, true, a))
obj?.head(now(s))
obj?.head(now(s, b, s), "a" startsWith s)
obj?.head(now(s, nil))
obj?.head(now(true))
obj?.head(now(true, "b", add))
obj?.head(obj != "a")
obj?.head(obj != 0)
obj?.head(obj != 0.5)
obj?.head(obj != add)
obj?.head(obj != nil)
obj?.head(obj != s)
obj?.head(obj && true)
obj?.head(obj == 0.5)
obj?.head(obj == 1)
obj?.head(obj == a)
obj?.head(obj == div)
obj?.head(obj == f, now(1))
obj?.head(obj == false)
obj?.head(obj == obj)
obj?.head(obj == ok)
obj?.head(obj and true, 2 .. b)
obj?.head(obj in arr)
obj?.head(obj in nil)
obj?.head(obj or true)
obj?.head(obj)
obj?.head(obj) != a ** 0.5
obj?.head(obj) != a ? obj : s
obj?.head(obj) != div
obj?.head(obj) != map(arr, s)
obj?.head(obj) != ok
obj?.head(obj) != s
obj?.head(obj) == add
obj?.head(obj) == div
obj?.head(obj) == f
obj?.head(obj) == s
obj?.head(obj) in arr
obj?.head(obj).a
obj?.head(obj).b
obj?.head(obj).head(b)
obj?.head(obj).head(get(div, f))
obj?.head(obj).obj
obj?.head(obj).obj.obj
obj?.head(obj).obj?.a
obj?.head(obj).obj?.b
obj?.head(obj)?.a
obj?.head(obj)?.b
obj?.head(obj)?.head(0 <= f)
obj?.head(obj)?.head(a)
obj?.head(obj)?.head(add)
obj?.head(obj)?.obj
obj?.head(obj)?.obj.obj
obj?.head(obj)[s]
obj?.head(obj, "a").b
obj?.head(obj, "a").obj
obj?.head(obj, "a")?.a
obj?.head(obj, "a")?.obj
obj?.head(obj, "a", arr, obj)?.head(obj == s)
obj?.head(obj, "b").a
obj?.head(obj, "b").b
obj?.head(obj, "b", nil).b
obj?.head(obj, "c").b
obj?.head(obj, "c")?.a
obj?.head(obj, "c")?.obj
obj?.head(obj, 0 > a)
obj?.head(obj, 0).a
obj?.head(obj, 0).b
obj?.head(obj, 0).obj
obj?.head(obj, 0)?.a
obj?.head(obj, 0)?.b
obj?.head(obj, 0, add).b
obj?.head(obj, 0.5).a
obj?.head(obj, 0.5).obj
obj?.head(obj, 0.5)[s]
obj?.head(obj, 0.5, div)?.b
obj?.head(obj, 0.5, nil).b
obj?.head(obj, 1).b
obj?.head(obj, 1, 0).obj
obj?.head(obj, 1, 0)?.head(add)
obj?.head(obj, 1, ok)?.b
obj?.head(obj, 2).a
obj?.head(obj, 2).obj
obj?.head(obj, 2)?.obj
obj?.head(obj, 2, true).a
obj?.head(obj, a <= a)
obj?.head(obj, a)
obj?.head(obj, a).a
obj?.head(obj, a).b
obj?.head(obj, a).obj
obj?.head(obj, a)?.a
obj?.head(obj, a)?.b
obj?.head(obj, a)?.obj
obj?.head(obj, a, "c").a
obj?.head(obj, a, 1, add, s)?.obj
obj?.head(obj, a, 2, obj).obj
obj?.head(obj, a, a).a
obj?.head(obj, a, add, "b").b
obj?.head(obj, a, b)?.b * b
obj?.head(obj, a, f, b, a)?.b
obj?.head(obj, a, obj, 0.5).obj?.b
obj?.head(obj, a, ok, 1).obj?.a
obj?.head(obj, a, ok, add).b
obj?.head(obj, a, s)?.obj
obj?.head(obj, a, s, ok).b
obj?.head(obj, a, true)?.b
obj?.head(obj, add == ok)
obj?.head(obj, add)
obj?.head(obj, add).b
obj?.head(obj, add).obj
obj?.head(obj, add)?.a
obj?.head(obj, add)?.b
obj?.head(obj, add)?.obj
obj?.head(obj, add, nil).b
obj?.head(obj, add, s).a
obj?.head(obj, arr).a
obj?.head(obj, arr).a == ok
obj?.head(obj, arr).b
obj?.head(obj, arr).obj
obj?.head(obj, arr)?.b
obj?.head(obj, arr)?.obj
obj?.head(obj, arr, 0).b
obj?.head(obj, arr, a, b, s)?.a
obj?.head(obj, arr, f).b
obj?.head(obj, arr, f)?.b
obj?.head(obj, arr, nil).a
obj?.head(obj, arr, nil).b
obj?.head(obj, b)
obj?.head(obj, b).obj
obj?.head(obj, b)?.a
obj?.head(obj, b)?.b
obj?.head(obj, b)?.obj
obj?.head(obj, b, "a")?.obj
obj?.head(obj, b, 0.5).b
obj?.head(obj, b, b).obj
obj?.head(obj, b, div)?.b
obj?.head(obj, b, f).obj
obj?.head(obj, b, false, s)?.b
obj?.head(obj, b, nil, arr, true).a
obj?.head(obj, b, obj)?.b
obj?.head(obj, b, obj)?.obj
obj?.head(obj, b, ok).obj
obj?.head(obj, b, s).obj
obj?.head(obj, div != a)
obj?.head(obj, div)
obj?.head(obj, div).a
obj?.head(obj, div).head(add)
obj?.head(obj, div).obj
obj?.head(obj, div)?.a
obj?.head(obj, div)?.b
obj?.head(obj, div)?.fn(-b)
obj?.head(obj, div, "b")?.a
obj?.head(obj, div, "b", 0, "b").obj
obj?.head(obj, div, 0).b
obj?.head(obj, div, 0)?.a
obj?.head(obj, div, 1, false, b).a
obj?.head(obj, div, f).obj
obj?.head(obj, div, nil).a
obj?.head(obj, div, nil).obj
obj?.head(obj, div, obj.b)
obj?.head(obj, div, ok).b
obj?.head(obj, div, ok, nil).a
obj?.head(obj, div, true, a)?.b
obj?.head(obj, f * b)
obj?.head(obj, f)
obj?.head(obj, f) != obj?.head(arr, div)
obj?.head(obj, f) == b
obj?.head(obj, f).b
obj?.head(obj, f).obj
obj?.head(obj, f)?.b
obj?.head(obj, f)?.obj
obj?.head(obj, f, a).a
obj?.head(obj, f, a, f).a
obj?.head(obj, f, div).obj
obj?.head(obj, f, f)?.b
obj?.head(obj, f, false, b).b
obj?.head(obj, f, obj).a
obj?.head(obj, f, obj)?.obj?.b
obj?.head(obj, f, ok, obj.a)
obj?.head(obj, f, true).a
obj?.head(obj, false).a
obj?.head(obj, false).b
obj?.head(obj, false)?.b
obj?.head(obj, false, obj)?.obj
obj?.head(obj, false, ok)?.obj
obj?.head(obj, filter(arr, ok), arr)
obj?.head(obj, first(0.5), f).obj
obj?.head(obj, get(0.5), 0.5 ^ a)
obj?.head(obj, get(a, obj))
obj?.head(obj, get(add, add), add)
obj?.head(obj, get(div, 0))
obj?.head(obj, nil).a
obj?.head(obj, nil).obj
obj?.head(obj, nil)?.b
obj?.head(obj, nil, 1, s, obj).b
obj?.head(obj, nil, a).b
obj?.head(obj, nil, add, obj).obj?.b
obj?.head(obj, nil, b, a)?.obj
obj?.head(obj, nil, f).obj
obj?.head(obj, obj)
obj?.head(obj, obj).a
obj?.head(obj, obj).head(add)
obj?.head(obj, obj)?.a
obj?.head(obj, obj)?.b
obj?.head(obj, obj)?.obj
obj?.head(obj, obj, 0)?.b
obj?.head(obj, obj, a, "a", a)?.b
obj?.head(obj, obj, arr).a
obj?.head(obj, obj, b)?.a
obj?.head(obj, obj, false, f, 1).obj
obj?.head(obj, obj, nil, true)?.obj
obj?.head(obj, obj.b)
obj?.head(obj, obj.fn(b))
obj?.head(obj, obj?.head(f)).b
obj?.head(obj, obj?.obj)
obj?.head(obj, ok == arr)?.b
obj?.head(obj, ok)
obj?.head(obj, ok).obj
obj?.head(obj, ok)?.a
obj?.head(obj, ok)?.b
obj?.head(obj, ok)?.obj
obj?.head(obj, ok, 0.5).obj
obj?.head(obj, ok, a).b
obj?.head(obj, ok, a, "b")?.obj
obj?.head(obj, ok, a, div, 0.5).a
obj?.head(obj, ok, a, true)?.a
obj?.head(obj, ok, b).obj
obj?.head(obj, ok, f).obj
obj?.head(obj, ok, false, f, div)?.obj
obj?.head(obj, ok, nil)?.b
obj?.head(obj, ok, obj).a
obj?.head(obj, s)
obj?.head(obj, s).a
obj?.head(obj, s).obj
obj?.head(obj, s).obj.a
obj?.head(obj, s)?.head(get(b, a)?.obj)
obj?.head(obj, s, 0, 0)?.obj
obj?.head(obj, s, a, a, ok).b
obj?.head(obj, s, add)
obj?.head(obj, s, add, obj)?.a
obj?.head(obj, s, f, a, b)?.b
obj?.head(obj, s, nil, s)?.a
obj?.head(obj, s, s, a, 2).b
obj?.head(obj, s[2])
obj?.head(obj, string(a))
obj?.head(obj, true).a
obj?.head(obj, true)?.a
obj?.head(obj, true)?.b
obj?.head(obj, true, 1, arr)?.b
obj?.head(obj, true, div, obj)?.b
obj?.head(obj, true, nil).obj
obj?.head(obj.a)
obj?.head(obj.a, add)
obj?.head(obj.a, get(a, add))
obj?.head(obj.b)
obj?.head(obj.b, get(a, 2))
obj?.head(obj.b, obj.head(ok, 0, add, 0.5, add))
obj?.head(obj.b, string("a"))
obj?.head(obj.fn(2))
obj?.head(obj.fn(a))
obj?.head(obj.head("c", "c"), map(obj, true))
obj?.head(obj.head(0))
obj?.head(obj.head(0, false, s))
obj?.head(obj.head(0.5, true))
obj?.head(obj.head(2))
obj?.head(obj.head(add))
obj?.head(obj.head(arr))
obj?.head(obj.head(arr, add))
obj?.head(obj.head(arr, div))
obj?.head(obj.head(b))
obj?.head(obj.head(b), b, 0 == add)
obj?.head(obj.head(b, 0.5, a))
obj?.head(obj.head(div))
obj?.head(obj.head(div, div))
obj?.head(obj.head(f))
obj?.head(obj.head(false, b, f, b, a))
obj?.head(obj.head(obj))
obj?.head(obj.head(ok))
obj?.head(obj.head(ok, nil, f))
obj?.head(obj.head(s, a, add, add, add))
obj?.head(obj.head(s, ok))
obj?.head(obj.head(true))
obj?.head(obj.obj)
obj?.head(obj.obj).b
obj?.head(obj.obj)?.b
obj?.head(obj.obj, f)
obj?.head(obj.obj, get(add, 0))
obj?.head(obj.obj, obj)
obj?.head(obj.obj, ok)
obj?.head(obj?.a)
obj?.head(obj?.a, div)
obj?.head(obj?.a, obj)
obj?.head(obj?.a, obj.a)
obj?.head(obj?.a, ok or false)
obj?.head(obj?.a, s)
obj?.head(obj?.b)
obj?.head(obj?.b, "c" <= s)
obj?.head(obj?.b, f)
obj?.head(obj?.b, filter(arr, ok))
obj?.head(obj?.fn(a), b)
obj?.head(obj?.fn(b))
obj?.head(obj?.head("a"))
obj?.head(obj?.head(0))
obj?.head(obj?.head(0.5))
obj?.head(obj?.head(1))
obj?.head(obj?.head(a))
obj?.head(obj?.head(a, arr))
obj?.head(obj?.head(a, ok, obj, add))
obj?.head(obj?.head(add))
obj?.head(obj?.head(add, add))
obj?.head(obj?.head(add, false))
obj?.head(obj?.head(arr, nil))
obj?.head(obj?.head(b))
obj?.head(obj?.head(b, a))
obj?.head(obj?.head(b, a, div))
obj?.head(obj?.head(b, false))
obj?.head(obj?.head(b, s))
obj?.head(obj?.head(f, a, 1))
obj?.head(obj?.head(false))
obj?.head(obj?.head(false, "c"))
obj?.head(obj?.head(obj))
obj?.head(obj?.head(obj)).obj
obj?.head(obj?.head(obj, 0))
obj?.head(obj?.head(ok))
obj?.head(obj?.head(ok), div)
obj?.head(obj?.head(ok, 0))
obj?.head(obj?.head(ok, 0, add), obj?.a)
obj?.head(obj?.head(s))
obj?.head(obj?.head(s, arr, 0.5))
obj?.head(obj?.head(s, arr, true))
obj?.head(obj?.head(s, nil, 0))
obj?.head(obj?.head(s, true))
obj?.head(obj?.obj)
obj?.head(obj?.obj).obj
obj?.head(obj?.obj)?.obj
obj?.head(obj?.obj, a)
obj?.head(obj?.obj, map(obj, ok))
obj?.head(obj[nil])
obj?.head(obj[s])
obj?.head(ok != "c", b)
obj?.head(ok != a)
obj?.head(ok != arr)
obj?.head(ok != b)
obj?.head(ok != div)
obj?.head(ok != f)
obj?.head(ok != false)
obj?.head(ok != obj)
obj?.head(ok != s, get(s, 1), add)
obj?.head(ok && "a")
obj?.head(ok && 0)
obj?.head(ok && 1 % b)
obj?.head(ok && a)
obj?.head(ok && a, obj != f)
obj?.head(ok && arr)
obj?.head(ok && f)
obj?.head(ok && obj)
obj?.head(ok && ok)
obj?.head(ok == 0)
obj?.head(ok == 0, f)
obj?.head(ok == 1, add == obj)
obj?.head(ok == 2)
obj?.head(ok == a)
obj?.head(ok == b)
obj?.head(ok == div)
obj?.head(ok == div, f)
obj?.head(ok == obj)
obj?.head(ok == ok)
obj?.head(ok == s)
obj?.head(ok == true)
obj?.head(ok ? "b" : add)
obj?.head(ok ? "c" : "b")
obj?.head(ok ? 1 : arr)
obj?.head(ok ? 1 : div.b)
obj?.head(ok ? a : "c")
obj?.head(ok ? a : f)
obj?.head(ok ? a : obj, add)
obj?.head(ok ? add : div)
obj?.head(ok ? add : obj, s, obj.head(a, obj))
obj?.head(ok ? arr : div)
obj?.head(ok ? arr : nil)
obj?.head(ok ? b : 0.5)
obj?.head(ok ? b : b)
obj?.head(ok ? b : nil && div)
obj?.head(ok ? div : 0.5)
obj?.head(ok ? div : arr)
obj?.head(ok ? div : nil)
obj?.head(ok ? f : 1)
obj?.head(ok ? false : ok)
obj?.head(ok ? nil : 0.5)
obj?.head(ok ? nil : arr)
obj?.head(ok ? nil : b, obj?.b)
obj?.head(ok ? nil : f, arr)
obj?.head(ok ? nil : ok)
obj?.head(ok ? obj : add)
obj?.head(ok ? obj : b)
obj?.head(ok ? obj : s)
obj?.head(ok ? ok : arr)
obj?.head(ok ? true : add)
obj?.head(ok and "a")
obj?.head(ok and a, last(0.5))
obj?.head(ok and add)
obj?.head(ok and b)
obj?.head(ok and div, get(0, arr))
obj?.head(ok and f)
obj?.head(ok and nil, f)?.obj
obj?.head(ok and obj)
obj?.head(ok and obj).obj
obj?.head(ok and ok)
obj?.head(ok and s)
obj?.head(ok in arr)
obj?.head(ok or "a")
obj?.head(ok or "c")
obj?.head(ok or 2)
obj?.head(ok or a)
obj?.head(ok or add)
obj?.head(ok or arr)
obj?.head(ok or div)
obj?.head(ok or get(div >= b, arr?.head("b")))
obj?.head(ok or nil)
obj?.head(ok or obj)
obj?.head(ok or true, a)
obj?.head(ok || 0)
obj?.head(ok || 0, f)
obj?.head(ok || a)
obj?.head(ok || add)
obj?.head(ok || arr.obj in map("b" / a, min(f)).obj)
obj?.head(ok || b || add.fn(0.5, obj))
obj?.head(ok || div)
obj?.head(ok || div, 1 != add)
obj?.head(ok || s)
obj?.head(ok)
obj?.head(ok) != a
obj?.head(ok) != f
obj?.head(ok) != obj?.a
obj?.head(ok) != obj?.b
obj?.head(ok) && not ok
obj?.head(ok) && ok
obj?.head(ok) == a
obj?.head(ok) == obj.obj
obj?.head(ok) == ok
obj?.head(ok) ? s : arr
obj?.head(ok) and 0 == nil
obj?.head(ok) and 0.5 != a
obj?.head(ok) or ok
obj?.head(ok) || obj?.a?.head(b <= a ? s : a / a || lastIndexOf(2) % (arr matches 0.5))
obj?.head(ok, "a" contains "b")
obj?.head(ok, 2) == keys(obj)
obj?.head(ok, a)
obj?.head(ok, add != a)
obj?.head(ok, arr)
obj?.head(ok, b)
obj?.head(ok, div)
obj?.head(ok, f)
obj?.head(ok, f) == s
obj?.head(ok, f, b)
obj?.head(ok, false or ok)
obj?.head(ok, false) or ok
obj?.head(ok, map(arr, false))
obj?.head(ok, none(s, false))
obj?.head(ok, not ok)
obj?.head(ok, obj)
obj?.head(ok, obj) != add ? b : nil
obj?.head(ok, obj.head(s), obj)
obj?.head(ok, obj?.obj)
obj?.head(ok, ok or 0.5)
obj?.head(ok, s)
obj?.head(ok, s, ok, 0.5) == obj
obj?.head(ok, s, s) == a
obj?.head(one("a", ok))
obj?.head(one("b", true))
obj?.head(one(arr, false))
obj?.head(one(arr, ok))
obj?.head(one(arr, ok), ok)
obj?.head(one(arr, true))
obj?.head(one(obj, false))
obj?.head(one(obj, ok))
obj?.head(one(obj, true))
obj?.head(one(s, # < #))
obj?.head(one(s, ok))
obj?.head(one(s, true))
obj?.head(s != "a", f)
obj?.head(s != "b")
obj?.head(s != 0)
obj?.head(s != 1)
obj?.head(s != 2)
obj?.head(s != 2, obj)
obj?.head(s != a)
obj?.head(s != add)
obj?.head(s != arr)
obj?.head(s != b)
obj?.head(s != div)
obj?.head(s != f)
obj?.head(s != nil)
obj?.head(s != obj)
obj?.head(s != ok)
obj?.head(s + s)
obj?.head(s <= "b")
obj?.head(s <= s)
obj?.head(s == "b")
obj?.head(s == "c")
obj?.head(s == 0)
obj?.head(s == 2)
obj?.head(s == a)
obj?.head(s == add)
obj?.head(s == arr)
obj?.head(s == f)
obj?.head(s == false)
obj?.head(s == obj)
obj?.head(s == ok)
obj?.head(s == s)
obj?.head(s == true)
obj?.head(s > s)
obj?.head(s >= s)
obj?.head(s and false)
obj?.head(s contains "a")
obj?.head(s contains s, add != 0.5)
obj?.head(s endsWith "a")
obj?.head(s endsWith s)
obj?.head(s in arr)
obj?.head(s in obj)
obj?.head(s matches s, ok or ok)
obj?.head(s or false)
obj?.head(s startsWith "b")
obj?.head(s startsWith s)
obj?.head(s)
obj?.head(s) != div
obj?.head(s) != obj.a
obj?.head(s) == arr
obj?.head(s) == ok
obj?.head(s) endsWith string(0.5)
obj?.head(s)[a]
obj?.head(s, "a") != s
obj?.head(s, "b" == a)
obj?.head(s, "b", 0.5) == div
obj?.head(s, a % a)
obj?.head(s, a)
obj?.head(s, add)
obj?.head(s, add, nil, arr) != f
obj?.head(s, arr)
obj?.head(s, arr) == f
obj?.head(s, arr) == ok
obj?.head(s, arr, div)
obj?.head(s, b == add)
obj?.head(s, div)
obj?.head(s, f)
obj?.head(s, get(0, div))
obj?.head(s, get(f, obj))
obj?.head(s, nil) != ok
obj?.head(s, nil, add)[2 + 0]
obj?.head(s, nil, ok, f)[a]
obj?.head(s, none(s, ok))
obj?.head(s, now(0.5, f, ok))
obj?.head(s, obj.obj)
obj?.head(s, ok in nil)
obj?.head(s, ok)
obj?.head(s, ok) in obj
obj?.head(s, ok, ok) != f == nil
obj?.head(s, s)
obj?.head(s[0.5])
obj?.head(s[a])
obj?.head(s[b])
obj?.head(s[f])
obj?.head(string("a"))
obj?.head(string("a", b))
obj?.head(string("c"))
obj?.head(string(1, nil))
obj?.head(string(2))
obj?.head(string(a))
obj?.head(string(a), 0 or false)
obj?.head(string(arr))
obj?.head(string(arr), arr)
obj?.head(string(arr), b == 2)
obj?.head(string(div))
obj?.head(string(div, f))
obj?.head(string(f))
obj?.head(string(nil))
obj?.head(string(nil, "c", s))
obj?.head(string(nil, s))
obj?.head(string(obj))
obj?.head(string(obj, arr, ok, nil))
obj?.head(string(s))
obj?.head(string(s, "b"))
obj?.head(string(s, 2))
obj?.head(string(s, arr, ok, obj))
obj?.head(toBase64("a"))
obj?.head(toBase64("b"))
obj?.head(toBase64(s))
obj?.head(toBase64(s, 0.5))
obj?.head(toBase64(s, 1))
obj?.head(toJSON("a"))
obj?.head(toJSON("c"))
obj?.head(toJSON("c", nil))
obj?.head(toJSON(0.5, nil))
obj?.head(toJSON(2, "c"))
obj?.head(toJSON(2, b))
obj?.head(toJSON(a))
obj?.head(toJSON(a, 0))
obj?.head(toJSON(a, s))
obj?.head(toJSON(arr))
obj?.head(toJSON(arr), div)
obj?.head(toJSON(b))
obj?.head(toJSON(b, 0, s))
obj?.head(toJSON(f))
obj?.head(toJSON(f, "b"))
obj?.head(toJSON(false), ok)
obj?.head(toJSON(nil))
obj?.head(toJSON(nil, nil, 2, div))
obj?.head(toJSON(true, a))
obj?.head(trim("c"))
obj?.head(trimPrefix("a", ok, "c", s, 0.5))
obj?.head(trimPrefix("c"))
obj?.head(trimPrefix("c", s))
obj?.head(trimSuffix("b"))
obj?.head(true != 0.5)
obj?.head(true != ok)
obj?.head(true != s)
obj?.head(true != true)
obj?.head(true && a)
obj?.head(true && arr)
obj?.head(true && arr, any(arr, ok))
obj?.head(true && b)
obj?.head(true == add)
obj?.head(true == div)
obj?.head(true == obj, div(2, 1))
obj?.head(true == ok)
obj?.head(true ? "b" : obj)
obj?.head(true ? a : obj)
obj?.head(true ? add : div)
obj?.head(true ? arr : add)
obj?.head(true ? div : b)
obj?.head(true ? nil : arr)
obj?.head(true ? obj : arr)
obj?.head(true ? obj : ok)
obj?.head(true ? ok : b)
obj?.head(true and "c")
obj?.head(true and nil)
obj?.head(true and obj)
obj?.head(true and true, b)
obj?.head(true in nil)
obj?.head(true or b, string("c"))
obj?.head(true or nil)
obj?.head(true or obj)
obj?.head(true or s)
obj?.head(true || div)
obj?.head(true || false, s contains s)
obj?.head(true || nil, add)
obj?.head(true) != div
obj?.head(true) or f < 1
obj?.head(true, div) or obj.b
obj?.head(true, f, ok, obj) and add == add
obj?.head(true, obj) == b ? 0 : obj.b
obj?.head(true, ok, b, 0) or obj.a
obj?.head(true, s, div, f) == obj.b
obj?.head(upper("a"))
obj?.head(upper("b"))
obj?.head(upper(1, s))
obj?.head(upper(s))
obj?.head(upper(true, f, 1, s))
obj?.head(values(obj))
obj?.head({"a": 0, "b": div})
obj?.head({"b": s})
obj?.head({"c": f})
obj?.obj
obj?.obj != -a
obj?.obj != -f
obj?.obj != a
obj?.obj != add
obj?.obj != any(arr, false)
obj?.obj != arr
obj?.obj != arr ? ok : s
obj?.obj != arr ? s : nil
obj?.obj != b
obj?.obj != div
obj?.obj != div(b, a)
obj?.obj != f
obj?.obj != float(0.5)
obj?.obj != map(arr, true)
obj?.obj != max(0.5)
obj?.obj != nil == nil
obj?.obj != nil == ok
obj?.obj != obj ? arr : ok
obj?.obj != obj.obj
obj?.obj != obj?.a
obj?.obj != obj?.b
obj?.obj != ok
obj?.obj != s
obj?.obj == -a
obj?.obj == a
obj?.obj == a ** a
obj?.obj == a ** f
obj?.obj == add
obj?.obj == add(2, b)
obj?.obj == add(a, b)
obj?.obj == add(b, 0)
obj?.obj == arr
obj?.obj == b
obj?.obj == b ? 2 : div
obj?.obj == b ? add : a
obj?.obj == div
obj?.obj == div ? arr : a
obj?.obj == f
obj?.obj == map(arr, ok)
obj?.obj == obj
obj?.obj == obj ? b : false
obj?.obj == obj.obj
obj?.obj == obj.obj.a
obj?.obj == obj?.b
obj?.obj == ok
obj?.obj == s
obj?.obj == s + "a"
obj?.obj in arr
obj?.obj in obj.head(arr, obj)
obj?.obj or 1 == 0
obj?.obj.a
obj?.obj.a != add
obj?.obj.a != arr
obj?.obj.a == arr
obj?.obj.a == f
obj?.obj.b
obj?.obj.b > b
obj?.obj.b >= a
obj?.obj.obj
obj?.obj.obj == arr
obj?.obj.obj.a
obj?.obj.obj.b
obj?.obj.obj.b == add
obj?.obj.obj.obj
obj?.obj.obj?.a
obj?.obj.obj?.b
obj?.obj.obj?.obj
obj?.obj?.a
obj?.obj?.a <= b
obj?.obj?.a == add
obj?.obj?.b
obj?.obj?.b == div
obj?.obj?.b == obj
obj?.obj?.obj
obj?.obj?.obj != ok
obj?.obj?.obj.a
obj?.obj?.obj.b
obj?.obj?.obj.obj
obj?.obj?.obj?.a
obj?.obj?.obj?.b
obj?.obj?.obj?.obj
obj?.obj[obj.head(s, 0)] == add
obj?.obj[obj?.head(nil, "a")]
obj?.obj[obj?.head(s)]
obj?.obj[s]
obj?.obj[string(0.5)]?.a
obj[nil] != div
obj[nil] != s
obj[nil] == add
obj[nil] == arr
obj[nil] == f
obj[nil]?.a
obj[nil]?.a.a
obj[nil]?.a.b
obj[nil]?.a.obj
obj[nil]?.a?.a
obj[nil]?.b
obj[nil]?.b?.b
obj[nil]?.fn(b)
obj[nil]?.fn(ok)
obj[nil]?.head(arr)
obj[nil]?.obj
obj[nil]?.obj.obj
obj[obj.head(s)]
obj[ok ? "b" : add]
obj[s[a:b]]
obj[s]
obj[s] != arr
obj[s] != div
obj[s] != f
obj[s] != f ? add : div
obj[s] != s
obj[s] == !ok
obj[s] == add
obj[s] == obj.head(s)
obj[s]?.a
obj[s]?.a.b
obj[s]?.a?.b
obj[s]?.b
obj[s]?.b.a
obj[s]?.b.b
obj[s]?.b?.obj
obj[s]?.fn(a > 0).b
obj[s]?.fn(f)
obj[s]?.head(get(b == a))
obj[s]?.head(obj.a)
obj[s]?.head(ok || a)
obj[s]?.obj
obj[s]?.obj.b
obj[s]?.obj.obj
obj[s]?.obj?.a
obj[s]?.obj?.b.obj
obj[s]?.obj?.obj
obj[string("a")]
obj[string(2)]?.a
obj[string(add)]
obj[string(nil)]
obj[string(obj)]
obj[toJSON("b")]
obj[toJSON(a)]
obj[toJSON(f)]
obj[toJSON(ok)]?.obj
obj[trimPrefix("b")]
obj[upper(s)]
ok
ok != !true
ok != (arr != arr || a > a)
ok != (ok or true)
ok != (true || true)
ok != false ? 1 : "b"
ok != first(obj?.head(0.5))
ok != nil != nil
ok != nil != ok
ok != nil != true
ok != nil == ok
ok != nil ? true : f
ok != nil || one(arr, ok)
ok != none(arr, false)
ok != obj.a
ok != obj.b
ok != obj.head("a", true)
ok != obj.head(add)
ok != obj.head(arr)
ok != obj.head(f, "c")
ok != obj.head(ok, "c", nil, nil)
ok != obj.obj
ok != obj.obj.obj
ok != obj?.a
ok != obj?.b
ok != obj?.fn(a)
ok != obj?.fn(b)
ok != obj?.head(1)
ok != obj?.head(get(ok, obj))?.b
ok != obj?.head(nil, add)
ok != obj?.head(obj == obj)
ok != obj?.head(ok)
ok != obj?.obj
ok != obj?.obj.a
ok != obj?.obj.obj == nil ? s : obj.obj?.obj
ok != obj?.obj?.a
ok != obj?.obj?.b
ok != ok
ok != ok != ok
ok != ok and obj.fn(f, nil)
ok != ok or b >= a
ok != one(arr, false)
ok != true ? "b" : nil
ok && !ok
ok && "a" > "a"
ok && "a" >= s
ok && "c" < s
ok && (true || ok)
ok && 0 != f
ok && 0 <= f
ok && 0 == nil
ok && 0.5 != b
ok && 0.5 >= f
ok && 1 != 2
ok && 2 != f
ok && 2 > f
ok && a < 1
ok && a < b
ok && a <= 0
ok && a <= a
ok && a <= f
ok && a == 0
ok && a >= f
ok && all(arr, ok)
ok && all(arr, true)
ok && arr != arr
ok && arr == arr
ok && b < 0.5
ok && b == b
ok && b >= f
ok && b in arr
ok && div == nil
ok && f != 0
ok && f != f
ok && f < f
ok && false && ok
ok && false ? f : toJSON("c")
ok && nil == "c"
ok && nil == f
ok && none(arr, ok)
ok && not ok
ok && obj.a
ok && obj.b
ok && obj.head(a)
ok && obj.head(b)
ok && obj.head(b, obj)
ok && obj.head(false)
ok && obj.obj
ok && obj.obj?.a
ok && obj.obj?.obj
ok && obj?.a
ok && obj?.b
ok && obj?.head(a, b)
ok && obj?.head(add, b, nil, obj)
ok && obj?.head(arr)
ok && obj?.head(false)
ok && obj?.head(nil)
ok && obj?.obj
ok && obj?.obj != obj.b
ok && obj?.obj?.a
ok && obj?.obj?.b
ok && ok
ok && ok ? a : ok
ok && ok ? add : s
ok && ok ? b : a
ok && ok ? f : obj
ok && ok and obj?.obj
ok && ok or nil == a
ok && ok or obj?.head(div, f)
ok && ok || ok
ok && s != s
ok && s contains "b"
ok && true && obj.obj
ok && true and ok
ok && true or obj?.obj
ok == !true
ok == (false || ok)
ok == (ok and true)
ok == false == ok ? b : obj
ok == false || 0.5 >= f
ok == false || s != nil
ok == nil ? 2 : arr
ok == nil ? add : arr
ok == nil ? div : "a"
ok == nil ? div : obj.b
ok == nil ? f : ok
ok == nil ? nil : "c"
ok == obj.a
ok == obj.b
ok == obj.head(a)
ok == obj.head(add)
ok == obj.head(b)
ok == obj.head(div)
ok == obj.head(f, s, 0, 2)
ok == obj.head(ok)
ok == obj.head(s)
ok == obj.head(true)
ok == obj.obj
ok == obj?.a
ok == obj?.b
ok == obj?.head(0, s)
ok == obj?.head(a != a)
ok == obj?.head(a, 0, obj)
ok == obj?.head(a, obj, 0, s, obj)
ok == obj?.head(add)
ok == obj?.head(add, add)
ok == obj?.head(b, "a", add)
ok == obj?.head(div, "b")
ok == obj?.head(nil, false)
ok == obj?.head(obj.head(arr, b))
ok == obj?.head(ok)
ok == obj?.head(ok, div, f, nil, 0.5)
ok == obj?.obj
ok == ok
ok == ok != (ok or true)
ok == ok == obj?.a
ok == ok ? add : nil
ok == ok ? b : s
ok == ok and arr == arr
ok == ok || obj.obj
ok == one(arr, ok)
ok == true != nil
ok == true ? add : s
ok == true and ok
ok ? "a" : a != b / b
ok ? "a" : f == obj.b
ok ? "a" : obj.a
ok ? "a" : obj.b
ok ? "a" : obj?.a
ok ? "b" : b % obj.head(ok)
ok ? "b" : obj.b
ok ? "b" : obj.obj
ok ? "b" : obj?.b?.b
ok ? "b" : obj?.obj
ok ? "b" : s endsWith obj.head(add)
ok ? "c" : 0 % a
ok ? "c" : 0.5 * f
ok ? "c" : obj?.b
ok ? "c" : obj?.fn(add(arr, a) in none(0, b))
ok ? "c" : obj?.head(arr?.head(a), arr.head(!arr, div?.head(obj, "c"), int(div, div)))
ok ? 0 * b : obj?.obj
ok ? 0 : 1 / obj.fn(add, false, add)
ok ? 0 : a == b
ok ? 0 : f * b
ok ? 0 : obj != obj
ok ? 0 : obj.a
ok ? 0 : obj.obj
ok ? 0 : obj?.a
ok ? 0 : obj?.b
ok ? 0 : obj?.b.head(add(map(f / b, add(0.5)), add(arr * s, upper(b))))
ok ? 0 : obj?.fn(add?.obj).b
ok ? 0 : obj?.fn(any(a, ok))
ok ? 0 : obj?.fn(div(a.head("c", obj), div(div)))
ok ? 0 : obj?.fn(div(false))?.a
ok ? 0 : obj?.head(any(ok, div(obj)))
ok ? 0 : obj?.head(hasPrefix(true, "c", add, f), div.a)
ok ? 0 : obj?.obj
ok ? 0 : s <= obj.b
ok ? 0 == 0 : s
ok ? 0.5 != 0 : trim(nil, s)
ok ? 0.5 : add == obj.fn(s)
ok ? 0.5 : b == obj?.a
ok ? 0.5 : f ^ f
ok ? 0.5 : obj.a
ok ? 0.5 : obj.b
ok ? 0.5 : obj.fn(obj)
ok ? 0.5 : obj.head(add.a * div.fn(0, f))
ok ? 0.5 : obj.obj
ok ? 0.5 : obj?.a
ok ? 0.5 : obj?.b
ok ? 0.5 : obj?.head(nil - arr)
ok ? 0.5 : obj?.obj
ok ? 1 + b : a
ok ? 1 : obj in obj.b
ok ? 1 : obj.b
ok ? 1 : obj?.head(arr[0:obj], a?.a)
ok ? 1 : obj?.obj
ok ? 2 : add == div
ok ? 2 : obj.b
ok ? 2 : obj.obj
ok ? 2 : obj?.a
ok ? a : "a" != s
ok ? a : -0
ok ? a : 0 < b
ok ? a : 0 > a
ok ? a : 0.5 / a
ok ? a : 1 + f
ok ? a : 2 / a
ok ? a : a / obj.obj
ok ? a : a >= a
ok ? a : add
ok ? a : obj.a
ok ? a : obj.b
ok ? a : obj.head(all(b, a))
ok ? a : obj.obj
ok ? a : obj.obj < a
ok ? a : obj?.a
ok ? a : obj?.b
ok ? a : obj?.head(add).head(join(nil, ok) + f)
ok ? a : obj?.head(div(add(arr, div, b, "a", b)))
ok ? a : obj?.head(now(add(div, obj, add), add.obj, get(ok, b), div(arr)))
ok ? a : obj?.obj
ok ? a : s
ok ? a < 1 : add
ok ? a < a : obj
ok ? abs(0) : f
ok ? add : 0.5 * a
ok ? add : 0.5 >= a
ok ? add : a
ok ? add : arr
ok ? add : b .. a
ok ? add : div
ok ? add : f
ok ? add : nil != obj.b
ok ? add : nil == div
ok ? add : obj
ok ? add : obj in obj.b
ok ? add : obj.a
ok ? add : obj.b
ok ? add : obj.b?.obj
ok ? add : obj.fn("c", b).obj
ok ? add : obj.fn(f.a < a?.head(1), f)
ok ? add : obj.head(arr, s)
ok ? add : obj.head(true)?.obj
ok ? add : obj.obj
ok ? add : obj.obj != obj.obj
ok ? add : obj?.a
ok ? add : obj?.b
ok ? add : obj?.b.b
ok ? add : obj?.fn(a?.fn(filter(0.5, "b"), add(a, arr)))
ok ? add : obj?.fn(add(obj endsWith obj), obj)
ok ? add : obj?.fn(none(arr, ok) > f - arr)
ok ? add : obj?.obj
ok ? add : ok
ok ? add : s
ok ? arr : "c" == obj?.obj
ok ? arr : 0 ** a
ok ? arr : a
ok ? arr : a + add(b, nil)
ok ? arr : a > b
ok ? arr : add
ok ? arr : arr
ok ? arr : arr in fromJSON(s)
ok ? arr : arr in obj?.fn(a)
ok ? arr : b
ok ? arr : b .. a
ok ? arr : b > obj.head(0.5, 0, ok)
ok ? arr : div == obj?.head(nil)
ok ? arr : f
ok ? arr : obj.b
ok ? arr : obj.fn(arr)?.a
ok ? arr : obj.head(all(f, a) matches div?.head("a", a), all(arr, b) / s?.fn(2), obj?.b?.a, count("b", add).b)
ok ? arr : obj.head(div(add(a), arr?.fn(nil)), none(nil, ok) < hasSuffix(true, add), min(0.5, "c", true, div) ? div.obj : lower(false, a, 0))
ok ? arr : obj.head(f.head(ok) + a)
ok ? arr : obj.head(s, s)
ok ? arr : obj.obj
ok ? arr : obj?.b
ok ? arr : obj?.b.b
ok ? arr : obj?.fn(f startsWith len(true, obj, 0), arr matches b?.a).b
ok ? arr : obj?.fn(obj in min(true, ok), all(a .. arr, f), ("c" == ok) * a)
ok ? arr : obj?.obj
ok ? arr : ok
ok ? arr : s + s
ok ? arr : s contains obj.a
ok ? arr : s matches obj?.b
ok ? arr[a:a] : nil != false
ok ? b ** f : arr
ok ? b + f : obj?.b
ok ? b : (false ? b : nil)
ok ? b : 0 + b
ok ? b : add
ok ? b : b
ok ? b : div
ok ? b : f >= f
ok ? b : int(s)
ok ? b : obj
ok ? b : obj.a
ok ? b : obj.obj
ok ? b : obj?.a
ok ? b : obj?.b
ok ? b : obj?.fn("b" .. 0)
ok ? b : obj?.fn(b?.obj, none(obj, ok))
ok ? b : obj?.obj
ok ? b : ok
ok ? b : s < s
ok ? b : s endsWith obj.b
ok ? div : 1 * obj.a
ok ? div : a
ok ? div : a < f
ok ? div : add
ok ? div : b
ok ? div : b - b ^ 0
ok ? div : div
ok ? div : f
ok ? div : keys(obj)
ok ? div : nil == ok
ok ? div : obj.b
ok ? div : obj.fn(ok != f, div?.obj)
ok ? div : obj.obj
ok ? div : obj?.a
ok ? div : obj?.b
ok ? div : obj?.fn(add)
ok ? div : obj?.fn(obj.head(1))
ok ? div : obj?.head(div, a.a)
ok ? div : obj?.head(false ** true <= date(arr, s))
ok ? div : obj?.head(obj?.head(s, 0, obj) .. add, none(div.a, false != 2))
ok ? div : obj?.head(ok, add.fn(add)) * a
ok ? div : obj?.obj
ok ? div : obj[obj?.head(arr)]
ok ? div : ok
ok ? div : s <= s
ok ? div : s contains s != true
ok ? div : toJSON(0)
ok ? div(a, b) : f
ok ? f - 0 : a / a
ok ? f : (true ? arr : "b")?.a
ok ? f : 0 == obj.obj
ok ? f : 0.5 ** b
ok ? f : 0.5 - f
ok ? f : 0.5 > f
ok ? f : 2 % obj.fn(div)
ok ? f : a * a
ok ? f : a <= obj.head(true, ok)
ok ? f : add
ok ? f : b
ok ? f : f
ok ? f : f - obj.obj
ok ? f : f >= f
ok ? f : obj.a?.a
ok ? f : obj.b
ok ? f : obj.fn(any(div, f))
ok ? f : obj.head(obj.head(1), all(s, b), add(true))
ok ? f : obj.obj
ok ? f : obj?.a
ok ? f : obj?.b
ok ? f : obj?.fn(div.obj, a, map(f, f), one(s, b))
ok ? f : obj?.obj
ok ? f : obj[obj.head("c")]?.b
ok ? false : a / obj.a?.fn(div(arr, a, ok).b, add(obj[nil]))
ok ? false : b - f
ok ? false : obj.a
ok ? false : obj.b
ok ? false : obj.fn(div).a
ok ? false : obj.head(ok)
ok ? false : obj.head(s.fn(obj, add, obj))
ok ? false : obj.obj
ok ? false : obj?.a
ok ? false : obj?.head(map(b, ok)).b
ok ? false : obj?.obj
ok ? map(arr, f) : arr
ok ? map(arr, f) : obj?.b
ok ? max(b) : s
ok ? nil : 0 * get(arr, b)
ok ? nil : a == f * b
ok ? nil : arr[a:obj.obj]
ok ? nil : b .. obj.b?.obj
ok ? nil : f == a - a
ok ? nil : obj.a
ok ? nil : obj.b
ok ? nil : obj.fn(0 % add.a)
ok ? nil : obj.fn(div(s))
ok ? nil : obj.obj
ok ? nil : obj?.a
ok ? nil : obj?.fn(add(arr, nil, b, obj))
ok ? nil : obj?.fn(arr != ok, f.obj)
ok ? nil : obj?.fn(filter(obj, b) and div(ok, b))?.head(b)
ok ? nil : obj?.head(get("b" ** div, count(ok, add)))
ok ? nil : obj?.obj
ok ? nil == add : s
ok ? not false : true || false
ok ? obj : "b" startsWith obj.a
ok ? obj : "c" < "a"
ok ? obj : 0 - a ^ b
ok ? obj : 0.5 * obj.b
ok ? obj : 2 >= obj?.obj
ok ? obj : a
ok ? obj : a >= f
ok ? obj : add
ok ? obj : b ^ b
ok ? obj : div
ok ? obj : f
ok ? obj : nil != s
ok ? obj : obj
ok ? obj : obj.a
ok ? obj : obj.b
ok ? obj : obj.fn(indexOf(map(add, div)))
ok ? obj : obj.head(none(a, a / 0), nil .. f?.obj, div(0).a)
ok ? obj : obj.obj
ok ? obj : obj?.a
ok ? obj : obj?.b
ok ? obj : obj?.head(add.obj.a)
ok ? obj : obj?.head(arr)
ok ? obj : obj?.obj
ok ? obj : ok
ok ? obj : s
ok ? obj : true != nil
ok ? obj.a : 0.5 != 1
ok ? obj.b : (ok ? 2 : add)
ok ? obj.b : a
ok ? obj.head(a) : a
ok ? obj.head(nil, div, 0.5, add) : add
ok ? obj.obj : s
ok ? obj?.fn(0) : 1 * a
ok ? obj?.obj : obj
ok ? ok : a
ok ? ok : a ^ obj.fn(a, 1)
ok ? ok : add
ok ? ok : arr
ok ? ok : b > a - 0
ok ? ok : div
ok ? ok : obj.b
ok ? ok : obj.b?.obj?.b
ok ? ok : obj.fn(0.5 ^ f, none(arr, b), f?.obj, all(b, obj), splitN(true))
ok ? ok : obj.fn(a || 0.5)
ok ? ok : obj.fn(add.head(true && f, arr.head(f)))
ok ? ok : obj.fn(arr.a, obj.head(a), any(f, obj), 0.5 - obj)
ok ? ok : obj.fn(div, hasSuffix(f, 1)[ok], get(0 ? add : div, one(arr, s)))
ok ? ok : obj.head(a)
ok ? ok : obj.obj?.b
ok ? ok : obj?.a
ok ? ok : obj?.b
ok ? ok : obj?.obj
ok ? ok : obj?.obj.fn(arr)
ok ? ok : s >= obj?.fn(false, "b")
ok ? s : 0 - -0
ok ? s : 0 - f
ok ? s : 2 in arr ? a : a
ok ? s : a % b
ok ? s : add
ok ? s : add in map(arr, add)
ok ? s : add(b, a)
ok ? s : arr
ok ? s : arr == arr
ok ? s : div
ok ? s : f
ok ? s : f + 2
ok ? s : map(arr, #)
ok ? s : nil == div
ok ? s : obj
ok ? s : obj.a
ok ? s : obj.a.fn(add(s?.fn(a)).obj, get(arr.head("c"), 0 <= 0.5) > count(obj.a, s startsWith obj))
ok ? s : obj.b
ok ? s : obj.fn(a)
ok ? s : obj.fn(div, a, false)
ok ? s : obj.fn(filter(nil, arr) ^ div(ok, nil, f, s), arr?.head(not 0.5), div?.a)
ok ? s : obj.fn(join(1))
ok ? s : obj.fn(one(add, 1), div?.b)
ok ? s : obj.head(div % f?.b)
ok ? s : obj.obj
ok ? s : obj?.a
ok ? s : obj?.b
ok ? s : obj?.obj
ok ? s : obj?.obj.a
ok ? s : s endsWith s
ok ? trimSuffix("b") : obj
ok ? true : false and 0 < a
ok ? true : obj.a
ok ? true : obj.fn((a startsWith add) - ok ? false : obj)
ok ? true : obj.head(s <= div)
ok ? true : obj?.a
ok ? true : obj?.b
ok ? true : obj?.obj
ok ? true || obj?.a : obj
ok and !ok
ok and "a" == obj.a
ok and "a" > "a"
ok and 0 >= 0
ok and 0.5 != b
ok and 0.5 < f
ok and 0.5 <= f
ok and 0.5 > f
ok and 1 >= 0
ok and 2 >= 1
ok and a < b
ok and a == 0
ok and a > b
ok and b != 2
ok and div != div
ok and div == add
ok and f <= a
ok and f <= f
ok and f == nil
ok and f >= 0.5
ok and f >= f
ok and false && nil != obj
ok and false && ok
ok and false and ok
ok and nil == "b"
ok and nil == div
ok and nil == obj
ok and not ok
ok and obj.a
ok and obj.b
ok and obj.fn(b)
ok and obj.head(1, 0.5)
ok and obj.head(f, "a", s)
ok and obj.head(s)
ok and obj.obj
ok and obj.obj.b
ok and obj.obj.obj
ok and obj?.a
ok and obj?.b
ok and obj?.fn(not false ? 1 : arr)
ok and obj?.head(add)
ok and obj?.head(div)
ok and obj?.head(obj?.head(arr))
ok and obj?.head(one("c", ok))
ok and obj?.obj
ok and obj?.obj.obj
ok and obj?.obj?.a
ok and obj?.obj?.obj
ok and obj[s]
ok and ok
ok and ok && ok
ok and ok ? 1 > b : a ** 1
ok and ok ? add : !ok
ok and ok ? arr : "c"
ok and ok ? div : s
ok and ok ? nil : arr
ok and ok ? s : f
ok and ok and true == false
ok and s contains s
ok and true or arr == arr
ok in obj.head(nil, div, s)
ok in obj?.head(arr, ok, add)
ok in values(obj)
ok or !obj?.obj
ok or !ok
ok or "b" <= s
ok or "b" == nil
ok or "b" > s
ok or 0 < f
ok or 0 <= b
ok or 0 == f
ok or 0 >= b
ok or 0.5 != 0
ok or 0.5 >= 0
ok or 2 <= 0
ok or a < 0
ok or a <= b
ok or a == nil
ok or add != nil
ok or add == div
ok or b > f
ok or b in arr
ok or div != div
ok or div != nil
ok or div == div
ok or f != 0.5
ok or f != b
ok or f < 0
ok or f == f
ok or f > 0
ok or f >= b
ok or false && ok
ok or false ? s : nil
ok or false or 2 < a
ok or fromJSON(nil)
ok or nil != add
ok or nil != arr
ok or nil == ok
ok or nil in obj?.fn(obj != splitN("c", true, "b"), count(nil * f, div), add(0.5)?.b)
ok or not false
ok or not ok
ok or not true
ok or obj.a
ok or obj.a.b
ok or obj.a.head(all(0 && nil, add(obj, false, "b")))
ok or obj.a.obj
ok or obj.a?.b
ok or obj.a?.obj
ok or obj.b
ok or obj.b?.head(f)
ok or obj.fn(-nil endsWith (nil || nil))
ok or obj.fn(a, div)
ok or obj.fn(a, s[div:arr]?.a)
ok or obj.fn(add(arr)[arr:f], none(none(f, b), 0 .. 0))
ok or obj.fn(arr .. a)?.b?.b
ok or obj.fn(arr.b <= ok, b in add?.fn(obj))?.fn(add(arr, nil)?.head(b?.fn(nil, "b", false) .. none(add, b), filter(a.obj, div >= a), 0.5 ? div : arr matches date(nil), 0 ** nil * obj.head(ok), count(add(div), map(0, a))).a)
ok or obj.fn(arr.fn(ok.head(0, add, a, a)))
ok or obj.fn(b?.head(1, nil, 1, a, nil) matches add(s, a))
ok or obj.fn(div(div .. 0, add(div)), indexOf(nil endsWith add))
ok or obj.fn(div).head(filter(count(s, 0.5), add(obj)), arr startsWith obj || obj != div)
ok or obj.fn(f, nil, arr)?.head(true contains b, ok.head(ok, arr)).b
ok or obj.fn(fromBase64(any(b, true), s, add(div)), s)?.obj
ok or obj.fn(map(2, b)?.obj, arr * 0.5 > filter(a, a))
ok or obj.fn(obj ? div : div - add(add), b, none(div, a).obj)
ok or obj.fn(ok, 0)
ok or obj.head(0.5)
ok or obj.head(0.5, obj)
ok or obj.head(1, b, add, obj).b
ok or obj.head(2 matches b, float(obj), none(b, div), add[add:1], 0.5 && s)
ok or obj.head(a)
ok or obj.head(add(div(0.5)), f)
ok or obj.head(add.fn(2) matches obj?.head(nil, "c"))
ok or obj.head(arr)
ok or obj.head(arr?.obj, count(s, 0))
ok or obj.head(b - nil)
ok or obj.head(b ? s : "b" < div(arr), f.obj.fn(map(s, b)))
ok or obj.head(b, b[nil] startsWith filter(false, b), s, div?.fn("a", obj, f) ? obj ** false : ok)
ok or obj.head(div(count(2, obj), false || obj), filter(ok.fn(add), add?.head(ok)))
ok or obj.head(div(count(nil, b), add("c")))
ok or obj.head(div, a)
ok or obj.head(div, ok)
ok or obj.head(f)
ok or obj.head(filter(add.head(s), one(a, 0.5)), add)
ok or obj.head(obj)
ok or obj.head(obj?.head(f))
ok or obj.head(split(b))
ok or obj.head(splitAfterN(a?.a) != (f && div(nil, 0)) != -min(div, 1), b)
ok or obj.head(true)
ok or obj.head(true, add)
ok or obj.obj
ok or obj.obj.a
ok or obj.obj.obj
ok or obj?.a
ok or obj?.a.a
ok or obj?.a.obj
ok or obj?.a?.b
ok or obj?.b
ok or obj?.b.obj
ok or obj?.fn("c" + 0)
ok or obj?.fn("c", ok)
ok or obj?.fn(a)
ok or obj?.fn(a, div(filter(2, f)), add(first(a, true, s, "c")))
ok or obj?.fn(add(a), b != b.b)
ok or obj?.fn(add(s))
ok or obj?.fn(add.b, ok endsWith arr)
ok or obj?.fn(add?.b > s)
ok or obj?.fn(arr, 1 ** nil)
ok or obj?.fn(b)
ok or obj?.fn(b?.head(s), arr)
ok or obj?.fn(count(s?.head(0.5), add in f), join(add.a))
ok or obj?.fn(div(s, obj, add))?.a.b
ok or obj?.fn(f?.a)
ok or obj?.fn(float(div))
ok or obj?.fn(min(arr)[b:get(0.5, nil)])
ok or obj?.fn(ok?.head(add(ok)), add(add?.obj))
ok or obj?.fn(one(add(f, obj), a.fn(a)))
ok or obj?.fn(one(arr, false) <= ok?.a)
ok or obj?.fn(s)
ok or obj?.fn(s?.b)
ok or obj?.head(0)
ok or obj?.head(2, a)
ok or obj?.head(a in false matches add(nil), last(add(0), a.a), arr ^ obj == keys(nil, add), ok.obj)
ok or obj?.head(add <= obj, "b" || a, a, get(a, div))
ok or obj?.head(add == f, filter("a", ok))
ok or obj?.head(add.obj, s)
ok or obj?.head(all(div, add), max(s, ok))
ok or obj?.head(arr).b
ok or obj?.head(b)
ok or obj?.head(f, a)
ok or obj?.head(f, div)
ok or obj?.head(fromJSON(b) endsWith b.a, none(map(b, b), s?.fn(arr, b)))
ok or obj?.head(nil ? ok : f.a)
ok or obj?.head(nil)
ok or obj?.head(nil, ok, ok, a)
ok or obj?.head(none(f.head(ok), f))
ok or obj?.head(obj >= "c")
ok or obj?.head(obj, f)
ok or obj?.head(s)
ok or obj?.head(s?.a)
ok or obj?.obj
ok or obj?.obj.b
ok or obj?.obj?.b
ok or obj[toJSON("b")]
ok or ok
ok or ok != false
ok or ok == ok
ok or ok ? 0 : a
ok or ok ? false : a
ok or ok ? obj : "b"
ok or ok || !obj?.a
ok or ok || nil != s
ok or s != nil
ok or s <= "b"
ok or s == nil
ok or s endsWith s
ok or true ? 0 : true
ok or true || ok
ok || !ok
ok || !true
ok || "b" in obj
ok || "c" != s
ok || "c" > obj.obj
ok || 0 in arr
ok || 0.5 != 2
ok || 0.5 <= f
ok || 0.5 >= 0.5
ok || 2 < f
ok || 2 > f
ok || a < f
ok || a == 1
ok || arr != arr
ok || b != 2
ok || b == a
ok || b == f
ok || b > 0
ok || b > f
ok || div == div
ok || f == obj?.b
ok || f > 0
ok || f > b
ok || f >= 0.5
ok || f in obj.head(obj)
ok || false ? obj : 0
ok || false or obj.fn(div)
ok || get(false ? b : 0.5, add.head(0.5, div))?.a
ok || nil != b
ok || nil == "b"
ok || nil == f
ok || nil == nil
ok || nil == s
ok || not obj?.head(b.head(div(ok)).a)
ok || obj != obj
ok || obj.a
ok || obj.a startsWith toJSON(nil)
ok || obj.a.b
ok || obj.a?.a
ok || obj.b
ok || obj.b.b
ok || obj.b.obj
ok || obj.b?.b
ok || obj.b?.obj
ok || obj.fn(a.head(arr))
ok || obj.fn(add(add.b, div?.a), s?.head(add.fn("b", b)), count(div, obj) % int(a, b, "c", false), obj)
ok || obj.fn(add(f))
ok || obj.fn(add, nil)?.head(arr contains a)
ok || obj.fn(b)
ok || obj.fn(div(obj), obj / obj, div(a, nil))
ok || obj.fn(div).a
ok || obj.fn(int(ok, nil, s, obj)[ok.a])
ok || obj.fn(map("c", add), div(ok))
ok || obj.fn(map(arr, div(f)))
ok || obj.fn(nil, div)?.a
ok || obj.fn(not 0 || nil - nil)
ok || obj.fn(ok, obj)
ok || obj.fn(ok.fn(nil))
ok || obj.fn(s)
ok || obj.fn(s[1], f < add)
ok || obj.fn(true < arr matches div?.fn(a, s), div(add startsWith obj))
ok || obj.fn(true <= a || f)
ok || obj.head(0.5)
ok || obj.head(2)
ok || obj.head(a)
ok || obj.head(add)
ok || obj.head(arr)
ok || obj.head(arr, filter(div(obj), -arr), fromBase64(1)?.obj, filter(f, 1) && b?.head(s, b))
ok || obj.head(arr?.a?.obj)
ok || obj.head(div.a)
ok || obj.head(f, b)
ok || obj.head(f, nil)?.obj.obj
ok || obj.head(f.head(0 in arr, arr.head(s, s), div && a), s).b
ok || obj.head(get(arr, false) && a ^ s)
ok || obj.head(get(s?.b, f.a), s?.a ** ok)
ok || obj.head(obj ? s : f, b * nil, one(false, nil))
ok || obj.head(obj[add(b)], ok[add] in arr, arr)
ok || obj.head(trim(false) matches filter(f, ok))
ok || obj.obj
ok || obj.obj.a
ok || obj.obj?.a
ok || obj.obj?.b
ok || obj.obj?.fn(count(div(add || true, f, a?.fn(f, a, ok, nil)), add(a.b, add(nil))))
ok || obj?.a
ok || obj?.a?.b
ok || obj?.a?.obj
ok || obj?.b
ok || obj?.b.b
ok || obj?.b?.a
ok || obj?.b?.head(f?.b ** arr.a)
ok || obj?.b?.obj
ok || obj?.fn("a", s)?.a
ok || obj?.fn(-map(f, a), arr.fn(obj) == 0 .. arr)
ok || obj?.fn(0, a)?.a
ok || obj?.fn(0, nil, false)
ok || obj?.fn(2, s)
ok || obj?.fn(a)
ok || obj?.fn(a.a)
ok || obj?.fn(a.b, string(arr), ok).a
ok || obj?.fn(a?.b >= hasSuffix(add))
ok || obj?.fn(add("a"), arr matches nil, a?.obj)
ok || obj?.fn(add(obj))
ok || obj?.fn(add?.a)
ok || obj?.fn(add[arr] in obj)
ok || obj?.fn(any(a, arr), add(add, arr, f, 0.5, obj))
ok || obj?.fn(arr)
ok || obj?.fn(div >= true, a - arr, obj <= nil)
ok || obj?.fn(div(0, arr, 0.5, b, div), ok ^ a)
ok || obj?.fn(div, trimPrefix(add, arr, s, div))
ok || obj?.fn(f?.a, b[0:false])
ok || obj?.fn(f?.head(ok, div, add) < (arr or ok), div(0.5, s).b)
ok || obj?.fn(get(f, ok) ^ div(2))
ok || obj?.fn(get(get(ok, obj), div(b, 0.5, div)))
ok || obj?.fn(hasPrefix(2), div.head(1))
ok || obj?.fn(hasPrefix(b))
ok || obj?.fn(map(none(add, 0), div))
ok || obj?.fn(obj ** a, arr.fn("a", add, s)).head(ok)
ok || obj?.fn(ok.fn(f, ok), get(nil, f))
ok || obj?.fn(ok.head(arr), s)
ok || obj?.fn(s[ok .. s])
ok || obj?.head(-ok[ok], add(s < div))
ok || obj?.head(0)?.a
ok || obj?.head(0, "a", f, 0)
ok || obj?.head(0.5, nil)
ok || obj?.head(a in 2)
ok || obj?.head(a)
ok || obj?.head(add(b, add), div && nil)
ok || obj?.head(add)
ok || obj?.head(any(arr, true))
ok || obj?.head(arr)
ok || obj?.head(b)
ok || obj?.head(b, ok, 2)
ok || obj?.head(div || s)
ok || obj?.head(div, div).a
ok || obj?.head(f)
ok || obj?.head(fromBase64(add(div)), b.b.obj)
ok || obj?.head(ok && f)
ok || obj?.head(ok)
ok || obj?.head(ok, "c", 0, nil, s)
ok || obj?.head(one(add, ok))
ok || obj?.head(s)
ok || obj?.head(s, f)
ok || obj?.head(s.a)
ok || obj?.head(true)
ok || obj?.obj
ok || obj?.obj.a
ok || obj?.obj.b
ok || obj?.obj.obj?.obj
ok || obj?.obj?.b
ok || obj[obj.b]
ok || obj[s]?.b
ok || ok
ok || ok && true
ok || ok == nil
ok || ok ? false : arr
ok || ok ? obj : s
ok || ok or obj?.obj
ok || s <= s
ok || s >= s
ok || s endsWith "b"
ok || true ? f : ok
ok || true or 1 != f
ok || true or s matches s
ok || true || obj?.c
one(0 .. 2, ok)
one(0 .. b, ok)
one(2 .. 0, f > 0)
one([add, false], ok)
one(arr, !false)
one(arr, !ok)
one(arr, "b" contains "b")
one(arr, "b" endsWith s)
one(arr, "b" startsWith "c")
one(arr, "c" contains "c")
one(arr, # <= #)
one(arr, 0 != 0.5)
one(arr, 0 != nil)
one(arr, 0 != obj?.obj)
one(arr, 0 == 1)
one(arr, 0 == nil)
one(arr, 0 > b)
one(arr, 0.5 <= b)
one(arr, 0.5 == obj.obj)
one(arr, 0.5 >= b)
one(arr, 1 == 0)
one(arr, a != 0.5)
one(arr, a != a)
one(arr, a < 0)
one(arr, a <= b)
one(arr, a == 0.5)
one(arr, a == a)
one(arr, a >= 0)
one(arr, a >= a)
one(arr, a >= b)
one(arr, any(arr, ok))
one(arr, arr != arr)
one(arr, arr != nil)
one(arr, arr == nil)
one(arr, b != b)
one(arr, b < #)
one(arr, b < f)
one(arr, b == f)
one(arr, div != div)
one(arr, div != nil)
one(arr, div == div)
one(arr, f != a)
one(arr, f <= 0)
one(arr, f <= a)
one(arr, f == nil)
one(arr, f >= 0)
one(arr, false != obj.b)
one(arr, false == obj.obj)
one(arr, false) ? (true ? s : b) : 0 < 0
one(arr, false) and ok
one(arr, hasSuffix(s, "b"))
one(arr, nil != 0)
one(arr, nil != arr)
one(arr, nil != f)
one(arr, nil == add)
one(arr, not ok)
one(arr, obj.head(true, a))
one(arr, ok != nil)
one(arr, ok == ok)
one(arr, ok)
one(arr, ok) != obj.obj
one(arr, ok) != ok
one(arr, ok) && obj.obj
one(arr, ok) && ok
one(arr, ok) && ok ? a : div
one(arr, ok) == obj.fn(0)
one(arr, ok) and obj?.b
one(arr, one(arr, ok))
one(arr, s != "b")
one(arr, s > s)
one(arr, s endsWith s)
one(arr, true && true)
one(arr, true ? false : add)
one(arr, true and true)
one(arr, true) or obj?.head(0.5)
one(b .. 0, obj.b)
one(b .. 1, ok)
one(b .. 2, any(arr, true))
one(b .. a, ok)
one(b .. b, "a" == nil)
one(b .. b, f != nil)
one(false ? 0 : arr, "a" < s)
one(filter(arr, false), obj?.a)
one(filter(arr, ok), nil == div)
one(map(arr, "b"), div != add)
one(map(arr, 0), f != f)
one(map(arr, 0), ok == false)
one(map(arr, 0), ok)
one(map(arr, 0.5), ok)
one(map(arr, 2), b <= 0.5)
one(map(arr, a), ok)
one(map(arr, add), ok)
one(map(arr, arr), ok)
one(map(arr, b), ok)
one(map(arr, div), div != add)
one(map(arr, div), ok)
one(map(arr, f), s contains "b")
one(map(arr, false), #)
one(map(arr, ok), #)
one(map(arr, ok), 0.5 < 0.5)
one(map(arr, ok), ok)
one(map(arr, true), #)
one(obj.head("c"), obj == obj)
one(obj.head("c", add), b == f)
one(obj.head(arr), ok)
one(obj.head(obj), ok)
one(obj.head(s, obj), ok)
one(obj.obj, b <= a)
one(obj.obj, b > 1)
one(obj.obj, f < 0.5)
one(obj.obj, ok)
one(obj?.head("c"), ok)
one(obj?.head(arr), "a" matches "b")
one(obj?.head(arr), "c" < s)
one(obj?.head(s), b == nil)
one(obj?.head(s), ok)
one(obj?.head(s), s > s)
one(obj?.obj, "b" != nil)
one(obj?.obj, a == b)
one(obj?.obj, b != 0)
one(obj?.obj, false == true)
one(obj?.obj, nil in obj)
one(obj?.obj, obj.head(ok, 0, "b", 1, div))
one(obj?.obj, ok)
one(ok ? arr : f, ok)
one(ok ? s : ok, ok)
one(values(obj), nil == ok)
repeat(s, a)
repeat(s, b)
repeat(toJSON(arr), obj?.a)
s
s != "b" ? add : add
s != "b" ? obj : f
s != "c" && nil != b
s != nil != obj.a
s != nil == ok
s != nil ? arr : ok
s != nil ? b : false
s != nil and "b" < "c"
s != nil || obj.b
s != obj.a
s != obj.b
s != obj.head(0)
s != obj.head(a)
s != obj.head(arr)
s != obj.head(div, arr)
s != obj.head(f)
s != obj.head(nil, add, f, s)
s != obj.head(ok, "b", add)
s != obj.head(s)
s != obj.obj
s != obj.obj.obj
s != obj.obj?.a
s != obj.obj?.b
s != obj.obj?.obj
s != obj?.a
s != obj?.b
s != obj?.b or add != obj.a
s != obj?.fn(1)
s != obj?.fn(int(b))
s != obj?.head(add)
s != obj?.head(add, 0.5, arr, add)
s != obj?.obj
s != obj?.obj.a
s != obj?.obj?.obj
s != s
s != s != obj.head(obj)
s != s != true
s != s == ok
s != s ? 1 : ok
s != s ? b : s
s != s || ok
s != string(0.5)
s != string(b)
s != toJSON(1)
s != toJSON(b)
s != toJSON(true)
s != trim("c")
s + lower("a")
s + repeat(s, 0)
s + s
s + s != s
s + s + trimPrefix("a")
s + s == obj?.obj
s + s >= s
s + s matches lower(s)
s + string("c")
s + string(f)
s + toJSON("b")
s + toJSON(ok)
s + trim(s)
s < "a" + s
s < "a" ? 2 : ok
s < "a" and obj?.obj
s < "c" && s <= "b"
s < "c" ? b : arr
s < "c" and a > f
s < "c" or obj.a
s < "c" or obj?.head(s, obj)
s < lower(s)
s < obj.head(s)
s < obj?.head("b", 0.5)
s < s
s < s != nil
s < s || a == 1
s < s || ok
s < s[a:0]
s < string(s)
s < toJSON(0)
s < trimPrefix("b")
s <= "a" != nil
s <= "a" ? nil : f
s <= "b" ? "c" : nil
s <= "c" ? "b" : a
s <= "c" ? 1 : 2
s <= "c" ? obj : add
s <= "c" || obj.fn(b, b)
s <= obj.head(s, b, "a", add)
s <= s
s <= s != ok
s <= s == obj.b
s <= s == ok
s <= s ? 2 : 0.5
s <= s ? b : ok
s <= s || !ok
s <= string(obj)
s == "a" + "b"
s == "b" ? obj : s
s == -obj?.b
s == f + obj.b
s == get(obj, s)
s == nil != nil
s == nil != obj?.a
s == nil == obj.obj
s == nil ? obj : f
s == nil ? obj : s
s == nil or ok
s == nil || obj?.b
s == nil || true ? 2 : s
s == obj.a
s == obj.b
s == obj.head(0.5)
s == obj.head(0.5, b, true)
s == obj.head(arr)
s == obj.head(b)
s == obj.head(nil, arr)?.fn(arr)?.obj
s == obj.head(true or f)
s == obj.obj
s == obj.obj.b
s == obj.obj?.b
s == obj.obj?.obj?.b
s == obj?.a
s == obj?.b
s == obj?.fn(a)
s == obj?.head(arr)
s == obj?.head(f, div)
s == obj?.head(obj)
s == obj?.head(obj).b
s == obj?.head(obj, ok)
s == obj?.head(ok)
s == obj?.obj
s == obj?.obj.obj
s == obj?.obj?.a
s == s
s == s != ok
s == s ? arr : "c"
s == s || obj.b
s == s[1:a]
s == string("c")
s == string(0)
s == string(1)
s == string(arr)
s == string(div)
s == toJSON(a)
s == trimPrefix("b")
s > "b" ? "c" : obj
s > "b" ? b : 0.5
s > "b" ? div : "b"
s > "c" && obj.head(s, obj)
s > obj.head(s)
s > obj?.head(s)
s > s
s > s != true
s > s && ok
s > s + "c"
s > s == obj?.a
s > s ? add : ok
s > s ? div : obj?.fn(2)
s > s ? div : true
s > s ? ok : obj.a
s > s ? s : add
s > s and b == 0
s > s || obj.a
s > string(2)
s > string(arr)
s > string(s)
s > toBase64("c")
s > toJSON(false)
s > trimPrefix(s)
s >= "a" + s
s >= "a" == obj.a
s >= "a" ? arr : b
s >= "c" ? b : ok
s >= "c" ? f : obj
s >= "c" and obj.obj
s >= "c" or obj?.head(add, 0, 2, add)
s >= obj.head("c", s)
s >= s
s >= s != obj?.fn(b)
s >= s && obj.b
s >= s && obj?.a
s >= s and obj?.a
s >= s or obj.head(a)
s >= string(0)
s >= string(a)
s >= string(nil)
s >= string(s)
s >= toJSON(arr)
s >= toJSON(b)
s >= trim(s)
s contains "a" && a < f
s contains "a" ? arr : true
s contains "b" == ok
s contains "b" ? a : f
s contains "b" ? s : a
s contains "c" ? "c" : b
s contains "c" ? a : obj?.a
s contains "c" ? b : obj.fn(obj)
s contains "c" || obj?.obj
s contains obj.head(s)
s contains obj.head(s, div, add)
s contains obj?.head("c")
s contains obj?.head(s)
s contains s
s contains s == ok
s contains s ? f : obj
s contains s and !ok
s contains s or obj?.head(b, b, obj)?.a in obj
s contains s or ok
s contains string(ok)
s contains toBase64(s)
s contains toJSON(nil)
s contains toJSON(ok)
s contains toJSON(s)
s endsWith "a" && obj.head(0)
s endsWith "a" == nil
s endsWith "a" ? obj : 0
s endsWith "b" and (ok || true)
s endsWith "c" != ok ? arr : obj
s endsWith "c" == ok
s endsWith "c" ? b : arr
s endsWith lower("c")
s endsWith lower(s)
s endsWith s
s endsWith s != nil
s endsWith s && ok
s endsWith s + s
s endsWith s == nil
s endsWith s ? 0 : 0
s endsWith s ? div : f
s endsWith s ? div : obj?.b
s endsWith s ? obj : arr
s endsWith s ? ok : add
s endsWith s and obj.head(arr, s)
s endsWith s and ok
s endsWith s or a < b
s endsWith s || obj.fn(nil)
s endsWith s || ok
s endsWith string(add)
s endsWith string(arr)
s endsWith string(s)
s endsWith toJSON(2)
s in [0.5]
s in map(arr, s)
s in obj
s in obj && s matches s
s in obj == ok
s in obj ? div : arr
s in obj ? div : div
s in obj or obj?.a
s in obj.head(arr, div)
s in obj.head(nil)
s in obj.obj
s in obj.obj.obj
s in obj?.head(last(b))
s in obj?.obj
s in obj?.obj?.obj
s matches "a" ? false : true
s matches "b" != obj.b
s matches "b" == ok
s matches "b" ? arr : ok
s matches "b" ? b : b < b
s matches "b" ? nil : obj
s matches "b" or "c" contains "b"
s matches "b" or obj.head(add)?.obj
s matches "c" && obj?.obj
s matches "c" ? add : 1
s matches "c" ? ok : nil
s matches "c" ? s : add
s matches obj?.head("a")
s matches obj?.head(lower(s, s))
s matches s
s matches s == obj.b
s matches s == obj?.head(a)
s matches s == ok
s matches s ? a : 2
s matches s ? add : a
s matches s ? nil : a >= a
s matches s ? obj : arr
s matches s and ok
s matches toJSON(f)
s matches toJSON(s)
s matches trimSuffix(s, s)
s startsWith "a" ? s : false
s startsWith "c" || obj.b
s startsWith s
s startsWith s == false
s startsWith s ? "a" : b
s startsWith s ? arr : f
s startsWith s ? obj : arr
s startsWith s ? s : "a"
s startsWith s || add == add
s startsWith s || ok
s startsWith string(arr)
s startsWith toJSON(arr)
s startsWith trimSuffix("b")
s[0 + 2:min(0)]
s[2:b] >= s
s[a:a]
s[a:a] == obj?.head(ok)
s[a:b]
s[a:obj?.a]
s[add(a, a):obj.b]
s[b:a]
split(s, s)
splitAfter(s, s)
splitAfter(s[b:b], s)
string(!false)
string(!ok)
string(!true)
string("a" < s)
string("a" == nil)
string("a" == s)
string("a" >= s)
string("b" + "a")
string("b" + s)
string("b" <= "c")
string("b" contains "c")
string("b" matches "a")
string("b" matches s)
string("b") matches s
string("c" != "b")
string("c" != nil)
string("c" <= "c")
string("c" == "a")
string("c" matches s)
string("c") != string(s)
string("c") <= string(s)
string("c") in obj
string(-(f >= 0 ? f : add))
string(-0)
string(-0.5)
string(-2)
string(-a)
string(-b)
string(-f)
string(-obj.obj?.b)
string(-obj?.b)
string(0 != 0)
string(0 != 1)
string(0 != a)
string(0 != nil)
string(0 % 1)
string(0 % 2)
string(0 % a)
string(0 % b)
string(0 * 0)
string(0 * a)
string(0 * f)
string(0 ** 1)
string(0 ** 2)
string(0 ** a)
string(0 ** f)
string(0 + 0)
string(0 + 2)
string(0 + b)
string(0 - 1)
string(0 - 2)
string(0 - a)
string(0 - b)
string(0 / 2)
string(0 / f)
string(0 < a)
string(0 < f)
string(0 < obj.b)
string(0 <= 0)
string(0 <= 0.5)
string(0 <= a)
string(0 <= b)
string(0 <= f)
string(0 == a)
string(0 == b)
string(0 == f)
string(0 > 2)
string(0 > b)
string(0 >= b)
string(0 ^ 0)
string(0 ^ 2)
string(0) < s
string(0) > s
string(0) startsWith string(a)
string(0.5 != a)
string(0.5 != b)
string(0.5 ** 1)
string(0.5 ** b)
string(0.5 ** f)
string(0.5 + 1)
string(0.5 + a)
string(0.5 - b)
string(0.5 / 0.5)
string(0.5 / a)
string(0.5 / f)
string(0.5 < 2)
string(0.5 < arr[-1])
string(0.5 < b)
string(0.5 < f)
string(0.5 == 0)
string(0.5 == b)
string(0.5 == f)
string(0.5 == nil)
string(0.5 > a)
string(0.5 > b)
string(0.5 > f)
string(0.5 ^ 0)
string(0.5 ^ 0.5)
string(1 != nil)
string(1 % a)
string(1 ** a)
string(1 + b)
string(1 + f)
string(1 - 0)
string(1 .. a)
string(1 / 0.5)
string(1 < 0)
string(1 < b)
string(1 <= 0)
string(1 <= f)
string(1 == 2)
string(1 == b)
string(1 == nil)
string(1 > 1)
string(1 > f)
string(1 ^ 0)
string(1 ^ f)
string(1) != s
string(1) == obj.b
string(2 != 0)
string(2 != nil)
string(2 != obj.b)
string(2 * f)
string(2 + 0)
string(2 + a)
string(2 - a)
string(2 .. a)
string(2 / 0.5)
string(2 < 0)
string(2 <= 0)
string(2 <= a)
string(2 == f)
string(2 > b)
string(2 >= 0)
string(2 >= a)
string(2 ^ 0)
string(2 in arr)
string([arr])
string([div, a])
string(a != 0.5)
string(a != a)
string(a != b)
string(a % b)
string(a * 0.5)
string(a * 2)
string(a * b)
string(a ** f)
string(a + a)
string(a + f)
string(a - 0)
string(a - a)
string(a - f)
string(a .. a)
string(a .. b)
string(a / 0)
string(a / f)
string(a < 0)
string(a < a)
string(a < f)
string(a <= 0.5)
string(a <= a)
string(a <= f)
string(a == b)
string(a == nil)
string(a > b)
string(a > f)
string(a >= 0)
string(a >= 1)
string(a >= a)
string(a in arr)
string(a)
string(a) == s
string(a) > lower("c")
string(a) endsWith s
string(a) in obj
string(a)[b:b]
string(abs(0.5))
string(abs(a))
string(add != add)
string(add != div)
string(add == nil)
string(add(0, 1))
string(add(0, b))
string(add(1, 2))
string(add(2, a))
string(add(b, 0))
string(add(b, 1))
string(add(b, a))
string(add(b, b))
string(add)
string(add) + s
string(add) < s
string(add) <= s
string(add) > s
string(add) >= s
string(add) startsWith "b" ? div : f
string(any(arr, true))
string(arr != nil)
string(arr == obj.obj)
string(arr)
string(arr) <= s
string(arr) == lower(s)
string(arr) contains s
string(arr) in obj
string(arr) matches s == nil
string(arr) matches trim("b", s)
string(arr) startsWith lower(s)
string(arr[0])
string(arr[1])
string(arr[2:0])
string(arr[a])
string(arr[b:a])
string(b != 0)
string(b != a)
string(b != b)
string(b != f)
string(b % 1)
string(b % b)
string(b * 0)
string(b ** 0.5)
string(b ** 1)
string(b ** 2)
string(b ** a)
string(b ** b)
string(b + 1)
string(b + 2)
string(b + b)
string(b - a)
string(b - f)
string(b .. 0)
string(b .. b)
string(b / 0.5)
string(b / 1)
string(b / a)
string(b < 0)
string(b < 1)
string(b < a)
string(b < b)
string(b < f == nil)
string(b <= a)
string(b <= b)
string(b <= f)
string(b == 0)
string(b == 0.5)
string(b == 1)
string(b == a)
string(b == f)
string(b == nil)
string(b > 0.5)
string(b > 1)
string(b > b)
string(b ^ 0.5)
string(b ^ 2)
string(b ^ b)
string(b ^ f)
string(b)
string(b) < s
string(b) <= s
string(b) >= s
string(b) matches s
string(count(arr, false))
string(count(arr, ok))
string(div != nil)
string(div == div)
string(div == nil)
string(div(0, 2))
string(div(0, a))
string(div(0, b))
string(div(2, a))
string(div(a, 1))
string(div(a, a))
string(div(a, b))
string(div(b, 1))
string(div(b, 2))
string(div(b, a))
string(div(b, b))
string(div)
string(div) != string(b)
string(div) >= s
string(div) endsWith s
string(div)[a:count(arr, true)]
string(f != 0.5)
string(f != f)
string(f != nil)
string(f * 0)
string(f * a)
string(f * f)
string(f ** b)
string(f ** f)
string(f + b)
string(f - 2)
string(f - a)
string(f - b)
string(f / 0)
string(f / 0.5)
string(f / a)
string(f / f)
string(f / obj.a)
string(f < 0.5)
string(f < a)
string(f < b)
string(f < f)
string(f <= a)
string(f <= b)
string(f <= f)
string(f == 0)
string(f == 0.5)
string(f == b)
string(f == nil)
string(f > a)
string(f > b)
string(f > f)
string(f >= 0)
string(f >= 1)
string(f ^ a)
string(f ^ b)
string(f ^ f)
string(f)
string(f) + s
string(f) < s
string(f) > s
string(f) >= s
string(f) endsWith s
string(false != nil)
string(false != ok)
string(false && ok)
string(false && true)
string(false == nil)
string(false ? arr : f)
string(false ? div : div)
string(false ? f : a)
string(false || true)
string(filter(arr, ok))
string(float(0))
string(float(0.5))
string(float(a))
string(float(b))
string(float(f))
string(get(arr, a))
string(get(obj, s))
string(int(0))
string(int(b))
string(int(f))
string(keys(obj))
string(last(arr))
string(len("b"))
string(len(obj))
string(len(s))
string(lower("c"))
string(map(arr, 0.5))
string(map(arr, a))
string(map(arr, add))
string(map(arr, arr))
string(map(arr, b))
string(map(arr, div))
string(map(arr, obj))
string(map(arr, ok))
string(max(0))
string(max(0.5))
string(max(f))
string(min(2))
string(min(f))
string(nil != "b")
string(nil != "c")
string(nil != 2)
string(nil != a)
string(nil != add)
string(nil != b)
string(nil != f)
string(nil != obj)
string(nil != ok)
string(nil != s)
string(nil == 2)
string(nil == add)
string(nil == b)
string(nil == div)
string(nil == false)
string(nil == obj)
string(nil == ok)
string(nil == s)
string(nil in arr)
string(nil in obj)
string(nil) != toJSON(true)
string(nil) + s
string(nil) == obj.a
string(nil) in obj
string(nil) matches s
string(none(arr, false))
string(none(arr, ok))
string(none(arr, true))
string(not false)
string(not ok)
string(not true)
string(obj == obj)
string(obj)
string(obj) < s
string(obj) <= s
string(obj) contains s
string(obj.a)
string(obj.b)
string(obj.fn(1))
string(obj.fn(2))
string(obj.fn(a))
string(obj.fn(b))
string(obj.head("a"))
string(obj.head("c", b, "b", 2))
string(obj.head(2))
string(obj.head(a))
string(obj.head(a, 0, arr, obj, b))
string(obj.head(a, div))
string(obj.head(add))
string(obj.head(add, b, arr))
string(obj.head(arr))
string(obj.head(arr, f, obj))
string(obj.head(arr, obj))
string(obj.head(b))
string(obj.head(b, a, s))
string(obj.head(div))
string(obj.head(f, "b", a, 0))
string(obj.head(f, arr, "b", 2))
string(obj.head(f, nil, a, f))
string(obj.head(nil, 1))
string(obj.head(obj, f))
string(obj.head(ok))
string(obj.head(ok, div, add))
string(obj.head(s))
string(obj.head(s, b, b, arr))
string(obj.head(s, true))
string(obj.obj == s)
string(obj.obj)
string(obj.obj.b)
string(obj.obj.obj)
string(obj.obj?.b)
string(obj?.a)
string(obj?.b <= f)
string(obj?.b)
string(obj?.b) contains s
string(obj?.fn(0))
string(obj?.fn(a))
string(obj?.fn(b))
string(obj?.head("c", 0.5, f))
string(obj?.head(0, "a"))
string(obj?.head(0.5))
string(obj?.head(0.5, s))
string(obj?.head(a))
string(obj?.head(a, add))
string(obj?.head(add))
string(obj?.head(add, f, "a"))
string(obj?.head(arr))
string(obj?.head(arr, true))
string(obj?.head(b, obj, arr))
string(obj?.head(div))
string(obj?.head(div, s, arr))
string(obj?.head(f))
string(obj?.head(false, true))
string(obj?.head(nil))
string(obj?.head(nil)?.a)
string(obj?.head(obj))
string(obj?.head(ok))
string(obj?.head(s, b, s))
string(obj?.obj)
string(obj?.obj.a)
string(obj?.obj.obj)
string(obj[nil])
string(obj[s])
string(obj[s]?.a)
string(obj[s]?.b)
string(ok != ok)
string(ok && false)
string(ok && ok)
string(ok ? a : b)
string(ok ? add : 1)
string(ok ? add : a)
string(ok ? add : div)
string(ok ? arr : div)
string(ok ? b : true)
string(ok ? div : nil)
string(ok ? s : obj)
string(ok ? true : add)
string(ok and ok)
string(ok or true)
string(ok || ok)
string(ok || true)
string(ok)
string(ok) < s == ok
string(one(arr, true))
string(s != "c")
string(s != nil)
string(s != s)
string(s < "b")
string(s <= "a")
string(s <= s)
string(s == s)
string(s > s)
string(s >= "b")
string(s >= s)
string(s contains "c")
string(s contains s)
string(s endsWith s)
string(s in obj)
string(s startsWith s)
string(s)
string(s) startsWith s
string(s[a:a])
string(string("b"))
string(string("c"))
string(string(0.5))
string(string(1))
string(string(2))
string(string(a))
string(string(add))
string(string(arr))
string(string(b))
string(string(div))
string(string(nil))
string(string(obj?.head(obj, a)))
string(string(ok))
string(string(s))
string(toJSON(2))
string(toJSON(a))
string(toJSON(arr))
string(toJSON(b))
string(toJSON(f))
string(toJSON(nil))
string(toJSON(ok))
string(toJSON(s))
string(trim("a"))
string(trimSuffix("a"))
string(true != nil)
string(true ? "a" : div)
string(true ? a : ok)
string(true ? add : add)
string(true ? arr : f)
string(true ? div : b)
string(true ? s : div)
string(true) == s
string(values(obj))
string({"b": div, "b": nil})
toBase64("c" + "c")
toBase64(lower(s))
toBase64(obj.head("b", add))
toBase64(obj.head("b", arr, s, 2))
toBase64(obj.head("c"))
toBase64(obj.head(s))
toBase64(obj.head(s, ok, 0))
toBase64(obj?.head("c", div))
toBase64(obj?.head(s))
toBase64(obj?.head(s, arr, 1, b))
toBase64(ok ? "a" : obj)
toBase64(ok ? s : obj?.fn(div(1, ok), true ** obj))
toBase64(s + s)
toBase64(s)
toBase64(s) != "a" ? false : 0
toBase64(s) + s[b:a]
toBase64(s) == obj.head(ok, false)
toBase64(s) endsWith s
toBase64(string(2))
toBase64(string(a))
toBase64(string(add))
toBase64(string(arr))
toBase64(string(b))
toBase64(string(obj))
toBase64(string(true))
toBase64(toBase64("a"))
toBase64(toBase64(s))
toBase64(toJSON(a))
toBase64(toJSON(b))
toBase64(toJSON(f))
toBase64(toJSON(nil))
toBase64(toJSON(ok))
toBase64(toJSON(s))
toBase64(trim("c"))
toBase64(trimPrefix("b"))
toBase64(trimPrefix(s))
toBase64(trimSuffix("b"))
toBase64(trimSuffix(s))
toBase64(true ? "b" : arr)
toBase64(upper("b"))
toJSON(!false)
toJSON(!ok)
toJSON(!true)
toJSON("a" != nil)
toJSON("a" == "b")
toJSON("a" == nil)
toJSON("a" == s)
toJSON("a" contains s)
toJSON("a" matches s)
toJSON("a") >= trimSuffix("c")
toJSON("b" != s)
toJSON("b" < s)
toJSON("b" <= "a")
toJSON("b" == nil)
toJSON("b" > "b")
toJSON("b" >= s)
toJSON("b" in obj)
toJSON("b" matches "b")
toJSON("b" matches s)
toJSON("b") <= s
toJSON("b") matches s
toJSON("c" < "a")
toJSON("c" <= s)
toJSON("c" == nil)
toJSON("c" endsWith "a")
toJSON("c" matches "c")
toJSON("c" startsWith "c")
toJSON("c" startsWith s)
toJSON("c") in obj
toJSON("c") startsWith lower("c")
toJSON(-(a - 0))
toJSON(-(f - 0.5))
toJSON(-0)
toJSON(-0.5)
toJSON(-1)
toJSON(-2)
toJSON(-a)
toJSON(-b)
toJSON(-f)
toJSON(0 != 0)
toJSON(0 != 1)
toJSON(0 != 2)
toJSON(0 != b)
toJSON(0 != f)
toJSON(0 % a)
toJSON(0 % b)
toJSON(0 * 1)
toJSON(0 * f)
toJSON(0 ** 0.5)
toJSON(0 ** a)
toJSON(0 + 1)
toJSON(0 + a)
toJSON(0 + b)
toJSON(0 + f)
toJSON(0 - 0)
toJSON(0 - a)
toJSON(0 - b)
toJSON(0 .. 1)
toJSON(0 .. 2)
toJSON(0 .. a)
toJSON(0 < 0)
toJSON(0 < a)
toJSON(0 < f)
toJSON(0 <= 0)
toJSON(0 <= a)
toJSON(0 <= obj?.a)
toJSON(0 == 0)
toJSON(0 == 0.5)
toJSON(0 == 1)
toJSON(0 == a)
toJSON(0 == nil)
toJSON(0 >= 1)
toJSON(0 >= a)
toJSON(0 >= b)
toJSON(0 >= f)
toJSON(0 ^ 0.5)
toJSON(0 ^ b)
toJSON(0 in arr)
toJSON(0) + s
toJSON(0) in obj?.obj
toJSON(0.5 != 1)
toJSON(0.5 != a)
toJSON(0.5 * 0.5)
toJSON(0.5 * b)
toJSON(0.5 * f)
toJSON(0.5 ** 2)
toJSON(0.5 - b)
toJSON(0.5 / b)
toJSON(0.5 < 0)
toJSON(0.5 < b)
toJSON(0.5 == b)
toJSON(0.5 == f)
toJSON(0.5 == nil)
toJSON(0.5 > a)
toJSON(0.5 >= 1)
toJSON(0.5 >= f)
toJSON(0.5 ^ 0)
toJSON(0.5 ^ f)
toJSON(0.5) contains s
toJSON(1 != 2)
toJSON(1 != b)
toJSON(1 % a)
toJSON(1 % b)
toJSON(1 * 0)
toJSON(1 ** 0)
toJSON(1 + b)
toJSON(1 - 0)
toJSON(1 - 0.5)
toJSON(1 - a)
toJSON(1 == a)
toJSON(1 > 0.5)
toJSON(1 > b)
toJSON(1 >= b)
toJSON(1) startsWith s
toJSON(1) startsWith string(0)
toJSON(2 != 1)
toJSON(2 != f)
toJSON(2 % obj.a)
toJSON(2 * 0)
toJSON(2 * b)
toJSON(2 + 2)
toJSON(2 + f)
toJSON(2 - 0.5)
toJSON(2 - a)
toJSON(2 .. a)
toJSON(2 <= 1)
toJSON(2 == f)
toJSON(2 >= f)
toJSON(2 ^ 0)
toJSON(2 ^ a)
toJSON(2 ^ b)
toJSON([0])
toJSON([b])
toJSON(a != 0)
toJSON(a != 0.5 and obj?.b)
toJSON(a != b)
toJSON(a != nil)
toJSON(a % a)
toJSON(a % b)
toJSON(a * b)
toJSON(a ** 0)
toJSON(a ** 0.5)
toJSON(a ** f)
toJSON(a + 0.5)
toJSON(a + 2)
toJSON(a + b)
toJSON(a + f)
toJSON(a - 0)
toJSON(a - 0.5)
toJSON(a - a)
toJSON(a .. 0)
toJSON(a .. a)
toJSON(a .. b)
toJSON(a / 0.5)
toJSON(a / b)
toJSON(a < a)
toJSON(a <= 0)
toJSON(a <= 0.5)
toJSON(a <= 1)
toJSON(a <= a)
toJSON(a <= b)
toJSON(a <= f)
toJSON(a == 0)
toJSON(a == 0.5)
toJSON(a == 2)
toJSON(a == b)
toJSON(a > 0)
toJSON(a > 0.5)
toJSON(a > b)
toJSON(a > f)
toJSON(a >= 0.5)
toJSON(a >= a)
toJSON(a >= b)
toJSON(a >= f)
toJSON(a >= obj.a)
toJSON(a ^ f)
toJSON(a)
toJSON(a) != obj.obj
toJSON(a) < s
toJSON(a) == "c" ? 0.5 : nil
toJSON(abs(0.5))
toJSON(abs(a))
toJSON(abs(b))
toJSON(abs(obj.a))
toJSON(add != div)
toJSON(add != nil)
toJSON(add != obj.b)
toJSON(add == add)
toJSON(add(0, a))
toJSON(add(1, 2))
toJSON(add(a, 0))
toJSON(add(a, 1))
toJSON(add(a, a))
toJSON(add(b, 0))
toJSON(add(b, 2))
toJSON(add(b, b))
toJSON(all(arr, ok))
toJSON(any(arr, ok))
toJSON(arr == arr)
toJSON(arr == nil)
toJSON(arr)
toJSON(arr) > s
toJSON(arr) endsWith s
toJSON(arr) in obj?.obj
toJSON(arr) matches "b" ? b : obj
toJSON(arr[0])
toJSON(arr[a])
toJSON(arr[b:b])
toJSON(arr[b])
toJSON(b != 0)
toJSON(b != b)
toJSON(b % 1)
toJSON(b * 0.5)
toJSON(b * a)
toJSON(b ** a)
toJSON(b ** b)
toJSON(b ** f)
toJSON(b + 0.5)
toJSON(b + 2)
toJSON(b + f)
toJSON(b + obj.a)
toJSON(b - 0)
toJSON(b - 2)
toJSON(b - a)
toJSON(b - b)
toJSON(b - f)
toJSON(b / b)
toJSON(b < a)
toJSON(b < f)
toJSON(b <= 0)
toJSON(b <= 2)
toJSON(b <= a)
toJSON(b <= b)
toJSON(b == 0)
toJSON(b == 0.5)
toJSON(b == a)
toJSON(b == f)
toJSON(b == nil)
toJSON(b > a)
toJSON(b > b)
toJSON(b > obj.a)
toJSON(b >= b)
toJSON(b >= f)
toJSON(b ^ 2)
toJSON(b)
toJSON(b) != s
toJSON(b) >= s
toJSON(b) contains s
toJSON(b) startsWith s
toJSON(count(arr, false))
toJSON(count(arr, true))
toJSON(date("b", "b"))
toJSON(div == add)
toJSON(div == div)
toJSON(div == nil)
toJSON(div == obj.a)
toJSON(div == obj?.b)
toJSON(div(0, a))
toJSON(div(1, a))
toJSON(div(a, 2))
toJSON(div(a, a))
toJSON(div(a, b))
toJSON(div(b, 2))
toJSON(div(b, a))
toJSON(div(b, b))
toJSON(f != b)
toJSON(f != f)
toJSON(f != obj?.b)
toJSON(f * a)
toJSON(f * b)
toJSON(f * f)
toJSON(f ** a)
toJSON(f ** b)
toJSON(f ** f)
toJSON(f + 0.5)
toJSON(f + a)
toJSON(f + b)
toJSON(f - 0.5)
toJSON(f - a)
toJSON(f - b)
toJSON(f - f)
toJSON(f / a)
toJSON(f < 0)
toJSON(f < f)
toJSON(f <= 0)
toJSON(f <= f)
toJSON(f == a)
toJSON(f > 0)
toJSON(f > 0.5)
toJSON(f > a)
toJSON(f > f)
toJSON(f >= b)
toJSON(f ^ 0.5)
toJSON(f ^ 1)
toJSON(f)
toJSON(f) endsWith s
toJSON(f) startsWith s
toJSON(false ? false : 0)
toJSON(false ? false : b)
toJSON(false ? obj : 1)
toJSON(false or ok)
toJSON(false || true)
toJSON(false) contains s
toJSON(filter(arr, false))
toJSON(filter(arr, ok))
toJSON(first(arr))
toJSON(float(2))
toJSON(float(a))
toJSON(float(b))
toJSON(get(arr, 0))
toJSON(get(arr, b))
toJSON(get(obj, s))
toJSON(get(obj, s)?.a)
toJSON(int(0))
toJSON(int(2))
toJSON(int(a))
toJSON(int(b))
toJSON(int(f))
toJSON(last(arr))
toJSON(len("c"))
toJSON(len(arr))
toJSON(len(s))
toJSON(lower("c"))
toJSON(lower(s))
toJSON(map(arr, "c"))
toJSON(map(arr, 0))
toJSON(map(arr, 0.5))
toJSON(map(arr, 2))
toJSON(map(arr, a))
toJSON(map(arr, b))
toJSON(map(arr, f))
toJSON(map(arr, false))
toJSON(map(arr, s))
toJSON(max(0))
toJSON(max(b))
toJSON(max(f))
toJSON(min(2))
toJSON(min(a))
toJSON(min(f))
toJSON(nil != "b")
toJSON(nil != 0)
toJSON(nil != a)
toJSON(nil != add)
toJSON(nil != b)
toJSON(nil != div)
toJSON(nil != true)
toJSON(nil == 0)
toJSON(nil == a)
toJSON(nil == arr)
toJSON(nil == f)
toJSON(nil == false)
toJSON(nil == nil)
toJSON(nil == s)
toJSON(nil == true)
toJSON(nil in arr)
toJSON(nil in obj)
toJSON(nil) < s
toJSON(nil) endsWith s
toJSON(nil) in obj
toJSON(none(arr, false))
toJSON(none(arr, true))
toJSON(not false)
toJSON(not ok)
toJSON(not true)
toJSON(obj != obj)
toJSON(obj == nil)
toJSON(obj.a <= f)
toJSON(obj.a)
toJSON(obj.b / a)
toJSON(obj.b)
toJSON(obj.c)
toJSON(obj.fn(0))
toJSON(obj.fn(a))
toJSON(obj.fn(b))
toJSON(obj.head(!true))
toJSON(obj.head(0.5))
toJSON(obj.head(1, 0.5, nil, f))
toJSON(obj.head(2, a, div))
toJSON(obj.head(a))
toJSON(obj.head(a, "a"))
toJSON(obj.head(a, ok))
toJSON(obj.head(arr))
toJSON(obj.head(arr, "c"))
toJSON(obj.head(b))
toJSON(obj.head(b, "a"))
toJSON(obj.head(f))
toJSON(obj.head(f, f))
toJSON(obj.head(false))
toJSON(obj.head(nil))
toJSON(obj.head(nil, add))
toJSON(obj.head(obj).a)
toJSON(obj.head(obj)?.obj)
toJSON(obj.head(obj?.b))
toJSON(obj.head(ok))
toJSON(obj.head(ok, div, ok, b, nil))
toJSON(obj.head(s == f, div != s))
toJSON(obj.head(s))
toJSON(obj.head(s, add, 1))
toJSON(obj.head(true, "b"))
toJSON(obj.head(true, div))
toJSON(obj.obj)
toJSON(obj.obj.b)
toJSON(obj.obj.obj)
toJSON(obj.obj?.a)
toJSON(obj.obj?.obj)
toJSON(obj?.a)
toJSON(obj?.b)
toJSON(obj?.c)
toJSON(obj?.fn(a))
toJSON(obj?.fn(b))
toJSON(obj?.head("a", 0, 0.5, "a"))
toJSON(obj?.head("a", div))
toJSON(obj?.head("c"))
toJSON(obj?.head(-a))
toJSON(obj?.head(0))
toJSON(obj?.head(0, true))
toJSON(obj?.head(1))
toJSON(obj?.head(1, s, 1))
toJSON(obj?.head(a))
toJSON(obj?.head(a, 0, arr))
toJSON(obj?.head(arr, nil, s, arr, "b"))
toJSON(obj?.head(f))
toJSON(obj?.head(f, b))
toJSON(obj?.head(false))
toJSON(obj?.head(nil))
toJSON(obj?.head(ok, add, arr, ok))
toJSON(obj?.obj)
toJSON(obj?.obj[s])
toJSON(obj[nil])
toJSON(obj[s])
toJSON(ok != nil)
toJSON(ok != obj?.obj)
toJSON(ok != ok)
toJSON(ok != true)
toJSON(ok && false)
toJSON(ok == false)
toJSON(ok == nil)
toJSON(ok ? "b" : "c")
toJSON(ok ? "b" : ok)
toJSON(ok ? "c" : 0)
toJSON(ok ? 0.5 : s)
toJSON(ok ? 1 : a)
toJSON(ok ? a : add)
toJSON(ok ? a : arr)
toJSON(ok ? arr : arr)
toJSON(ok ? b : b)
toJSON(ok ? f : div)
toJSON(ok ? f : obj)
toJSON(ok ? nil : div)
toJSON(ok ? nil : true)
toJSON(ok ? ok : b)
toJSON(ok ? s : obj)
toJSON(ok and ok)
toJSON(ok || obj?.b)
toJSON(ok || true)
toJSON(ok)
toJSON(ok) == obj?.a
toJSON(ok) >= s
toJSON(ok) >= toJSON(b)
toJSON(one(arr, true))
toJSON(repeat(s, 2))
toJSON(s != "a")
toJSON(s != nil)
toJSON(s + "b")
toJSON(s < "b")
toJSON(s <= s)
toJSON(s == "b")
toJSON(s == nil)
toJSON(s == s)
toJSON(s > "a")
toJSON(s > s)
toJSON(s >= s)
toJSON(s contains s)
toJSON(s matches "b")
toJSON(s matches s)
toJSON(s startsWith "a")
toJSON(s startsWith "c")
toJSON(s startsWith s)
toJSON(s)
toJSON(s) in obj
toJSON(s[0:0])
toJSON(string("a"))
toJSON(string("c"))
toJSON(string(0.5))
toJSON(string(add))
toJSON(string(arr))
toJSON(string(div))
toJSON(string(false))
toJSON(string(obj))
toJSON(string(ok))
toJSON(string(true))
toJSON(toBase64(s))
toJSON(toJSON(0))
toJSON(toJSON(2))
toJSON(toJSON(a))
toJSON(toJSON(arr))
toJSON(toJSON(b))
toJSON(toJSON(f))
toJSON(toJSON(nil))
toJSON(toJSON(ok))
toJSON(toJSON(s))
toJSON(trimPrefix("a"))
toJSON(trimPrefix(s))
toJSON(trimSuffix("b"))
toJSON(trimSuffix("c"))
toJSON(true != false)
toJSON(true != ok)
toJSON(true && ok)
toJSON(true && true)
toJSON(true ? arr : arr)
toJSON(true ? b : add)
toJSON(true ? false : s)
toJSON(true ? ok : obj)
toJSON(true ? ok : s)
toJSON(true and false)
toJSON(true and obj.obj)
toJSON(true and ok)
toJSON(true || ok)
toJSON(true) + upper("a")
toJSON(true) > obj?.head("a")
toJSON(upper("a"))
toJSON(upper(s))
toJSON({"a": true, "b": 2, "c": a})
trim("a") != s
trim("b" + "a")
trim("c" + "c")
trim(b != b ? s : "b")
trim(false ? obj : s)
trim(lower(s))
trim(obj.head("a"))
trim(obj.head("a", 0))
trim(obj.head("c"))
trim(obj.head("c", obj))
trim(obj.head("c", ok, 0.5))
trim(obj.head(s))
trim(obj.head(s, 1, ok))
trim(obj.head(s, false, f), s)
trim(obj?.head("c"))
trim(obj?.head("c", a, nil, s, "a"))
trim(obj?.head(s))
trim(ok ? "a" : false)
trim(s + s)
trim(s)
trim(s) != obj?.head(div, s, nil, add)
trim(s) in obj?.obj
trim(s) startsWith string(nil)
trim(s, s)
trim(s, toBase64("a"))
trim(s, toBase64(s))
trim(s[a:1])
trim(s[a:b])
trim(string("a"))
trim(string(a))
trim(string(b))
trim(string(div))
trim(string(false))
trim(string(nil))
trim(string(obj))
trim(string(ok))
trim(toBase64("a"))
trim(toBase64(s))
trim(toBase64(trim(s)))
trim(toJSON(0 != a))
trim(toJSON(0 + 0.5))
trim(toJSON(b))
trim(toJSON(false))
trim(toJSON(nil != div))
trim(toJSON(nil))
trim(toJSON(ok))
trim(toJSON(s))
trim(toJSON(true))
trim(trim(s))
trim(trim(trimSuffix(s)))
trim(trimPrefix("b"))
trim(trimPrefix("c"))
trim(trimSuffix("a"))
trim(trimSuffix(s))
trim(true ? "c" : add)
trim(upper(s))
trimPrefix("a" + "b")
trimPrefix("a") == obj.head(b)
trimPrefix("b" + "b")
trimPrefix("c" + s)
trimPrefix(lower("c"))
trimPrefix(lower(s))
trimPrefix(obj.head("b", s))
trimPrefix(obj.head("c", f))
trimPrefix(obj.head(s))
trimPrefix(obj?.head("a", div))
trimPrefix(obj?.head("c"))
trimPrefix(obj?.head(s))
trimPrefix(ok ? "c" : div)
trimPrefix(ok ? s : obj)
trimPrefix(s + s)
trimPrefix(s)
trimPrefix(s) > s
trimPrefix(s, s)
trimPrefix(s[0:2])
trimPrefix(string("b"))
trimPrefix(string(a))
trimPrefix(string(arr))
trimPrefix(string(b))
trimPrefix(string(f))
trimPrefix(string(false))
trimPrefix(string(obj))
trimPrefix(string(ok))
trimPrefix(string(s))
trimPrefix(toBase64("b"))
trimPrefix(toBase64(s))
trimPrefix(toJSON(0.5))
trimPrefix(toJSON(1))
trimPrefix(toJSON(2))
trimPrefix(toJSON(ok))
trimPrefix(toJSON(s))
trimPrefix(trim("b"))
trimPrefix(trim("c", "a"))
trimPrefix(trim(s))
trimPrefix(trimPrefix("b"))
trimPrefix(trimPrefix(s))
trimPrefix(trimSuffix("b"))
trimPrefix(trimSuffix("c"))
trimPrefix(trimSuffix(s))
trimSuffix("b" + s)
trimSuffix("b") contains s
trimSuffix("c") endsWith s
trimSuffix(false ? obj : s)
trimSuffix(lower("b"))
trimSuffix(obj.head("c", 0.5, arr, obj))
trimSuffix(obj.head(s, nil, obj))
trimSuffix(obj.head(toJSON(b, b, s, 0.5, nil)))
trimSuffix(obj?.head("a"))
trimSuffix(obj?.head("c"))
trimSuffix(obj?.head("c", 0.5))
trimSuffix(obj?.head(s))
trimSuffix(obj?.head(s, 2, div))
trimSuffix(obj?.head(s, div, true, b))
trimSuffix(ok ? s : add)
trimSuffix(repeat(s, 0))
trimSuffix(s + "a")
trimSuffix(s + "b")
trimSuffix(s + "c")
trimSuffix(s + s)
trimSuffix(s)
trimSuffix(s) == s
trimSuffix(s) > s
trimSuffix(s, "b") startsWith s
trimSuffix(s, s)
trimSuffix(string("a"))
trimSuffix(string("b"))
trimSuffix(string(0.5))
trimSuffix(string(a))
trimSuffix(string(add))
trimSuffix(string(arr))
trimSuffix(string(b))
trimSuffix(string(false))
trimSuffix(string(nil))
trimSuffix(toJSON("a"))
trimSuffix(toJSON("b"))
trimSuffix(toJSON(a))
trimSuffix(toJSON(arr))
trimSuffix(toJSON(b))
trimSuffix(toJSON(f))
trimSuffix(toJSON(nil))
trimSuffix(toJSON(obj?.head("b", add)))
trimSuffix(toJSON(obj?.obj))
trimSuffix(toJSON(ok))
trimSuffix(toJSON(toJSON(s)))
trimSuffix(toJSON(true))
trimSuffix(trim("c"))
trimSuffix(trim(s))
trimSuffix(trimPrefix("a"))
trimSuffix(trimPrefix("b"))
trimSuffix(trimPrefix(s))
trimSuffix(trimSuffix("b"))
trimSuffix(trimSuffix("c"))
trimSuffix(trimSuffix(s))
trimSuffix(true ? s : a)
trimSuffix(upper("b"))
trimSuffix(upper(s))
true != false && a != a
true != false == obj.a
true != nil or ok && ok
true != obj.a
true != obj.b
true != obj.head(a % a)
true != obj.obj
true != obj.obj.a
true != obj?.a
true != obj?.b
true != obj?.obj
true != ok and arr != nil
true != true || obj?.obj
true && false or false ? f : add
true && obj.a
true && obj.b
true && obj.obj
true && obj.obj?.obj
true && obj?.a
true && obj?.b
true && obj?.head(add)
true && obj?.head(s)
true && obj?.obj
true && obj?.obj?.obj
true && ok ? arr : b
true && ok or ok
true && true || ok
true == nil != obj?.head(obj)
true == nil in obj?.head(arr, div, obj)
true == obj.a
true == obj.b
true == obj.head(ok ? one("b", ok) : arr)
true == obj.obj
true == obj.obj?.b
true == obj?.a
true == obj?.b
true == obj?.head(b)
true == obj?.obj
true == ok != ok
true == ok == obj.head(add)
true == ok or obj.b
true ? "a" : f > f
true ? "b" : obj.obj
true ? "b" : obj?.a
true ? "b" : obj?.b
true ? "c" : nil == ok
true ? "c" : obj?.b
true ? 0 : arr != nil != ok
true ? 0 : obj?.b
true ? 0 : obj?.obj
true ? 0.5 : obj.a
true ? 0.5 : obj.b
true ? 0.5 : obj?.a
true ? 1 : obj.head(s or obj)
true ? 1 : obj?.head(s[obj])
true ? 2 : obj.fn(b?.fn(div))
true ? 2 : obj.fn(div(obj), keys(2), a?.a, ok * div)
true ? 2 : obj.head(filter(arr, any(arr, div)))
true ? 2 : obj.obj
true ? 2 : obj?.fn(ok, b startsWith obj)
true ? 2 : obj?.obj
true ? a : b + f
true ? a : obj.b
true ? a : obj.fn(abs(true).a)
true ? a : obj.obj
true ? a : obj?.a
true ? a : obj?.b
true ? a : obj?.fn(f.a)
true ? a : obj?.obj
true ? add : obj.b
true ? add : obj.fn(all(div(b), div(add)))
true ? add : obj.obj
true ? add : obj?.head(add(f, b))
true ? arr : "c" + s
true ? arr : a == obj.a
true ? arr : nil == f
true ? arr : obj.a
true ? arr : obj.b
true ? arr : obj.fn(arr?.head(f.fn(false)))
true ? arr : obj.fn(s matches s)
true ? arr : obj.head(keys(s >= obj, 1 .. true, any("a", a)), add(div.fn(add, 0.5, nil), a, add(f, false), a.a, -f)).b
true ? arr : obj.obj
true ? arr : obj?.a
true ? b : 0 / b
true ? b : 2 * obj.a
true ? b : a >= b
true ? b : div == div
true ? b : nil != b
true ? b : obj.a
true ? b : obj.fn(a > obj)
true ? b : obj.head(1 matches f.b, div(count(s, div), f < obj, obj?.obj, div(f)))
true ? b : obj.obj
true ? b : obj.obj?.obj
true ? b : obj?.a
true ? b : obj?.a.obj
true ? b : obj?.b
true ? div : obj.b
true ? div : obj?.a
true ? div : obj?.obj
true ? f : 2 + a
true ? f : arr[b]
true ? f : f != obj.a
true ? f : f < a ** 2
true ? f : obj.head(add(f.b, ok, a?.head(s, 0, f, true)))
true ? f : obj.head(none(b, "b"), a.a)
true ? f : obj.obj
true ? f : obj?.a?.obj
true ? f : obj?.b
true ? f : obj?.obj
true ? f : obj?.obj.fn(div(obj)?.obj .. none(ok, s).obj)
true ? f : obj?.obj?.obj
true ? false : obj.a
true ? false : obj.fn(none(obj, arr) startsWith b?.fn(f))
true ? false : obj.head(div(any(0, b)))
true ? false : obj?.head(add and div)
true ? false : obj?.head(b)
true ? nil : 0 % b
true ? nil : a - f
true ? nil : a <= obj.head(nil, "a", ok, nil)
true ? nil : nil != b
true ? nil : obj.head(all(add(add), f and 0.5))
true ? nil : obj.obj
true ? nil : obj.obj?.a
true ? nil : obj?.b
true ? nil : obj?.head(obj.obj < a.fn(false))
true ? nil : obj?.obj
true ? obj : f * f
true ? obj : f + b - 1
true ? obj : obj.a
true ? obj : obj.b
true ? obj : obj.fn(none(a, div or arr)).obj
true ? obj : obj.fn(s.head(arr), ok > ok)
true ? obj : obj.head(ok, map(arr, !ok))?.a?.a
true ? obj : obj.head(values(s?.b), -b <= (ok and add))
true ? obj : obj?.a
true ? ok : b in obj.b
true ? ok : obj.b
true ? ok : obj.obj.obj
true ? ok : obj?.b.b
true ? ok : obj?.fn(not 0)
true ? ok : obj?.obj
true ? s : "a" matches s
true ? s : arr in obj?.head(b)
true ? s : f ^ (0.5 / b)
true ? s : obj.a
true ? s : obj.b
true ? s : obj.head(div(add?.head(arr, f, 0.5)))
true ? s : obj.obj
true ? s : obj?.a
true ? s : obj?.head(obj.a, div)
true ? true : nil == obj.obj
true ? true : obj.obj
true ? true : ok && ok
true and false ? b : obj
true and obj.a
true and obj.b
true and obj.head(obj.obj)
true and obj.obj
true and obj?.a
true and obj?.a >= b
true and obj?.b
true and obj?.obj
true and obj?.obj == ok
true and obj?.obj.obj
true and ok and obj?.head(div)
true or obj.a
true or obj.a.a
true or obj.a.obj
true or obj.b
true or obj.fn(a?.obj, b?.b, ok)
true or obj.fn(b, add(add)?.obj).a
true or obj.fn(div?.fn(add), ok?.head(div, b))
true or obj.fn(join(b))
true or obj.fn(s != add)
true or obj.head(add?.a, false > div)
true or obj.head(any(f, ok))
true or obj.head(div(arr != b, add(add), 2 != arr, div || ok), b[b] >= ok > s, fromJSON(get(obj)))
true or obj.head(duration(f.a))
true or obj.head(filter(div, a) endsWith div.fn(obj, s, obj, b), arr.obj.obj, not b or a ? ok : true)
true or obj.head(join(1))
true or obj.head(none(ok?.b, count(0, 0.5)))
true or obj.obj
true or obj.obj.a?.obj
true or obj.obj?.head(map(0.5, f) matches one(obj, "c"))
true or obj?.a
true or obj?.a.fn(ok + b?.fn(obj))
true or obj?.a.head("c" * b matches not div)
true or obj?.a?.a
true or obj?.b
true or obj?.fn(arr.b && obj?.head(b), ok.fn(obj .. arr))
true or obj?.fn(div(b, arr) and obj?.b, obj[add(b)])
true or obj?.fn(f, f).a
true or obj?.fn(hasPrefix(add(ok)))
true or obj?.fn(map(not ok, "b" < add), map("b" && a, one(0, add)))
true or obj?.head(add(f))
true or obj?.head(one(none(add, add), add?.b))
true or obj?.obj
true or obj?.obj.head(get(add(s), div))
true or ok || obj.a
true || obj.a
true || obj.a.a
true || obj.b
true || obj.fn((add || div) - b)
true || obj.fn(arr, any(add(arr, ok, div), 0 startsWith false))
true || obj.head(a?.fn(arr contains b, div?.head(0, add, false), obj.head(0.5), values(f), s.b))?.a
true || obj.head(add(abs(b)))
true || obj.head(add(ok.obj), any(add, f) != obj.head(b, add, arr))
true || obj.head(all(f, 0), div("a", true))
true || obj.head(count("a", obj))
true || obj.head(f.b)
true || obj.head(f?.fn(0) <= b.b)
true || obj.head(filter(add.head(s), map(s, 0.5)))
true || obj.head(obj.b)
true || obj.head(obj?.fn(b))
true || obj.obj
true || obj.obj == add
true || obj.obj.a
true || obj.obj?.b
true || obj.obj?.obj
true || obj?.a
true || obj?.b
true || obj?.fn(a?.head(div(div)), 2 .. add?.b)
true || obj?.fn(div * a == ok?.b)
true || obj?.fn(div(0.5 && 0.5, s?.head(0.5))).a
true || obj?.fn(get(a, arr))
true || obj?.head(all(f.b, #))
true || obj?.head(div(nil, "b"), add(nil, f))
true || obj?.head(repeat(now(true, div, b, ok)), now(s, div(add, "c"))).a
true || obj?.head(true == nil)
true || obj?.obj
true || true or obj.obj
upper("a" + "a")
upper("a") startsWith s
upper("b") < s
upper("b") <= s
upper("c") <= s
upper(f >= 2 ? b : s)
upper(false ? 0.5 : s)
upper(lower(s))
upper(obj.head(s))
upper(obj.head(s, arr, obj))
upper(obj.head(s, ok))
upper(obj?.head("a"))
upper(obj?.head("b"))
upper(obj?.head(s))
upper(obj?.head(s, f))
upper(ok ? s : ok)
upper(s + s)
upper(s)
upper(s) <= s
upper(s) matches s
upper(string("a"))
upper(string("b"))
upper(string(0))
upper(string(0.5))
upper(string(a))
upper(string(add))
upper(string(b))
upper(string(f))
upper(string(nil))
upper(string(obj))
upper(string(ok))
upper(string(true))
upper(toBase64("c"))
upper(toBase64(s))
upper(toJSON("c"))
upper(toJSON(2))
upper(toJSON(a))
upper(toJSON(arr))
upper(toJSON(f))
upper(toJSON(false))
upper(toJSON(ok))
upper(toJSON(s))
upper(toJSON(true))
upper(trim("c"))
upper(trim(s))
upper(trimPrefix(s))
upper(trimSuffix("a"))
upper(trimSuffix(s))
upper(upper(s))
values(obj)
values(obj) != obj?.obj
values(obj)[a]
{"a": "a", "c": a}.obj
{"a": "a"}?.obj
{"a": "c"}?.a
{"a": 0 > b}
{"a": 0, "a": "a", "a": nil, "c": ok}.b
{"a": 0, "b": f}.obj
{"a": 0, "c": 0.5}.a
{"a": 0.5, "a": s}?.b
{"a": 0.5, "b": b}?.obj
{"a": 0.5, "b": obj}?.obj
{"a": 0.5, "c": a}.b
{"a": 0.5, "c": false, "c": arr, "c": obj}.b
{"a": 0}.b
{"a": 0}?.a
{"a": 0}?.b
{"a": 0}?.obj
{"a": 1}.b
{"a": 1}.obj
{"a": 2 >= 1}
{"a": 2, "a": obj, "b": ok}?.obj
{"a": 2, "b": a, "b": f}.b
{"a": 2}.b
{"a": a - 1}
{"a": a / 0.5}
{"a": a, "a": arr}
{"a": a, "a": b, "a": "b", "c": f, "c": ok}?.obj
{"a": a, "a": div}?.obj?.a
{"a": a, "a": ok}?.b
{"a": a, "b": obj?.b}
{"a": a, "c": add, "c": nil}?.obj?.b
{"a": a, "c": obj.a}
{"a": a, "c": s, "b": nil}?.a
{"a": add(b, 2)}
{"a": add(b, b)}
{"a": add, "a": ok ? add : obj}?.b
{"a": add, "a": s, "b": div}.b
{"a": add}
{"a": add}.a
{"a": arr, "b": 1, "c": 0.5, "b": f}?.b
{"a": arr, "c": arr}
{"a": arr}
{"a": arr} == obj
{"a": arr}.a
{"a": arr}.b
{"a": a}
{"a": a}.obj
{"a": a}?.a
{"a": a}?.obj
{"a": b + b}
{"a": b - a}
{"a": b - f}
{"a": b / b}
{"a": b, "a": obj, "a": div}?.b
{"a": b, "a": ok}
{"a": b, "b": a, "c": 0}?.b
{"a": b, "b": s, "b": s}.b
{"a": b, "c": "b"}.a
{"a": b, "c": b}?.a
{"a": b}
{"a": b}.a
{"a": b}.b
{"a": b}.obj
{"a": b}?.a
{"a": b}?.b
{"a": b}?.obj
{"a": b}?.obj?.obj
{"a": div == nil}
{"a": div, "a": b, "c": nil, "a": 0}?.obj
{"a": div, "a": ok, "b": s}.a
{"a": div, "b": arr}.b
{"a": div, "c": nil}.a
{"a": div, "c": true}.b
{"a": div}
{"a": div}.b
{"a": div}.obj
{"a": div}?.obj
{"a": f, "a": add}.b
{"a": f, "a": obj}?.b
{"a": f, "b": div(b, a)}
{"a": false, "b": 1}?.b
{"a": false}.obj
{"a": f}
{"a": f}.a
{"a": f}.obj
{"a": f}?.a
{"a": f}?.obj
{"a": map(arr, a)}
{"a": map(arr, obj)}
{"a": nil, "a": b}.a
{"a": nil, "b": 1}?.b
{"a": nil}.obj
{"a": nil}?.a
{"a": obj, "a": arr}.a
{"a": obj, "a": nil}?.b
{"a": obj, "b": obj?.obj, "a": add}
{"a": obj, "b": obj}.b
{"a": obj, "c": f, "a": true}.obj
{"a": obj, "c": false, "b": arr, "b": "b"}?.a
{"a": obj.a}
{"a": obj.b}
{"a": obj.head(b, ok, nil)}
{"a": obj.obj}
{"a": obj?.a}
{"a": obj?.head(arr)}
{"a": obj?.head(b)}
{"a": obj?.head(f)}
{"a": obj?.head(obj, nil, s, false)}
{"a": obj?.obj}.b
{"a": obj}
{"a": obj}.b
{"a": obj}.obj
{"a": obj}?.b
{"a": ok, "b": f}
{"a": ok, "b": ok}?.obj
{"a": ok}
{"a": ok}.a
{"a": ok}.b
{"a": ok}?.a
{"a": ok}?.obj
{"a": s, "a": "a", "a": b}.a
{"a": s, "a": arr}?.obj
{"a": s, "a": b}.obj
{"a": s, "a": obj}.b
{"a": s, "b": nil, "c": add}?.b?.obj
{"a": s, "c": div}.obj
{"a": s, "c": div}?.a
{"a": string(f)}
{"a": s}
{"a": s}.a
{"a": toBase64("a")}
{"a": true || true}
{"a": true}.a
{"a": true}.b
{"a": true}?.a
{"b": "a", "a": "b", "a": add}.a
{"b": "a", "b": add, "a": div}?.obj
{"b": "a"}?.a
{"b": "b", "b": "b"}.a
{"b": "b", "b": arr, "b": a}.obj
{"b": "b", "b": true}?.a
{"b": "c", "b": "a"}.a
{"b": 0 == a, "a": ok}
{"b": 0, "c": arr}.b
{"b": 0.5, "b": arr, "a": 0}?.b
{"b": 0.5, "c": f, "b": div, "c": ok}?.b
{"b": 0.5, "c": ok}.b
{"b": 0}.obj
{"b": 0}.obj?.obj != div
{"b": 0}?.a
{"b": 0}?.obj
{"b": 1 .. a}
{"b": 1 < b}
{"b": 1, "c": f}?.a
{"b": 1}.a
{"b": 2, "b": a}?.a
{"b": 2}?.b
{"b": a, "a": add}
{"b": a, "a": false, "c": arr}.obj
{"b": a, "c": b != a}
{"b": add, "a": a, "a": div, "a": nil, "a": a}.obj
{"b": add, "a": true, "b": 0, "c": 0.5, "b": nil}.obj
{"b": add, "b": ok}?.a
{"b": add, "b": s}.b
{"b": add}
{"b": add}.b
{"b": add}.obj?.obj
{"b": add}?.obj
{"b": arr, "a": arr, "b": add}?.obj
{"b": arr, "a": div}
{"b": arr, "b": add}
{"b": arr, "b": f, "b": arr, "b": 0}?.b
{"b": arr, "c": f, "a": nil}[s]?.a
{"b": arr}
{"b": arr}?.a
{"b": a}
{"b": a}.a
{"b": a}.b
{"b": a}?.obj
{"b": b .. b}
{"b": b < f}
{"b": b == a}
{"b": b, "a": ok}?.a
{"b": b, "b": 0, "b": b}.obj
{"b": b, "b": a}?.a
{"b": b, "b": div, "b": arr, "b": add}.a
{"b": b, "b": obj.obj}
{"b": b, "c": a}.obj
{"b": b}
{"b": b}.a
{"b": b}.obj
{"b": b}?.a
{"b": b}?.obj
{"b": div, "a": a > a}
{"b": div, "a": arr, "a": obj, "c": 0}.a
{"b": div, "b": add}?.b
{"b": div, "c": ok, "c": 2}?.obj
{"b": div}
{"b": div}.b
{"b": div}?.a
{"b": div}?.obj
{"b": f != 0}
{"b": f <= 0.5}
{"b": f, "a": false}?.a
{"b": f, "b": add}?.obj
{"b": f, "b": s}?.obj
{"b": f, "c": arr, "b": div}?.obj
{"b": f, "c": arr, "b": f}.a
{"b": f, "c": f}?.a
{"b": false ? 0 : 2}
{"b": false, "a": obj}.b
{"b": false, "c": s}.a
{"b": f}
{"b": f}?.a?.a
{"b": f}?.obj
{"b": nil == nil, "c": obj?.obj}?.b
{"b": nil, "a": f, "b": "c"}.obj
{"b": nil, "a": f, "c": 1}.obj
{"b": nil, "a": obj, "a": f}.a
{"b": nil, "a": obj}.b
{"b": nil, "b": b}.b
{"b": nil, "b": div}.b
{"b": nil, "b": true}.b
{"b": nil, "c": div, "c": div}.b
{"b": nil}.obj
{"b": nil}?.a
{"b": not ok, "a": a}
{"b": not ok}
{"b": obj != obj.b}
{"b": obj, "a": add, "c": s}.a
{"b": obj, "a": a}?.obj
{"b": obj, "c": f, "b": nil}?.a
{"b": obj.a}
{"b": obj.b}
{"b": obj.head("b")}
{"b": obj.head(nil, b, obj)}
{"b": obj.head(s)}
{"b": obj.obj}
{"b": obj?.a}
{"b": obj?.b}
{"b": obj}
{"b": obj}.b
{"b": obj}.b?.a
{"b": obj}.obj
{"b": obj}?.b
{"b": ok, "a": a}.obj
{"b": ok, "a": b}.obj
{"b": ok, "c": 1, "c": f}?.a
{"b": ok}
{"b": ok}.obj
{"b": ok}?.a
{"b": s, "a": b, "c": obj, "b": f}?.obj
{"b": s, "b": 0, "b": nil, "c": 0}?.a
{"b": s, "b": f}?.obj
{"b": s, "c": "a", "b": div, "c": 1}.b
{"b": string(div)}
{"b": s}
{"b": s}.a
{"b": s}?.a
{"b": true ? obj : add}
{"b": true, "b": arr, "a": add} == obj ? add : b
{"b": true}.obj
{"b": true}?.obj
{"c": "a", "a": obj, "c": "b"}?.b?.obj?.b
{"c": "a", "c": obj}.b
{"c": "a"}?.a
{"c": "b", "b": false}?.obj
{"c": "b"}.a
{"c": "b"}.obj
{"c": "b"}?.obj
{"c": "c"}?.obj?.fn(arr)
{"c": 0 ** 0, "c": ok ? arr : f}
{"c": 0, "a": s, "c": add}.b
{"c": 0, "c": 0, "a": "b", "b": false}.b
{"c": 0, "c": f, "b": false}?.obj
{"c": 0, "c": f}.a
{"c": 0, "c": obj}?.a?.a
{"c": 0, "c": s, "b": s, "c": false, "b": obj}.a
{"c": 0.5, "b": b, "c": a, "b": 2}?.b
{"c": 0.5, "c": b, "b": 0}.b
{"c": 0.5, "c": true, "a": true}.b
{"c": 0}.b
{"c": 0}.obj
{"c": 1, "b": ok}?.b
{"c": 1}?.a
{"c": 2, "a": "c"}.b
{"c": 2}.a
{"c": 2}?.b
{"c": a != 1}
{"c": a .. 2}.obj
{"c": a / 0}
{"c": a <= 1}
{"c": a, "a": arr}?.obj
{"c": a, "a": b, "b": div, "b": f, "b": div}.b
{"c": a, "b": ok ? "c" : div}
{"c": a, "b": s, "a": s, "c": b, "a": add}.obj
{"c": a, "c": true}?.obj
{"c": abs(a)}
{"c": add, "a": true, "b": s}?.a
{"c": add, "b": 0, "b": b, "b": 1}?.obj
{"c": add, "b": 0.5, "c": arr}?.obj
{"c": add, "b": a, "b": s}?.a
{"c": add, "b": arr}?.obj
{"c": add, "b": obj, "b": false}?.b
{"c": add, "b": ok, "b": f, "b": s}.a
{"c": add, "c": arr}
{"c": add, "c": b}?.b
{"c": add}
{"c": add}.a?.obj
{"c": add}.b
{"c": add}.obj
{"c": add}?.a
{"c": arr != nil}
{"c": arr == arr}
{"c": arr, "a": nil, "b": b}.obj
{"c": arr, "c": arr}?.a
{"c": arr, "c": s}.obj
{"c": arr}
{"c": arr}.a
{"c": arr}.obj
{"c": arr}?.b
{"c": arr}?.obj
{"c": arr}?.obj?.b
{"c": a}
{"c": a}.a
{"c": a}.obj
{"c": a}?.a
{"c": b % a}
{"c": b, "a": obj, "b": 0.5, "a": obj, "a": s}.b
{"c": b, "c": "c", "a": f, "b": div, "c": b}?.obj
{"c": b, "c": f, "a": arr}?.b
{"c": b}
{"c": b}.a
{"c": b}.obj
{"c": b}?.b
{"c": b}?.obj
{"c": div, "a": a}
{"c": div, "a": ok, "b": obj}?.obj
{"c": div, "b": add}.obj
{"c": div, "b": b, "a": arr, "b": true}.b
{"c": div, "c": ok}?.a
{"c": div}
{"c": div}.a
{"c": div}.b
{"c": div}.obj
{"c": div}?.b
{"c": f - f}
{"c": f, "a": "b", "b": "a", "b": 0.5}?.b
{"c": f, "b": 0.5}.b
{"c": f, "b": add, "a": a}.b
{"c": f, "b": obj, "b": 2}?.obj
{"c": false}?.b
{"c": first(arr)}.a
{"c": f}
{"c": f}.a
{"c": f}.obj
{"c": f}?.a
{"c": f}?.obj
{"c": get(arr, a), "a": a != nil}
{"c": get(arr, b)}
{"c": get(obj, s)}
{"c": nil, "a": false, "c": arr, "a": f, "a": nil}.b
{"c": nil, "b": false}?.a
{"c": nil}.a
{"c": nil}.b
{"c": nil}?.a
{"c": obj, "a": div}.b
{"c": obj, "b": b}?.a
{"c": obj, "c": add}
{"c": obj, "c": nil}?.b
{"c": obj.fn(a)}
{"c": obj.head(arr, f), "a": div, "b": s}.obj
{"c": obj.head(div)}
{"c": obj.obj}
{"c": obj?.a}
{"c": obj?.obj}
{"c": obj}
{"c": obj}.a
{"c": obj}.b
{"c": obj}.obj
{"c": obj}?.a
{"c": obj}?.b
{"c": ok and ok}
{"c": ok, "c": 0}?.a
{"c": ok}
{"c": ok}.b
{"c": s, "a": b}?.a
{"c": s, "b": a}?.b
{"c": s, "b": f}?.a
{"c": s, "b": obj, "a": div}?.a
{"c": s, "c": "c", "b": false, "a": a}?.a
{"c": s, "c": add, "b": arr, "a": ok, "b": obj}?.obj
{"c": s, "c": div}.obj
{"c": s}
{"c": s}.b
{"c": s}.obj
{"c": toBase64(s)}
{"c": toJSON(a)}
{"c": true, "c": a}.obj
{"c": true}?.b
